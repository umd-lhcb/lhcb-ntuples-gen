headers:
    user:
        - functor/rdx/cut.h
        - functor/rdx/kinematic.h
        - functor/basic.h

keep:
    # Event uid, also needed for keeping only one B for multi-B events
    - runNumber
    - eventNumber
    - GpsTime

rename:
    # For pseudo-random sequence generation
    b0_PT: b_pt

    #######################
    # Isolation variables #
    #######################
    b0_ISOLATION_BDT: iso_bdt

    #######################
    # Kinematic variables #
    #######################
    # B0
    b0_M: b_m
    # D*
    dst_P: dst_p
    dst_PT: dst_pt
    dst_PE: dst_e

calculation:
    #################
    # Fit variables #
    #################
    el: double; GEV(FitVar_El)
    mm2: double; GEV2(FitVar_Mmiss2)
    q2: double; GEV2(FitVar_q2)

    ###################
    # Selection flags #
    ###################
    # D0 selection
    flag_d0_pid_ok: bool; FLAG_SEL_D0_PID_OK_RUN1(k_PIDK, pi_PIDK, k_isMuon, pi_isMuon)
    flag_d0: >-
        bool; FLAG_SEL_D0_RUN1(
        flag_d0_pid_ok,
        k_PT, pi_PT, k_P, pi_P,
        k_Hlt1TrackMVADecision_TOS, pi_Hlt1TrackMVADecision_TOS,
        k_IPCHI2_OWNPV, pi_IPCHI2_OWNPV,
        k_TRACK_GhostProb, pi_TRACK_GhostProb,
        d0_PT, true,
        d0_ENDVERTEX_NDOF, d0_ENDVERTEX_CHI2,
        d0_IP_OWNPV, d0_IPCHI2_OWNPV,
        d0_DIRA_OWNPV, d0_FDCHI2_OWNPV, d0_M
        )
    # Variables needed for Mu selection
    trk_mu:  ^XYZVector; XYZVector(mu_PX, mu_PY, mu_PZ)
    trk_k:   ^XYZVector; XYZVector(k_PX, k_PY, k_PZ)
    trk_pi:  ^XYZVector; XYZVector(pi_PX, pi_PY, pi_PZ)
    trk_spi: ^XYZVector; XYZVector(spi_PX, spi_PY, spi_PZ)
    other_trks: ^vector<XYZVector>; BUILD_VEC(trk_k, trk_pi, trk_spi); BUILD_VEC(trk_k, trk_pi)
    mu_eta: double; ETA(mu_P, mu_PZ)
    # Mu selection
    flag_good_trks: bool; FLAG_SEL_GOOD_TRACKS(trk_mu, other_trks)
    flag_mu_pid_ok: bool; FLAG_SEL_MU_PID_OK_RUN1(mu_isMuon, mu_PIDmu, mu_PIDe, 1.0)
    # The last '1.0' represents the bdt_mu branch
    flag_mu: >-
        bool; FLAG_SEL_MU_RUN1(
        flag_good_trks, flag_mu_pid_ok,
        mu_P, mu_eta,
        mu_IPCHI2_OWNPV, mu_TRACK_GhostProb
        )
    # D0Mu combo selection
    b_fd_trans: double; TMath::Sqrt(b_ENDVERTEX_X - b_OWNPV_X, b_ENDVERTEX_Y - b_OWNPV_Y)
    flag_d0mu: >-
        bool; FLAG_SEL_BMINUSD0_RUN1(
        flag_d0, flag_mu,
        b_ENDVERTEX_CHI2, b_ENDVERTEX_NDOF,
        b_fd_trans,
        b_m,
        mu_PX, mu_PY, mu_PZ,
        d0_PX, d0_PY, d0_PZ, d0_M
        )
    # D*Mu combo selection
    b0_fd_trans: double; FD_TRANS(b0_ENDVERTEX_X, b0_OWNPV_X, b0_ENDVERTEX_Y, b0_OWNPV_Y)
    flag_dstmu: >-
        bool; FLAG_SEL_B0DST_RUN1(
        flag_d0, flag_mu,
        spi_TRACK_GhostProb,
        dst_ENDVERTEX_CHI2, dst_ENDVERTEX_NDOF,
        dst_M, d0_M,
        b0_ENDVERTEX_CHI2, b0_ENDVERTEX_NDOF,
        b0_fd_trans,
        b0_DIRA_OWNPV, b0_M
        )

global_selection:
    # Trigger (L0, HLT1, HLT2)
    - "b0_L0Global_TIS || d0_L0HadronDecision_TOS"
    - "k_Hlt1TrackMVADecision_TOS || pi_Hlt1TrackMVADecision_TOS || d0_Hlt1TwoTrackMVADecision_TOS"
    - "b0_Hlt2XcMuXForTauB2XcMuDecision_TOS"
    # Offline cuts
    - flag_d0mu
    - flag_dstmu

one_cand_only:
    enable: true
    branch: rename_b_pt

output:
    iso_dst:
        input: TupleB0/DecayTree
        selection:
            - "iso_bdt < 0.15"
