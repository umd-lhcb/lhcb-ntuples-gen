headers:
    user:
        - functor/basic.h
        - functor/basic_kinematic.h

keep:
    - runNumber
    - eventNumber
    - GpsTime

rename:
    # General
    Polarity: polarity
    # L0
    b_L0Global_TIS: b_l0_global_tis
    b_L0MuonDecision_TOS: b_l0_muon_tos
    b_L0DiMuonDecision_TOS: b_l0_dimuon_tos
    # HLT1
    b_Hlt1TwoTrackMVADecision_TOS: b_hlt1_twotrackmva_tos
    b_Hlt1TrackMVADecision_TOS: b_hlt1_trackmva_tos
    b_Hlt1TrackMuonDecision_TOS: b_hlt1_trackmu_tos
    # HLT2
    b_Hlt2DiMuonDetachedHeavyDecision_TOS: b_hlt2_dimuon_heavy_tos
    # Event variables
    nTracks: ntracks
    NumSPDHits: nspdhits

calculation:
    #######################
    # Kinematic variables #
    #######################
    # Keep everything in MeV!
    # B
    b_m: double; b_M
    b_p: double; b_P
    b_pt: double; b_PT
    b_eta: double; ETA(b_P, b_PZ)
    # J/psi
    # For M vs MM, see https://github.com/lhcb/first-analysis-steps/pull/148
    j_m: double; j_M
    j_mm: double; j_MM  # the sum of the four-vectors of the children as the 'parent'
    # K
    k_pt: double; k_PT
    # Mu
    mu_p: double; mu_P
    mu_pt: double; mu_PT
    mu_eta: double; ETA(mu_P, mu_PZ)
    # anti-Mu
    amu_p: double; amu_P
    amu_pt: double; amu_PT
    amu_eta: double; ETA(amu_P, amu_PZ)
    # Misc.
    pt_prod_sqrt: double; SQRT(mu_pt*amu_pt)

    #################
    # PID variables #
    #################
    # K
    k_pid_k: double; k_PIDK
    # Mu
    mu_pid_mu: double; mu_PIDmu
    # anti-Mu
    amu_pid_mu: double; amu_PIDmu

    ######################
    # Tracking variables #
    ######################
    # B
    b_endvtx_chi2: double; b_ENDVERTEX_CHI2
    b_min_ip_ch2: double; b_MINIPCHI2
    b_dira: double; b_DIRA_OWNPV
    b_ownpv_ndof: double; b_OWNPV_NDOF
    # J/psi
    j_fd_chi2: double; j_FDCHI2_OWNPV
    # Mu
    mu_min_ip_chi2: double; mu_MINIPCHI2
    # anti-Mu
    amu_min_ip_chi2: double; amu_MINIPCHI2

    ################################
    # Selection flags, MC-specific #
    ################################
    mc_id: int; cli_mc_id
    truthmatch: >-
        bool;
        amu_MC_MOTHER_KEY == mu_MC_MOTHER_KEY &&
        j_MC_MOTHER_KEY == mu_MC_GD_MOTHER_KEY &&
        j_MC_MOTHER_KEY == k_MC_MOTHER_KEY &&
        j_MC_GD_MOTHER_KEY == b_MC_MOTHER_KEY &&
        ABS(amu_TRUEID) == 13 &&
        ABS(mu_TRUEID) == 13 &&
        ABS(j_TRUEID) == 443 &&
        ABS(k_TRUEID) == 321 &&
        ABS(b_TRUEID) == 521

    ##########################
    # Selection flags, basic #
    ##########################
    # Trigger
    l0: bool; b_l0_muon_tos
    hlt1: bool; b_hlt1_trackmu_tos
    hlt2: bool; b_hlt2_dimuon_heavy_tos

    # Kinematic
    pt_ok: bool; mu_pt > 0.5 && amu_pt > 0.5 && k_pt > 0.5
    b_mass_ok: bool; b_m > 5150.0 && b_m < 5350.0  # fit range
    j_mass_ok: bool; j_mm > 3060.0 && j_mm < 3140.0

    # PID
    pid_ok: >-
        bool; IF_VAR_EXISTS(mc_id, true);
        k_pid_k > 4.0 && mu_pid_mu > 2.0 && amu_pid_mu > 2.0

    # Vertexing
    vtx_ok: >-
        bool; b_dira > 0.9995 &&
        b_min_ip_ch2 < 12.0 && b_endvtx_chi2 < 18.0 &&
        j_fd_chi2 > 25.0 &&
        mu_min_ip_chi2 > 4.0 && amu_min_ip_chi2 > 4.0

    ###########
    # Weights #
    ###########
    wpid: double; wpid_k*wpid_mu*wpid_amu
    wtrk: double; wtrk_k*wtrk_mu*wtrk_amu
    wjk: double; wjk_occ*wjk_kin
    w: double; wpid*wtrk*wjk

global_selection:
    - hlt1 && hlt2
    - pt_ok && b_mass_ok && j_mass_ok
    - vtx_ok
    - pid_ok  # This is set to be always true for MC
    - truthmatch

one_cand_only:
    enable: false

output:
    JpsiK:
        input: tree
