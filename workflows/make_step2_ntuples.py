#!/usr/bin/env python
#
# Script to produce the step 2 ntuples from the DaVinci ntuples

import os
import pathlib
import sys
from datetime import date

def runCmd(cmd):
    print('\n \033[92m'+cmd+'\033[0m')
    os.system(cmd)

def makeNtuple(ntpIn, yml, tag, addBDT=True):
    ## Checking input ntuple exists
    if not pathlib.Path(ntpIn).is_file():
        sys.exit(ntpIn+' does not exist. Make sure you "git annex get" it')

    print('\n===== Producing Step 2 ntuple out of \033[94m'+ntpIn+'\033[0m')

    ## Producing BDT ntuple if it is requested and it does not exist
    ntpBDT = ntpIn.replace('.root', '__aux_mu_bdt.root')
    if addBDT and not pathlib.Path(ntpBDT).is_file():
        trees = ' TupleB0/DecayTree TupleBminus/DecayTree'
        runCmd('addUBDTBranch '+ntpIn+' "mu_isMuonTight" run2-rdx/weights_run2_no_cut_ubdt.xml '+ntpBDT+trees)
        runCmd('rm -rf ./weights')  ## This folder is generated by UBDT adder for unknown reason

    ## Producing the c++ file with the ntuple structure
    exeBabymaker = 'babymaker -i '
    cppBaby = 'baby.cpp'
    bdt = ''
    if addBDT:
        bdt = '-f '+ntpBDT
    runCmd(exeBabymaker+yml+' -o '+cppBaby+' -n '+ntpIn+' -t postprocess/cpp_templates/rdx.cpp '+bdt)
    print('\nNOTE: It is expected that "b" or "d0" branches cannot be resolved in the Dst tree, and same for "b0" or "dst" in the D0 tree')

    ## Compiling c++ file
    exeBaby = './baby.exe'
    compiler = os.popen('root-config --cxx').read().replace('\n','')
    cxxFlags = ' '+os.popen('root-config --cflags').read().replace('\n','')
    linkFlags = ' '+os.popen('root-config --libs').read().replace('\n','')
    runCmd(compiler+cxxFlags+' -Iinclude -o '+exeBaby+' '+cppBaby+' '+linkFlags)

    ## Producing step 2 ntuple
    runCmd(exeBaby+' "--'+tag+'"')

    ## Moving to output folder
    runCmd('rm '+exeBaby+' '+cppBaby)
    outFolder = 'gen/step2_'+tag
    runCmd('mkdir -p '+outFolder)
    runCmd('mv *'+tag+'.root '+outFolder)

    print("\nProduced ntuples at \033[94m"+outFolder+'\033[0m\n')


## Common parameters
ymlRun2 = 'postprocess/rdx-run2/rdx-run2_with_run1_cuts.yml'
today = date.today().strftime("%y_%m_%d")
ntpFolder = 'ntuples/'

## Generating ntuples. Make sure to follow the filename convention for Step 2 at
## https://umd-lhcb.github.io/lhcb-ntuples-gen/ntupling/nomenclature/#step-2-ntuples
makeNtuple(ntpFolder+'0.9.4-trigger_emulation/Dst_D0-std/Dst_D0--21_04_27--std--LHCb_Collision16_Beam6500GeV-VeloClosed-MagDown_Real_Data_Reco16_Stripping28r1_90000000_SEMILEPTONIC.DST.root', ymlRun2, today+'--std--data--2016--md')
