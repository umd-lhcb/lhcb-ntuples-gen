{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the wiki for lhcb-ntuples-gen . In this section, you'll find useful information on installing required dependencies for this project, as well the usage of some tools, such as git-annex , that will be used in this project. Version control systems (VCS) This project requires the following VCS to be installed in your system: git : for source code version control git-annex (that supports v7 repository format): for data file version control To install these programs, please follow this section . In addition, we provide a brief introduction on the usage of git-annex . Dependencies for ntuple generation The ntuples 1 generation is separated into 2 steps : Use DaVinci to generate ntuples from raw data 2 . Follow this section to install required programs. Use this manual to learn how to use DaVinci locally. Use babymaker frame work to do slimming, skimming, and additional calculation on previous ntuples, generating new ntuples. Use this section for installation. The babymaker manual can be found here . Note These two steps have separate dependencies. If you only need to run one step, just follow the installation instruction for that particular step. .root files that can be processed by DaVinci , ROOT , and many other tools. \u21a9 .dst files that directly come from CERN. \u21a9","title":"Getting started"},{"location":"#version-control-systems-vcs","text":"This project requires the following VCS to be installed in your system: git : for source code version control git-annex (that supports v7 repository format): for data file version control To install these programs, please follow this section . In addition, we provide a brief introduction on the usage of git-annex .","title":"Version control systems (VCS)"},{"location":"#dependencies-for-ntuple-generation","text":"The ntuples 1 generation is separated into 2 steps : Use DaVinci to generate ntuples from raw data 2 . Follow this section to install required programs. Use this manual to learn how to use DaVinci locally. Use babymaker frame work to do slimming, skimming, and additional calculation on previous ntuples, generating new ntuples. Use this section for installation. The babymaker manual can be found here . Note These two steps have separate dependencies. If you only need to run one step, just follow the installation instruction for that particular step. .root files that can be processed by DaVinci , ROOT , and many other tools. \u21a9 .dst files that directly come from CERN. \u21a9","title":"Dependencies for ntuple generation"},{"location":"installation/","text":"Install VCS On Arch Linux, simply issue the following command: sudo pacman - S git git - annex On macOS, if you have homebrew installed: brew install git git - annex Microsoft Windows not supported This is because Windows filesystems don't support symbolic links, which makes git-annex almost unusable. If you are a Windows user, please follow this section to set up a Linux virtual machine that has everything installed. Ubuntu not supported This is because there is no easy way to install an up-to-date git-annex . Please use the same pre-built image listed in this section . Note that VirtualBox needs to be installed on Ubuntu manually first. Install dependencies for DaVinci We use docker to run a pre-built DaVinci image locally. To install docker : On Arch Linux: sudo pacman - S docker then follow this Arch wiki entry to finish setup. On macOS, with homebrew : brew install docker Note The virtual machine image already has docker installed. Now it's time to pull (download) the pre-built DaVinci docker: docker pull umdlhcb / lhcb - stack - cc7 : DaVinci - v42r8p1 - SL Install dependencies for babymaker babymaker is part of the pyBabyMaker Python package. It requires gcc 1 , ROOT , python3 , and a couple of other Python packages 2 . Note As you may have guessed it, the virtual machine image has these packages, except pyBabyMaker , installed, including pip . Note It is strongly recommended to install clang-format 3 , so the generated C++ code looks much nicer. Install these tools with your choice of package manager. To install pyBabyMaker and other required Python packages, you can use the following command: pip3 install - r --user requirements.txt Use a pre-built VirtualBox image on Windows The pre-built VirtualBox image is based on Arch Linux. It contains git , git-annex ; docker ( DaVinci image not downloaded); all babymaker dependencies ( Python packages not installed); sublime text editor. To use the virtual machine image, Please follow these steps on Microsoft Windows: Download and install the latest VirtualBox from here . Download the pre-built image from here (download both .ovf and .vmdk files). Launch VirtualBox , click Tools , then click Import , choose the ovf file, then proceed with default settings. Note Both the username and password of the virtual machine are vagrant . Note By default the virtual machine can maximally use 4 GB of RAM. If your computer has 16 GB or more RAM, it is recommended to allocate 8 GB of RAM to the virtual machine. gcc must be recent enough to support c++17 standard. Effectively, gcc 6 or newer is required. \u21a9 These packages are listed in <project_root>/requirements.txt . It is highly recommended to install pip to manage Python packages. It is also highly recommended to use pyenv and pyenv-virtualenv to manage Python enviroments. Please google the installation instructions for your OS. \u21a9 clang-format usually comes with clang . A notable exception is on macOS. In that case, just type in brew install clang-format . \u21a9","title":"Install dependencies"},{"location":"installation/#install-vcs","text":"On Arch Linux, simply issue the following command: sudo pacman - S git git - annex On macOS, if you have homebrew installed: brew install git git - annex Microsoft Windows not supported This is because Windows filesystems don't support symbolic links, which makes git-annex almost unusable. If you are a Windows user, please follow this section to set up a Linux virtual machine that has everything installed. Ubuntu not supported This is because there is no easy way to install an up-to-date git-annex . Please use the same pre-built image listed in this section . Note that VirtualBox needs to be installed on Ubuntu manually first.","title":"Install VCS"},{"location":"installation/#install-dependencies-for-davinci","text":"We use docker to run a pre-built DaVinci image locally. To install docker : On Arch Linux: sudo pacman - S docker then follow this Arch wiki entry to finish setup. On macOS, with homebrew : brew install docker Note The virtual machine image already has docker installed. Now it's time to pull (download) the pre-built DaVinci docker: docker pull umdlhcb / lhcb - stack - cc7 : DaVinci - v42r8p1 - SL","title":"Install dependencies for DaVinci"},{"location":"installation/#install-dependencies-for-babymaker","text":"babymaker is part of the pyBabyMaker Python package. It requires gcc 1 , ROOT , python3 , and a couple of other Python packages 2 . Note As you may have guessed it, the virtual machine image has these packages, except pyBabyMaker , installed, including pip . Note It is strongly recommended to install clang-format 3 , so the generated C++ code looks much nicer. Install these tools with your choice of package manager. To install pyBabyMaker and other required Python packages, you can use the following command: pip3 install - r --user requirements.txt","title":"Install dependencies for babymaker"},{"location":"installation/#use-a-pre-built-virtualbox-image-on-windows","text":"The pre-built VirtualBox image is based on Arch Linux. It contains git , git-annex ; docker ( DaVinci image not downloaded); all babymaker dependencies ( Python packages not installed); sublime text editor. To use the virtual machine image, Please follow these steps on Microsoft Windows: Download and install the latest VirtualBox from here . Download the pre-built image from here (download both .ovf and .vmdk files). Launch VirtualBox , click Tools , then click Import , choose the ovf file, then proceed with default settings. Note Both the username and password of the virtual machine are vagrant . Note By default the virtual machine can maximally use 4 GB of RAM. If your computer has 16 GB or more RAM, it is recommended to allocate 8 GB of RAM to the virtual machine. gcc must be recent enough to support c++17 standard. Effectively, gcc 6 or newer is required. \u21a9 These packages are listed in <project_root>/requirements.txt . It is highly recommended to install pip to manage Python packages. It is also highly recommended to use pyenv and pyenv-virtualenv to manage Python enviroments. Please google the installation instructions for your OS. \u21a9 clang-format usually comes with clang . A notable exception is on macOS. In that case, just type in brew install clang-format . \u21a9","title":"Use a pre-built VirtualBox image on Windows"},{"location":"data/data_management/","text":"Split book-keeping files The .dst description files downloaded directly from Dirac contains a list with a large number of files (700 files or more). For example, this file contains 1690 lines: / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001536_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001039_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000344_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000301_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000850_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000988_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001423_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000841_1 . Semileptonic . dst ... / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001096_1 . Semileptonic . dst It is impractical to download every single one of them, as we don't have enough storage space in lxplus , even with EOS . To split, we use split , a linux tool that should have been installed by default: split --lines=50 <filename.dst> In this case, the <filename.dst> will be sliced for every 50 lines, and the output filenames will be x?? . Download data files with lxplus To download all dst files listed in a bookkeeping file: lhcb - proxy - init lb - run LHCbDIRAC dirac - dms - get - file - D < target_dir > --File=<file_with_list_of_lfns> If you know a LFN , instead of a file that contains a list of LFN s, you can: lb - run LHCbDIRAC dirac - dms - get - file - D < target_dir > - l < lfn >","title":"Data management"},{"location":"data/data_management/#split-book-keeping-files","text":"The .dst description files downloaded directly from Dirac contains a list with a large number of files (700 files or more). For example, this file contains 1690 lines: / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001536_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001039_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000344_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000301_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000850_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000988_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001423_1 . Semileptonic . dst / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00000841_1 . Semileptonic . dst ... / lhcb / LHCb / Collision12 / SEMILEPTONIC . DST / 00067251 / 0000 / 00067251 _00001096_1 . Semileptonic . dst It is impractical to download every single one of them, as we don't have enough storage space in lxplus , even with EOS . To split, we use split , a linux tool that should have been installed by default: split --lines=50 <filename.dst> In this case, the <filename.dst> will be sliced for every 50 lines, and the output filenames will be x?? .","title":"Split book-keeping files"},{"location":"data/data_management/#download-data-files-with-lxplus","text":"To download all dst files listed in a bookkeeping file: lhcb - proxy - init lb - run LHCbDIRAC dirac - dms - get - file - D < target_dir > --File=<file_with_list_of_lfns> If you know a LFN , instead of a file that contains a list of LFN s, you can: lb - run LHCbDIRAC dirac - dms - get - file - D < target_dir > - l < lfn >","title":"Download data files with lxplus"},{"location":"data/data_sources/","text":"Samples Here we track the original filenames and their providers in the */sample folder. 2012-b2D0MuXB2DMuNuForTauMuLine name in this repo original name provider DaVinci version MD5 sum BCands_D0-data-2012-mag_down.root ? P. Hamilton v36r1p2 73bfbc7b9d0e1eea19572fa42b28ebc6 BCands_Dst-data-2012-mag_down.root newTFYCands_DATA_2012_MD.root P. Hamilton v36r1p2 16c4750761d75b8b37e5bff521139887 BCands_Dst-data-2012-mag_down-stage2.root ? P. Hamilton v36r1p2 d6177e3b4da865df9593e6778b848ef2 BCands_Dst-data-2012-mag_down-davinci_v36r1p2-subset.root ycands_dvv36r1p2.root P. Hamilton v36r1p2 fdb64ca03803a363c484934cff338986 BCands_Dst-data-2012-mag_down-davinci_v42r8p1-subset.root N/A Y. Sun v42r8p1 23348a3bbdbe0ba09b1a3b22f2833614 BCands_Dst-mc-py6-sim08a-mag_down-subset.root N/A Y. Sun v42r8p1 c71b1386b662a7b9b4bb7002ab89a9b9 2011/2012 R(D^*) R(D^*) / lhcb-ana-2014-052-v2r1 The data source for this analysis note can be found on DIRAC : stripping line (in note) stripping line (updated) DIRAC path Strippingb2D0MuXB2DMuForTaoMuLine Strippingb2D0MuXB2DMuNuForTauMuLine /LHCb/Collision12/Beam4000GeV-VeloClosed-Mag{Down,Up}/Real Data/Reco14/Stripping21/90000000/SEMILEPTONIC.DST Note we have to use Stripping21 instead of Stripping20 as mentioned in the notes, because the latter one is no longer fully exist. Also Stripping21 contains 2012 data, and Stripping21r1 contains 2011 data. Run 1 Monte-Carlo In DIRAC , make sure to switch from Simulation Condition to Event type . Then the event will be available at MC/2012/<event_type_uid> . In the analysis note, we used the following event types: With D^{**} D^{**} in intermediate product 11873010 , 11873030 : B^0 \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 B^0 \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 13873000 : B_s \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 B_s \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 12873010 : B^+ \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 B^+ \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 With D^{*} D^{*} in intermediate product 11574010 : B^0 \\rightarrow D^* \\tau \\nu B^0 \\rightarrow D^* \\tau \\nu 11574020 : B^0 \\rightarrow D^* \\mu \\nu B^0 \\rightarrow D^* \\mu \\nu 12573020 : B^+ \\rightarrow D^{*0} \\tau \\nu B^+ \\rightarrow D^{*0} \\tau \\nu 12573030 : B^+ \\rightarrow D^{*0} \\mu \\nu B^+ \\rightarrow D^{*0} \\mu \\nu With D^0 D^0 in intermediate product 12573000 : B^+ \\rightarrow D^0 \\tau \\nu B^+ \\rightarrow D^0 \\tau \\nu 12573010 : B^+ \\rightarrow D^0 \\mu \\nu B^+ \\rightarrow D^0 \\mu \\nu 11873000 : B^0 \\rightarrow D^0 DX \\rightarrow \\mu X B^0 \\rightarrow D^0 DX \\rightarrow \\mu X 12873000 : B^+ \\rightarrow D^0 DX \\rightarrow \\mu X B^+ \\rightarrow D^0 DX \\rightarrow \\mu X 11873020 : B^0 \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu B^0 \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu 12873020 : B^+ \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu B^+ \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu","title":"Data sources"},{"location":"data/data_sources/#samples","text":"Here we track the original filenames and their providers in the */sample folder.","title":"Samples"},{"location":"data/data_sources/#2012-b2d0muxb2dmunufortaumuline","text":"name in this repo original name provider DaVinci version MD5 sum BCands_D0-data-2012-mag_down.root ? P. Hamilton v36r1p2 73bfbc7b9d0e1eea19572fa42b28ebc6 BCands_Dst-data-2012-mag_down.root newTFYCands_DATA_2012_MD.root P. Hamilton v36r1p2 16c4750761d75b8b37e5bff521139887 BCands_Dst-data-2012-mag_down-stage2.root ? P. Hamilton v36r1p2 d6177e3b4da865df9593e6778b848ef2 BCands_Dst-data-2012-mag_down-davinci_v36r1p2-subset.root ycands_dvv36r1p2.root P. Hamilton v36r1p2 fdb64ca03803a363c484934cff338986 BCands_Dst-data-2012-mag_down-davinci_v42r8p1-subset.root N/A Y. Sun v42r8p1 23348a3bbdbe0ba09b1a3b22f2833614 BCands_Dst-mc-py6-sim08a-mag_down-subset.root N/A Y. Sun v42r8p1 c71b1386b662a7b9b4bb7002ab89a9b9","title":"2012-b2D0MuXB2DMuNuForTauMuLine"},{"location":"data/data_sources/#20112012-rdrd-lhcb-ana-2014-052-v2r1","text":"The data source for this analysis note can be found on DIRAC : stripping line (in note) stripping line (updated) DIRAC path Strippingb2D0MuXB2DMuForTaoMuLine Strippingb2D0MuXB2DMuNuForTauMuLine /LHCb/Collision12/Beam4000GeV-VeloClosed-Mag{Down,Up}/Real Data/Reco14/Stripping21/90000000/SEMILEPTONIC.DST Note we have to use Stripping21 instead of Stripping20 as mentioned in the notes, because the latter one is no longer fully exist. Also Stripping21 contains 2012 data, and Stripping21r1 contains 2011 data.","title":"2011/2012 R(D^*)R(D^*) / lhcb-ana-2014-052-v2r1"},{"location":"data/data_sources/#run-1-monte-carlo","text":"In DIRAC , make sure to switch from Simulation Condition to Event type . Then the event will be available at MC/2012/<event_type_uid> . In the analysis note, we used the following event types:","title":"Run 1 Monte-Carlo"},{"location":"data/data_sources/#with-dd-in-intermediate-product","text":"11873010 , 11873030 : B^0 \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 B^0 \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 13873000 : B_s \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 B_s \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 12873010 : B^+ \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0 B^+ \\rightarrow D^{**} \\mu \\nu \\rightarrow D^0","title":"With D^{**}D^{**} in intermediate product"},{"location":"data/data_sources/#with-dd-in-intermediate-product_1","text":"11574010 : B^0 \\rightarrow D^* \\tau \\nu B^0 \\rightarrow D^* \\tau \\nu 11574020 : B^0 \\rightarrow D^* \\mu \\nu B^0 \\rightarrow D^* \\mu \\nu 12573020 : B^+ \\rightarrow D^{*0} \\tau \\nu B^+ \\rightarrow D^{*0} \\tau \\nu 12573030 : B^+ \\rightarrow D^{*0} \\mu \\nu B^+ \\rightarrow D^{*0} \\mu \\nu","title":"With D^{*}D^{*} in intermediate product"},{"location":"data/data_sources/#with-d0d0-in-intermediate-product","text":"12573000 : B^+ \\rightarrow D^0 \\tau \\nu B^+ \\rightarrow D^0 \\tau \\nu 12573010 : B^+ \\rightarrow D^0 \\mu \\nu B^+ \\rightarrow D^0 \\mu \\nu 11873000 : B^0 \\rightarrow D^0 DX \\rightarrow \\mu X B^0 \\rightarrow D^0 DX \\rightarrow \\mu X 12873000 : B^+ \\rightarrow D^0 DX \\rightarrow \\mu X B^+ \\rightarrow D^0 DX \\rightarrow \\mu X 11873020 : B^0 \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu B^0 \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu 12873020 : B^+ \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu B^+ \\rightarrow D^0 D_s X \\rightarrow \\tau \\nu","title":"With D^0D^0 in intermediate product"},{"location":"data/comparison_run1_RDst/comparison/","text":"In general, we find the unique events 1 in both ntuples, then see if they occur in both ntuples, and find their: absolute difference normalized difference, with one of them used as normalization Comparison between 2012 data The files being compared are: BCands_Dst-data-2012-mag_down-stage2 BCands_Dst-data-2012-mag_down-davinci_v42r8p1-subset Additional notes: Phoebe used this DaVinci script to generate her ntuple, with DaVinci v36r1p2 . The generated ntuple can be found at: < project_root >/ 2012 - b2D0MuXB2DMuNuForTauMuLine / data / sample / YCands_Dstar - 2012 - mag_down - data . root We used our script 2 , and DaVinci v42r8p1 . The ntuple can be found at: < project_root >/ 2012 - b2D0MuXB2DMuNuForTauMuLine / gen / YCands . root D0_P difference [MeV] difference (normalized) Dst_2010_minus_P difference [MeV] difference (normalized) Kplus_P difference [MeV] difference (normalized) Kplus_PX difference [MeV] difference (normalized) Kplus_PY difference [MeV] difference (normalized) Kplus_PZ difference [MeV] difference (normalized) muplus_P difference [MeV] difference (normalized) muplus_PX difference [MeV] difference (normalized) muplus_PY difference [MeV] difference (normalized) muplus_PZ difference [MeV] difference (normalized) FitVar_Mmiss2 difference [MeV] difference (normalized) FitVar_q2 difference [MeV] difference (normalized) FitVar_El difference [MeV] difference (normalized) Y_ISOLATION_BDT difference [MeV] difference (normalized) Y_ISOLATION_BDT2 difference [MeV] difference (normalized) Y_ISOLATION_BDT3 difference [MeV] difference (normalized) Comparison between DaVinci version Files used: BCands_Dst-data-2012-mag_down-davinci_v36r1p2-subset BCands_Dst-data-2012-mag_down-davinci_v42r8p1-subset D0_P difference [MeV] difference (normalized) Dst_2010_minus_P difference [MeV] difference (normalized) Kplus_P difference [MeV] difference (normalized) Kplus_PX difference [MeV] difference (normalized) Kplus_PY difference [MeV] difference (normalized) Kplus_PZ difference [MeV] difference (normalized) muplus_P difference [MeV] difference (normalized) muplus_PX difference [MeV] difference (normalized) muplus_PY difference [MeV] difference (normalized) muplus_PZ difference [MeV] difference (normalized) Y_ISOLATION_BDT difference [MeV] difference (normalized) Y_ISOLATION_BDT2 difference [MeV] difference (normalized) Y_ISOLATION_BDT3 difference [MeV] difference (normalized) Comparison between MC (Pythia 6) Files used: BCands_Dst-mc-py6-mag_down BCands_Dst-mc-py6-mag_down-subset D0_P difference [MeV] difference (normalized) Kplus_P difference [MeV] difference (normalized) FitVar_Mmiss2 difference [MeV] difference (normalized) FitVar_q2 difference [MeV] difference (normalized) FitVar_El difference [MeV] difference (normalized) Y_ISOLATION_BDT difference [MeV] difference (normalized) Y_ISOLATION_BDT2 difference [MeV] difference (normalized) Y_ISOLATION_BDT3 difference [MeV] difference (normalized) Typically by the combination of runNumber and eventNumber . \u21a9 Based on Phoebe's original script. \u21a9","title":"Run 1 `R(D^{\\star})`"},{"location":"data/comparison_run1_RDst/comparison/#comparison-between-2012-data","text":"The files being compared are: BCands_Dst-data-2012-mag_down-stage2 BCands_Dst-data-2012-mag_down-davinci_v42r8p1-subset Additional notes: Phoebe used this DaVinci script to generate her ntuple, with DaVinci v36r1p2 . The generated ntuple can be found at: < project_root >/ 2012 - b2D0MuXB2DMuNuForTauMuLine / data / sample / YCands_Dstar - 2012 - mag_down - data . root We used our script 2 , and DaVinci v42r8p1 . The ntuple can be found at: < project_root >/ 2012 - b2D0MuXB2DMuNuForTauMuLine / gen / YCands . root","title":"Comparison between 2012 data"},{"location":"data/comparison_run1_RDst/comparison/#d0_p","text":"difference [MeV] difference (normalized)","title":"D0_P"},{"location":"data/comparison_run1_RDst/comparison/#dst_2010_minus_p","text":"difference [MeV] difference (normalized)","title":"Dst_2010_minus_P"},{"location":"data/comparison_run1_RDst/comparison/#kplus_p","text":"difference [MeV] difference (normalized)","title":"Kplus_P"},{"location":"data/comparison_run1_RDst/comparison/#kplus_px","text":"difference [MeV] difference (normalized)","title":"Kplus_PX"},{"location":"data/comparison_run1_RDst/comparison/#kplus_py","text":"difference [MeV] difference (normalized)","title":"Kplus_PY"},{"location":"data/comparison_run1_RDst/comparison/#kplus_pz","text":"difference [MeV] difference (normalized)","title":"Kplus_PZ"},{"location":"data/comparison_run1_RDst/comparison/#muplus_p","text":"difference [MeV] difference (normalized)","title":"muplus_P"},{"location":"data/comparison_run1_RDst/comparison/#muplus_px","text":"difference [MeV] difference (normalized)","title":"muplus_PX"},{"location":"data/comparison_run1_RDst/comparison/#muplus_py","text":"difference [MeV] difference (normalized)","title":"muplus_PY"},{"location":"data/comparison_run1_RDst/comparison/#muplus_pz","text":"difference [MeV] difference (normalized)","title":"muplus_PZ"},{"location":"data/comparison_run1_RDst/comparison/#fitvar_mmiss2","text":"difference [MeV] difference (normalized)","title":"FitVar_Mmiss2"},{"location":"data/comparison_run1_RDst/comparison/#fitvar_q2","text":"difference [MeV] difference (normalized)","title":"FitVar_q2"},{"location":"data/comparison_run1_RDst/comparison/#fitvar_el","text":"difference [MeV] difference (normalized)","title":"FitVar_El"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt2","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT2"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt3","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT3"},{"location":"data/comparison_run1_RDst/comparison/#comparison-between-davinci-version","text":"Files used: BCands_Dst-data-2012-mag_down-davinci_v36r1p2-subset BCands_Dst-data-2012-mag_down-davinci_v42r8p1-subset","title":"Comparison between DaVinci version"},{"location":"data/comparison_run1_RDst/comparison/#d0_p_1","text":"difference [MeV] difference (normalized)","title":"D0_P"},{"location":"data/comparison_run1_RDst/comparison/#dst_2010_minus_p_1","text":"difference [MeV] difference (normalized)","title":"Dst_2010_minus_P"},{"location":"data/comparison_run1_RDst/comparison/#kplus_p_1","text":"difference [MeV] difference (normalized)","title":"Kplus_P"},{"location":"data/comparison_run1_RDst/comparison/#kplus_px_1","text":"difference [MeV] difference (normalized)","title":"Kplus_PX"},{"location":"data/comparison_run1_RDst/comparison/#kplus_py_1","text":"difference [MeV] difference (normalized)","title":"Kplus_PY"},{"location":"data/comparison_run1_RDst/comparison/#kplus_pz_1","text":"difference [MeV] difference (normalized)","title":"Kplus_PZ"},{"location":"data/comparison_run1_RDst/comparison/#muplus_p_1","text":"difference [MeV] difference (normalized)","title":"muplus_P"},{"location":"data/comparison_run1_RDst/comparison/#muplus_px_1","text":"difference [MeV] difference (normalized)","title":"muplus_PX"},{"location":"data/comparison_run1_RDst/comparison/#muplus_py_1","text":"difference [MeV] difference (normalized)","title":"muplus_PY"},{"location":"data/comparison_run1_RDst/comparison/#muplus_pz_1","text":"difference [MeV] difference (normalized)","title":"muplus_PZ"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt_1","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt2_1","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT2"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt3_1","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT3"},{"location":"data/comparison_run1_RDst/comparison/#comparison-between-mc-pythia-6","text":"Files used: BCands_Dst-mc-py6-mag_down BCands_Dst-mc-py6-mag_down-subset","title":"Comparison between MC (Pythia 6)"},{"location":"data/comparison_run1_RDst/comparison/#d0_p_2","text":"difference [MeV] difference (normalized)","title":"D0_P"},{"location":"data/comparison_run1_RDst/comparison/#kplus_p_2","text":"difference [MeV] difference (normalized)","title":"Kplus_P"},{"location":"data/comparison_run1_RDst/comparison/#fitvar_mmiss2_1","text":"difference [MeV] difference (normalized)","title":"FitVar_Mmiss2"},{"location":"data/comparison_run1_RDst/comparison/#fitvar_q2_1","text":"difference [MeV] difference (normalized)","title":"FitVar_q2"},{"location":"data/comparison_run1_RDst/comparison/#fitvar_el_1","text":"difference [MeV] difference (normalized)","title":"FitVar_El"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt_2","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt2_2","text":"difference [MeV] difference (normalized)","title":"Y_ISOLATION_BDT2"},{"location":"data/comparison_run1_RDst/comparison/#y_isolation_bdt3_2","text":"difference [MeV] difference (normalized) Typically by the combination of runNumber and eventNumber . \u21a9 Based on Phoebe's original script. \u21a9","title":"Y_ISOLATION_BDT3"},{"location":"physics/momentum_scaling/","text":"For data processing, at LHCb: scale the data momentum, because data measurements are biased. This bias can be detected and calibrated using some well-known decay mode (such as J/\\Psi \\rightarrow \\mu \\mu J/\\Psi \\rightarrow \\mu \\mu ). smear the MC momentum, because MC measurements are too good.","title":"Momentum scaling"},{"location":"physics/wrong_sign_particles/","text":"Note that we are not guaranteed to be reconstructing real particles. Instead, we are looking at combinations of reconstructed tracks with specific properties consistent with originating from a common vertex. These reconstructed particles may original from different mothers---they may still pass our vertexing criteria by sheer coincidence combined with resolution effects and the fact that tracks don't have an origin point. By looking at wrong-sign combinations, we get a pure sample of \"candidates\" that did not originate from a common mother (charged was not conserved in this \"decay\" mode, so it is not physical). We can be absolutely sure that no signal or physics background contaminates these samples because there is no such thing as a B^{++} B^{++} (again, charge not conserved). Therefore, these combinations can be used to study and model these random combinations of tracks that pass our selection. A caveat to remember is that the wrong-sign combinations are not guaranteed to look exactly like the background in the right-sign we are trying to understand. This is where the candidates with mass greater than m_B m_B come in handy. Here we know neither the right-sign nor the wrong-sign has any physics candidates in them, and we can see how the two differ.","title":"Wrong-sign particles"},{"location":"software_manuals/babymaker/","text":"babymaker is a part of the pyBabyMaker library. Please refer to the official document for more info. The general idea is that babymaker takes: a YAML file as configuration a .root ntuple file to dump its tree structure and datatype. and generates a C++ file. The generated file then will be compiled, and the compiled binary will be used to generate second stage .root ntuples.","title":"babymaker"},{"location":"software_manuals/davinci/","text":"DaVinci is a LHCb software package that run various preliminary selections and calculations on the raw .dst file, and produce a .root file. Normally it is run on LHCb remote Linux nodes lxplus . However, it is much more convenient to have a local DaVinci environment. DaVinci docker image usage Launch a DaVinci container To launch a DaVinci docker container, type in: docker run --rm -it -v <src_path>:/data -e UID=$(id -u) -e GID=$(id -g) --net=host umdlhcb/lhcb-stack-cc7:DaVinci-v42r8p1-SL note that <src_path> should be an absolute path pointing to the folder that we want to mount inside the container. If you are in the folder you want to mount, you can just type: docker run -- rm - it - v `pwd` : / data - e UID = $ ( id - u ) - e GID = $ ( id - g ) -- net = host umdlhcb / lhcb - stack - cc7 : DaVinci - v42r8p1 - SL Note docker images are read-only. When we launch a docker container , a writable layer is placed on top of the image. Use DaVinci inside container The command is very similar to the one used on lxplus : lb - run DaVinci / latest gaudirun . py < ntuple_options1 > < ntuple_options2 > ... since we have only 1 version of DaVinci inside the container, DaVinci/latest would always work. Additional TupleTool The docker image with -SL suffix also contains a special DaVinci version that contains additional TupleTool 1 for semileptonic analysis. To access the special DaVinci , just substitute lb-run DaVinci/latest with run . For instance: run gaudirun . py < ntuple_options1 > < ntuple_options2 > ... Note To make our lives easier, a run.sh command is typically created in each stripping lines, such as: < project_root >/ 2012 - b2D0MuXB2DMuNuForTauMuLine / gen . sh If you see this file, take a look at it to see the availabe commands, and run it inside the docker container: ./run.sh <argument1> <argument2> ... # inside docker Remove old docker images To list all local docker images: docker images If you download a newer version of docker image, and want to remove the old ones to save disk space, you can: docker rmi < docker_image_tag > docker image prune here <docker_image_tag> should be something like umdlhcb/lhcb-stack-cc7:DaVinci-v42r8p1-SL . DaVinci tips and tricks About GaudiSequencer GaudiSequencer is an per-event algorithm , such as DecayTreeTuple , in the sense that Gaudi knows that it should run on every event. GaudiSequencer is used to chain related algorithms, and it's default behavior is to only run an algorithm if the preceding algorithm passed (this is done in the c++ class for the algorithm by returning StatusCode::SUCCESS ). This default can be overridden by setting GaudiSequencer.IgnoreFilterPassed to True , which will run all the algorithms regardless of whether the preceding one passed or failed. The list of algorithms to run is defined by the GaudiSequencer.Members list. Difference between MainSequence and UserAlgorithms MainSequence : Use DaVinci().addToMainSequence([<a list of algorithms>]) to customize the initialization of DaVinci . This should be used to provide custom functions/TESs 2 that will be visible to all selection algorithms. UserAlgorithms : Actual selection algorithms. This is always appended at the end of the MainSequence of a DaVinci session. Difference CC and cc in a decay descriptor LoKi and DecayTreeTuple use uppercase CC for charge conjugation. CombineParticles uses lowercase cc . This is just an inconsistency in the DaVinci code base and there's nothing we can do as a user. TIS functor TIS is a (undocumented) LoKi functor\uff0c and it stands for Trigger Independent Signal . There's another similar term: TOS: Trigger On Signal . Functor usage TIS ( < trigger_line_to_look > , < trigger_decision_storage_location > ) Note <trigger_decision_storage_location> is a TES location An example from lhcb-ana-2014-052-v2r1 INTREE (( ABSID == 'mu+' ) & ( TIS ( 'L0.*' , 'L0TriggerTisTos' ))) The line above should be interpreted as following: In the decay tree, find a \\mu \\mu . We look over all L0.* trigger lines with TES L0TriggerTisTos , and require to have a trigger independent signal: Since we are triggering on \\mu \\mu , this requires that the trigger cannot be due to the \\mu \\mu . Also note that the whole decay tree is just a \\mu \\mu and a D D , so it means that we are either TOS on D D , TIS in the whole event, or both. Such as TupleToolApplyIsolation and TupleToolTauMuDiscVars . \u21a9 TES: Transient Event Storage. \u21a9","title":"DaVinci"},{"location":"software_manuals/davinci/#davinci-docker-image-usage","text":"","title":"DaVinci docker image usage"},{"location":"software_manuals/davinci/#launch-a-davinci-container","text":"To launch a DaVinci docker container, type in: docker run --rm -it -v <src_path>:/data -e UID=$(id -u) -e GID=$(id -g) --net=host umdlhcb/lhcb-stack-cc7:DaVinci-v42r8p1-SL note that <src_path> should be an absolute path pointing to the folder that we want to mount inside the container. If you are in the folder you want to mount, you can just type: docker run -- rm - it - v `pwd` : / data - e UID = $ ( id - u ) - e GID = $ ( id - g ) -- net = host umdlhcb / lhcb - stack - cc7 : DaVinci - v42r8p1 - SL Note docker images are read-only. When we launch a docker container , a writable layer is placed on top of the image.","title":"Launch a DaVinci container"},{"location":"software_manuals/davinci/#use-davinci-inside-container","text":"The command is very similar to the one used on lxplus : lb - run DaVinci / latest gaudirun . py < ntuple_options1 > < ntuple_options2 > ... since we have only 1 version of DaVinci inside the container, DaVinci/latest would always work.","title":"Use DaVinci inside container"},{"location":"software_manuals/davinci/#additional-tupletool","text":"The docker image with -SL suffix also contains a special DaVinci version that contains additional TupleTool 1 for semileptonic analysis. To access the special DaVinci , just substitute lb-run DaVinci/latest with run . For instance: run gaudirun . py < ntuple_options1 > < ntuple_options2 > ... Note To make our lives easier, a run.sh command is typically created in each stripping lines, such as: < project_root >/ 2012 - b2D0MuXB2DMuNuForTauMuLine / gen . sh If you see this file, take a look at it to see the availabe commands, and run it inside the docker container: ./run.sh <argument1> <argument2> ... # inside docker","title":"Additional TupleTool"},{"location":"software_manuals/davinci/#remove-old-docker-images","text":"To list all local docker images: docker images If you download a newer version of docker image, and want to remove the old ones to save disk space, you can: docker rmi < docker_image_tag > docker image prune here <docker_image_tag> should be something like umdlhcb/lhcb-stack-cc7:DaVinci-v42r8p1-SL .","title":"Remove old docker images"},{"location":"software_manuals/davinci/#davinci-tips-and-tricks","text":"","title":"DaVinci tips and tricks"},{"location":"software_manuals/davinci/#about-gaudisequencer","text":"GaudiSequencer is an per-event algorithm , such as DecayTreeTuple , in the sense that Gaudi knows that it should run on every event. GaudiSequencer is used to chain related algorithms, and it's default behavior is to only run an algorithm if the preceding algorithm passed (this is done in the c++ class for the algorithm by returning StatusCode::SUCCESS ). This default can be overridden by setting GaudiSequencer.IgnoreFilterPassed to True , which will run all the algorithms regardless of whether the preceding one passed or failed. The list of algorithms to run is defined by the GaudiSequencer.Members list.","title":"About GaudiSequencer"},{"location":"software_manuals/davinci/#difference-between-mainsequence-and-useralgorithms","text":"MainSequence : Use DaVinci().addToMainSequence([<a list of algorithms>]) to customize the initialization of DaVinci . This should be used to provide custom functions/TESs 2 that will be visible to all selection algorithms. UserAlgorithms : Actual selection algorithms. This is always appended at the end of the MainSequence of a DaVinci session.","title":"Difference between MainSequence and UserAlgorithms"},{"location":"software_manuals/davinci/#difference-cc-and-cc-in-a-decay-descriptor","text":"LoKi and DecayTreeTuple use uppercase CC for charge conjugation. CombineParticles uses lowercase cc . This is just an inconsistency in the DaVinci code base and there's nothing we can do as a user.","title":"Difference CC and cc in a decay descriptor"},{"location":"software_manuals/davinci/#tis-functor","text":"TIS is a (undocumented) LoKi functor\uff0c and it stands for Trigger Independent Signal . There's another similar term: TOS: Trigger On Signal .","title":"TIS functor"},{"location":"software_manuals/davinci/#functor-usage","text":"TIS ( < trigger_line_to_look > , < trigger_decision_storage_location > ) Note <trigger_decision_storage_location> is a TES location","title":"Functor usage"},{"location":"software_manuals/davinci/#an-example-from-lhcb-ana-2014-052-v2r1","text":"INTREE (( ABSID == 'mu+' ) & ( TIS ( 'L0.*' , 'L0TriggerTisTos' ))) The line above should be interpreted as following: In the decay tree, find a \\mu \\mu . We look over all L0.* trigger lines with TES L0TriggerTisTos , and require to have a trigger independent signal: Since we are triggering on \\mu \\mu , this requires that the trigger cannot be due to the \\mu \\mu . Also note that the whole decay tree is just a \\mu \\mu and a D D , so it means that we are either TOS on D D , TIS in the whole event, or both. Such as TupleToolApplyIsolation and TupleToolTauMuDiscVars . \u21a9 TES: Transient Event Storage. \u21a9","title":"An example from lhcb-ana-2014-052-v2r1"},{"location":"software_manuals/git_annex/","text":"It is harder to manage large (100 MB or more) files in git , as checking them in/out would take a much longer time. Also, it is undesirable to expose raw data outside of the collaboration. We use a git addon, git-annex , to manage large files. git-annex stores all tracked files under <project_root>/.git/annex , and link/copy these files to the expected locations. Initialize git-annex repository We have a private server 1 that hosts git repositories with git-annex capabilities. After clone this repository from github, please also add our private repository: git remote add julian git @129.2.92.92 : lhcb - ntuples - gen Note Please send us a SSH key so that we can give your read/write permission on the git-annex repository. Then we need to initialize the annex component: git annex init --version=7 Warning It is important to use a git-annex repository of v7 or newer! 2 To upgrade your git-annex repository to at least v7 , issue the following command inside your git repository: git annex upgrade Note Dropbox will not synchronize any symbolic links, so if the repository is placed within your Dropbox folder, and you have multiple computers, the symbolic links will be replaced by the actual files on all but the initial computers. Add files If you are adding large files that are unlikely to change in the future, such as .dst data files, use the following command: git annex add < path_to_file > If you want to add large files that are likely to change, such as .root ntuples generated by DaVinci , use regular git add command: git add < path_to_file > Note git add will add files to the git repository, not git-annex repository by default . Configuration is required to add only .root files to git-annex , and the rest to git . This has been done for this repository, in: < project_root >/ . gitattributes ` See this article for more information on configuring .gitattributes . Change annexed files Files added via git annex add are read only. For example: echo change > < path_to_annexed_file > > bash : < annexed_file > : Permission denied To change them, we need to unlock them first: git annex unlock < path_to_annexed_file > Now you can edit the unlocked file as you wish. After editing, use git commit to keep the changes. If you don't need to modify the file after all, or want to discard modifications, just use git annex lock . Note When you commit, git-annex will notice that you are committing an unlocked file, add its new content. A pointer to that content is what gets committed to git ; the actual content will go to git-annex . Files added via git add can be changed just like a regular file. Synchronize files between local and remote repositories This is a two-step process: git annex sync --no-pull julian git annex sync --content julian Warning The two separate steps are needed to avoid unnecessary merge conflicts. If you do not want to download every single file from the git-annex repo (which is probably a couple of GBs), drop the --content flag in the second step and download the metadata only: git annex sync --no-pull julian git annex sync julian Download individual files This is simple: git annex get < path_to_files > Drop local files The following command will remove the local copy of the file only , and will not delete the file from remote 3 : git annex drop < path_to_files > Note git would still think the working directory is clean, i.e. no change has been made. As of now, the server is sitting on Yipeng's desktop. It is named Julian , after Julian Schwinger . \u21a9 Please read this for the rationale. \u21a9 Deleting files from remote is dangerous! As the remote might be the last copy of the file so we may lose the file permanently. Still, if you insist, please refer to the official guide . \u21a9","title":"git-annex"},{"location":"software_manuals/git_annex/#initialize-git-annex-repository","text":"We have a private server 1 that hosts git repositories with git-annex capabilities. After clone this repository from github, please also add our private repository: git remote add julian git @129.2.92.92 : lhcb - ntuples - gen Note Please send us a SSH key so that we can give your read/write permission on the git-annex repository. Then we need to initialize the annex component: git annex init --version=7 Warning It is important to use a git-annex repository of v7 or newer! 2 To upgrade your git-annex repository to at least v7 , issue the following command inside your git repository: git annex upgrade Note Dropbox will not synchronize any symbolic links, so if the repository is placed within your Dropbox folder, and you have multiple computers, the symbolic links will be replaced by the actual files on all but the initial computers.","title":"Initialize git-annex repository"},{"location":"software_manuals/git_annex/#add-files","text":"If you are adding large files that are unlikely to change in the future, such as .dst data files, use the following command: git annex add < path_to_file > If you want to add large files that are likely to change, such as .root ntuples generated by DaVinci , use regular git add command: git add < path_to_file > Note git add will add files to the git repository, not git-annex repository by default . Configuration is required to add only .root files to git-annex , and the rest to git . This has been done for this repository, in: < project_root >/ . gitattributes ` See this article for more information on configuring .gitattributes .","title":"Add files"},{"location":"software_manuals/git_annex/#change-annexed-files","text":"Files added via git annex add are read only. For example: echo change > < path_to_annexed_file > > bash : < annexed_file > : Permission denied To change them, we need to unlock them first: git annex unlock < path_to_annexed_file > Now you can edit the unlocked file as you wish. After editing, use git commit to keep the changes. If you don't need to modify the file after all, or want to discard modifications, just use git annex lock . Note When you commit, git-annex will notice that you are committing an unlocked file, add its new content. A pointer to that content is what gets committed to git ; the actual content will go to git-annex . Files added via git add can be changed just like a regular file.","title":"Change annexed files"},{"location":"software_manuals/git_annex/#synchronize-files-between-local-and-remote-repositories","text":"This is a two-step process: git annex sync --no-pull julian git annex sync --content julian Warning The two separate steps are needed to avoid unnecessary merge conflicts. If you do not want to download every single file from the git-annex repo (which is probably a couple of GBs), drop the --content flag in the second step and download the metadata only: git annex sync --no-pull julian git annex sync julian","title":"Synchronize files between local and remote repositories"},{"location":"software_manuals/git_annex/#download-individual-files","text":"This is simple: git annex get < path_to_files >","title":"Download individual files"},{"location":"software_manuals/git_annex/#drop-local-files","text":"The following command will remove the local copy of the file only , and will not delete the file from remote 3 : git annex drop < path_to_files > Note git would still think the working directory is clean, i.e. no change has been made. As of now, the server is sitting on Yipeng's desktop. It is named Julian , after Julian Schwinger . \u21a9 Please read this for the rationale. \u21a9 Deleting files from remote is dangerous! As the remote might be the last copy of the file so we may lose the file permanently. Still, if you insist, please refer to the official guide . \u21a9","title":"Drop local files"},{"location":"software_manuals/grid/","text":"To run DaVinci jobs on the GRID , please follow these steps. Prepare a local DaVinci We need to build a local DaVinci to add our tools. This local verison will then be sent to the GRID by ganga automatically. For DaVinci-v42r8p1 , please refer to this Dockerfile for build instructions. Send job to the GRID with ganga For each of the stripping line folder inside this project, there should be a Python scripted named ganga_jobs.py . The general sematics is: ganga ganga_jobs . py < arguments > 2012-b2D0MuXB2DMuNuForTauMuLine $ ganga ganga_jobs . py -- help ganga script to process R ( D * ) run 1 data / MC . positional arguments : { all , mc - Bd2DstTauNu , mc - Bu2Dst0MuNu , mc - Bu2Dst0TauNu , mc - Bd2DstMuNu , data - 2012 } specify data type . optional arguments : - h , -- help show this help message and exit -- inverse if this flag is supplied , all types except specified in \" type \" will be processed . -- davinci DAVINCI specify path to local DaVinci build . - s { py8 , py6 }, -- simulation { py8 , py6 } specify simulation ( typically Pythia ) software package version . - p { Up , Down }, -- polarity { Up , Down } specify polarity . An example would be: ganga ganga_jobs . py mc - py6 - sim08a - Bd2Dsttaunu","title":"GRID"},{"location":"software_manuals/grid/#prepare-a-local-davinci","text":"We need to build a local DaVinci to add our tools. This local verison will then be sent to the GRID by ganga automatically. For DaVinci-v42r8p1 , please refer to this Dockerfile for build instructions.","title":"Prepare a local DaVinci"},{"location":"software_manuals/grid/#send-job-to-the-grid-with-ganga","text":"For each of the stripping line folder inside this project, there should be a Python scripted named ganga_jobs.py . The general sematics is: ganga ganga_jobs . py < arguments >","title":"Send job to the GRID with ganga"},{"location":"software_manuals/grid/#2012-b2d0muxb2dmunufortaumuline","text":"$ ganga ganga_jobs . py -- help ganga script to process R ( D * ) run 1 data / MC . positional arguments : { all , mc - Bd2DstTauNu , mc - Bu2Dst0MuNu , mc - Bu2Dst0TauNu , mc - Bd2DstMuNu , data - 2012 } specify data type . optional arguments : - h , -- help show this help message and exit -- inverse if this flag is supplied , all types except specified in \" type \" will be processed . -- davinci DAVINCI specify path to local DaVinci build . - s { py8 , py6 }, -- simulation { py8 , py6 } specify simulation ( typically Pythia ) software package version . - p { Up , Down }, -- polarity { Up , Down } specify polarity . An example would be: ganga ganga_jobs . py mc - py6 - sim08a - Bd2Dsttaunu","title":"2012-b2D0MuXB2DMuNuForTauMuLine"}]}