{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the wiki for <code>lhcb-ntuples-gen</code>, the repository that generates the ntuples for some LHCb analyses at UMD, currently just run 2 \\(R(D^{(*)})\\) analysis. In this section, you'll find useful information for installing the required dependencies for this project, as well as the usage of some tools, such as <code>git-annex</code>, that will be used in this project.</p>"},{"location":"#generation-of-analysis-ntuples","title":"Generation of analysis ntuples","text":"<p>The ntuples<sup>1</sup> generation is separated into:</p> <ol> <li>STEP 1: Use LHCb's <code>DaVinci</code> to generate ntuples from raw LHCb data<sup>2</sup>.    Follow this section to install required programs.    Use this manual to learn how to use <code>DaVinci</code> locally.    Follow this section to learn submitting <code>DaVinci</code>    jobs to the GRID.</li> <li>STEP 2: Use <code>babymaker</code> frame work to do slimming, skimming, and additional    calculation on previous ntuples, generating new ntuples.    Follow these two sections for installation.    A general guide for generating step-2 ntuple can be found here.</li> </ol> <p>Note</p> <p>These two steps have separate dependencies. If you only need to run one step, just follow the installation instruction for that particular step.</p> <p>Info</p> <ul> <li>The step-1 and step-2 ntuples have the following   naming conventions.</li> <li>For some tips on the general development of this project, see here</li> </ul>"},{"location":"#directory-structures","title":"Directory structures","text":"<pre><code>.\n\u251c\u2500\u2500 archive      # storage for plots, csv, and some old code\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 ganga\n\u251c\u2500\u2500 gen          # output produced by make rules, e.g. ntuple, cutflow MD\n\u251c\u2500\u2500 include      # headers\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 functor\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 rdx  # RDX-specific headers\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 python   # Python submodules, e.g. pyBabyMaker\n\u251c\u2500\u2500 ntuples      # storage for (mostly) GRID-produced ntuples\n\u251c\u2500\u2500 postprocess\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 cpp_templates  # C++ templates for babymaker\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 rdx-run1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 rdx-run2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ref-rdx-run1   # For Phoebe's sample ntuples\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 skims          # For branch removal at lxplus level\n\u251c\u2500\u2500 run1-rdx     # DaVinci scripts, sample ntuples for RDX run 1\n\u251c\u2500\u2500 run2-rdx     # ^^^^ for RDX run 2\n\u251c\u2500\u2500 scripts      # plotting, cutflow, and utility scripts\n\u251c\u2500\u2500 studies      # One-off studies\n\u2514\u2500\u2500 workflows    # workflows for ntuple production, cutflow, etc.\n    \u2514\u2500\u2500 rdx\n</code></pre>"},{"location":"#modifying-this-wiki","title":"Modifying this wiki","text":"<p>This wiki is written in a series of markdown files (<code>.md</code>) committed to the <code>docs</code> folder of the <code>lhcb-ntuples-gen</code> repository. The structure of the wiki is defined in <code>mkdocs.yml</code>. This file contains the title of each page in the wiki, and the markdown file that defines that page.</p> <p>To modify the wiki just modify <code>mkdocs.yml</code> or the <code>.md</code> files, and commit the changes to the repo. In about a minute Github Action will deploy the new website to https://umd-lhcb.github.io/lhcb-ntuples-gen/.</p> <p>To view the website locally (for instance, before committing), you will need to install <code>mkdocs</code> and the <code>material</code> theme <pre><code>pip install --user -r docs/requirements.txt\n</code></pre> Then, from <code>lhcb-ntuples-gen</code> you generate the website at the local address http://127.0.0.1:8000 with the command <pre><code>mkdocs serve\n</code></pre></p> <p>Note</p> <p>If you have problems installing <code>mkdocs</code>, you can also install it and run it inside nix with</p> <pre><code>nix develop  # Enter the nix shell in lhcb-ntuples-gen\npip install -r docs/requirements.txt\n</code></pre>"},{"location":"#version-control-systems-vcs","title":"Version control systems (VCS)","text":"<p>This project requires the following VCS to be installed in your system:</p> <ul> <li><code>git</code>: for source code version control</li> <li><code>git-annex</code> (that supports <code>v7</code> repository format): for data file version   control</li> </ul> <p>To install these programs, please follow this section. In addition, we provide a brief introduction on the usage of <code>git-annex</code>.</p> <ol> <li> <p><code>.root</code> files that can be processed by <code>DaVinci</code>, <code>ROOT</code>, and many other tools.\u00a0\u21a9</p> </li> <li> <p><code>.dst</code> files that directly come from CERN.\u00a0\u21a9</p> </li> </ol>"},{"location":"data/data_management/","title":"Data management","text":""},{"location":"data/data_management/#split-book-keeping-files","title":"Split book-keeping files","text":"<p>The <code>.dst</code> description files downloaded directly from <code>Dirac</code> contains a list with a large number of files (700 files or more). For example, this file contains 1690 lines: <pre><code>/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00001536_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00001039_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00000344_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00000301_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00000850_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00000988_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00001423_1.Semileptonic.dst\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00000841_1.Semileptonic.dst\n...\n/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00001096_1.Semileptonic.dst\n</code></pre></p> <p>It is impractical to download every single one of them, as we don't have enough storage space in <code>lxplus</code>, even with <code>EOS</code>.</p> <p>To split, we use <code>split</code>, a linux tool that should have been installed by default: <pre><code>split --lines=50 &lt;filename.txt&gt;\n</code></pre> In this case, the <code>&lt;filename.txt&gt;</code> will be sliced for every 50 lines, and the output filenames will be <code>x??</code>.</p>"},{"location":"data/data_management/#download-data-files-with-lxplus","title":"Download data files with <code>lxplus</code>","text":"<p>To download all dst files listed in a bookkeeping file: <pre><code>lhcb-proxy-init\nlb-dirac dirac-dms-get-file -D &lt;target_dir&gt; --File &lt;file_with_list_of_lfns&gt;\n</code></pre></p> <p>If you know a <code>LFN</code>, instead of a file that contains a list of <code>LFN</code>s, you can: <pre><code>lb-dirac dirac-dms-get-file -D &lt;target_dir&gt; -l &lt;lfn&gt;\n</code></pre></p>"},{"location":"data/data_management/#query-mc-dddb-and-conddb-tags","title":"Query MC DDDB and CONDDB tags","text":"<p>Warning</p> <p>MagUp and MagDown have different tags. Typically you can replace <code>mu100</code> with <code>md100</code>.</p> <p>Find the production number for a given <code>.dst</code> LFN, say: <pre><code>/lhcb/LHCb/Collision12/SEMILEPTONIC.DST/00067251/0000/00067251_00000841_1.Semileptonic.dst\n</code></pre></p> <p>It's production number is <code>67251</code>.</p> <p>On lxplus, do the following: <pre><code>lhcb-proxy-init\nlb-dirac dirac-bookkeeping-production-information 67251\n</code></pre></p> <p>The output contains both DDDB and CONDDB tags.</p>"},{"location":"data/data_sources/","title":"Data sources","text":""},{"location":"data/data_sources/#run-1-muonic-rd-data","title":"Run 1 muonic \\(R(D^{(*)})\\) data","text":"stripping line sample <code>DIRAC</code> path <code>b2D0MuXB2DMuNuForTauMuLine</code> <code>/LHCb/Collision12/Beam4000GeV-VeloClosed-MagDown/Real Data/Reco14/Stripping21/90000000/SEMILEPTONIC.DST</code> <code>b2D0MuXFakeB2DMuNuForTauMuLine</code> Same as above <p>Note</p> <p>Both lines are defined in the same file, which can be found here.</p> <p>We have to use <code>Stripping21</code> instead of <code>Stripping20</code> as mentioned in the notes, because the latter one is no longer fully exist.</p> <p>Also, <code>Stripping21</code> contains 2012 data, and <code>Stripping21r1</code> contains 2011 data.</p> <p>Info</p> <p>The Fake line contains all cuts as the Regular line, with the following differences:</p> <ol> <li>Fake uses <code>StdAllNoPIDsMuons</code> whereas Regular uses <code>StdLooseMuons</code></li> <li> <p>Fake has the \\(\\mu\\) cuts of: <code>(~ISMUON) &amp; (INMUON)</code></p> <p>Regular has the \\(\\mu\\) cuts of: <code>PIDmu &gt; 2.0</code></p> </li> </ol>"},{"location":"data/data_sources/#run-1-muonic-rd-monte-carlo","title":"Run 1 muonic \\(R(D^{(*)})\\) Monte-Carlo","text":"<p>Tip</p> <p>In <code>DIRAC</code>, make sure to switch from Simulation Condition to Event type. Then the event will be available at <code>MC/2012/&lt;event_type_uid&gt;</code>.</p>"},{"location":"data/data_sources/#normalization","title":"Normalization","text":"sample MC ID decay \\(D^0\\) <code>12573010</code> \\(B^- \\rightarrow D^0 \\mu \\nu\\) \\(D^0/D^{*+}\\) <code>11574020</code> \\(B^0 \\rightarrow D^{*+} \\mu \\nu\\) \\(D^0\\) <code>12573031</code> \\(B^- \\rightarrow D^{*0} \\mu \\nu\\)"},{"location":"data/data_sources/#signal","title":"Signal","text":"sample MC ID decay \\(D^0\\) <code>12573000</code> \\(B^- \\rightarrow D^0 \\tau \\nu\\) \\(D^0/D^{*+}\\) <code>11574010</code> \\(B^0 \\rightarrow D^{*+} \\tau \\nu\\) \\(D^0\\) <code>12573021</code> \\(B^- \\rightarrow D^{*0} \\tau \\nu\\)"},{"location":"data/data_sources/#d","title":"\\(D^{**}\\)","text":"sample MC ID decay \\(D^0/D^{*+}\\) <code>12873010</code> \\(B^- \\rightarrow D^{**0} \\mu \\nu \\rightarrow D^0\\) \\(D^0/D^{*+}\\) <code>11873010</code> \\(B^0 \\rightarrow D^{**+} \\mu \\nu \\rightarrow D^0\\) \\(D^0/D^{*+}\\) <code>12873030</code> \\(B^- \\rightarrow D^{**0} \\tau \\nu \\rightarrow D^0\\) \\(D^0/D^{*+}\\) <code>11873030</code> \\(B^0 \\rightarrow D^{**+} \\tau \\nu \\rightarrow D^0\\)"},{"location":"data/data_sources/#d-heavy","title":"\\(D^{**}\\) heavy","text":"sample MC ID decay \\(D^0\\) <code>12675010</code> \\(B^- \\rightarrow D^{**} (\\rightarrow D^0 \\pi \\pi) \\mu \\nu\\) \\(D^0\\) <code>11674400</code> \\(B^0 \\rightarrow D^{**} (\\rightarrow D^0 \\pi \\pi) \\mu \\nu\\) \\(D^0/D^{*+}\\) <code>12675400</code> \\(B^- \\rightarrow D^{**} (\\rightarrow D^{*+} \\pi \\pi) \\mu \\nu\\) \\(D^0/D^{*+}\\) <code>11676010</code> \\(B^0 \\rightarrow D^{**} (\\rightarrow D^{*+} \\pi \\pi) \\mu \\nu\\) \\(D^0\\) <code>12675430</code> \\(B^- \\rightarrow D^{**} (\\rightarrow D^{*0} \\pi \\pi) \\mu \\nu\\)"},{"location":"data/data_sources/#d_s","title":"\\(D_s^{**}\\)","text":"sample MC ID decay \\(D^0\\) <code>13873000</code> \\(B_s \\rightarrow D_s^{**} (\\rightarrow D^0 K) \\mu \\nu\\) \\(D^{*+}\\) <code>13874000</code> \\(B_s \\rightarrow D^{**+} \\mu \\nu\\)"},{"location":"data/data_sources/#ddx","title":"\\(DDX\\)","text":"sample MC ID decay \\(D^0\\) <code>11873000</code> \\(B^0 \\rightarrow D^0 X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^0\\) <code>12873000</code> \\(B^+ \\rightarrow D^0 X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^0\\) <code>11873020</code> \\(B^0 \\rightarrow D^0 D_s (\\rightarrow \\tau \\nu) X\\) \\(D^0\\) <code>12873021</code> \\(B^+ \\rightarrow D^0 D_s (\\rightarrow \\tau \\nu) X\\) \\(D^{*+}\\) <code>11874050</code> \\(B^0 \\rightarrow D^{*+} X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^{*+}\\) <code>12874010</code> \\(B^+ \\rightarrow D^{*+} X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^{*+}\\) <code>11874070</code> \\(B^0 \\rightarrow D^{*+} D_s (\\rightarrow \\tau \\nu) X\\) \\(D^{*+}\\) <code>11874030</code> \\(B^+ \\rightarrow D^{*+} D_s (\\rightarrow \\tau \\nu) X\\)"},{"location":"data/data_sources/#cocktail-sample-for-cutflow-study","title":"Cocktail sample for cutflow study","text":"sample MC ID decay \\(D^0/D^{*+}\\) <code>11874091</code> \\(B_d \\rightarrow D^0 X \\mu \\nu\\), \\(D^0 = cocktail\\)"},{"location":"data/data_sources/#run-2-muonic-rd-data","title":"Run 2 muonic \\(R(D^{(*)})\\) data","text":"stripping line sample <code>DIRAC</code> path <code>b2D0MuXB2DMuForTauMuLine</code> <code>/LHCb/Collision16/Beam6500GeV-VeloClosed-MagDown/Real Data/Reco16/Stripping28r1/90000000/SEMILEPTONIC.DST</code> <code>b2D0MuXFakeB2DMuForTauMuLine</code> Same as above <p>Note</p> <p>As in run 1, both are defined in the same file.</p> <p>Warning</p> <p>The run 2 stripping line name is different from that of run 1! The run 2 stripping line omits <code>Nu</code>.</p>"},{"location":"data/data_sources/#run-2-muonic-rd-monte-carlo","title":"Run 2 muonic \\(R(D^{(*)})\\) Monte-Carlo","text":"<p>Info</p> <p>The FullSim production IDs are: <code>74233, 74234, 74494, 74509</code>.</p> <p>Tips</p> <p>To find the MC IDs of a production, go to DIRAC, then navigate: Data -&gt; Production Request -&gt; input the production ID you'd like to inspect.</p>"},{"location":"data/data_sources/#normalization_1","title":"Normalization","text":"sample MC ID decay \\(D^0\\) <code>12573012</code> \\(B^- \\rightarrow D^0 \\mu \\nu\\) \\(D^0/D^{*+}\\) <code>11574021</code> \\(B^0 \\rightarrow D^{*+} \\mu \\nu\\) \\(D^0\\) <code>12773410</code> \\(B^- \\rightarrow D^{*0} \\mu \\nu\\)"},{"location":"data/data_sources/#signal_1","title":"Signal","text":"sample MC ID decay \\(D^0\\) <code>12573001</code> \\(B^- \\rightarrow D^0 \\tau \\nu\\) \\(D^0/D^{*+}\\) <code>11574011</code> \\(B^0 \\rightarrow D^{*+} \\tau \\nu\\) \\(D^0\\) <code>12773400</code> \\(B^- \\rightarrow D^{*0} \\tau \\nu\\)"},{"location":"data/data_sources/#d_1","title":"\\(D^{**}\\)","text":"sample MC ID decay \\(D^0/D^{*+}\\) <code>11874430</code> \\(B^0 \\rightarrow D^{**+} \\mu \\nu \\rightarrow D^0\\) \\(D^0/D^{*+}\\) <code>11874440</code> \\(B^0 \\rightarrow D^{**+} \\tau \\nu \\rightarrow D^0\\) \\(D^0/D^{*+}\\) <code>12873450</code> \\(B^- \\rightarrow D^{**0} \\mu \\nu \\rightarrow D^0\\) \\(D^0/D^{*+}\\) <code>12873460</code> \\(B^- \\rightarrow D^{**0} \\tau \\nu \\rightarrow D^0\\)"},{"location":"data/data_sources/#d-heavy_1","title":"\\(D^{**}\\) heavy","text":"sample MC ID decay \\(D^0\\) <code>12675011</code> \\(B^- \\rightarrow D^{**} (\\rightarrow D^0 \\pi \\pi) \\mu \\nu\\) \\(D^0\\) <code>11674401</code> \\(B^0 \\rightarrow D^{**} (\\rightarrow D^0 \\pi \\pi) \\mu \\nu\\) \\(D^0/D^{*+}\\) <code>12675402</code> \\(B^- \\rightarrow D^{**} (\\rightarrow D^{*+} \\pi \\pi) \\mu \\nu\\) \\(D^0/D^{*+}\\) <code>11676012</code> \\(B^0 \\rightarrow D^{**} (\\rightarrow D^{*+} \\pi \\pi) \\mu \\nu\\) \\(D^0\\) <code>12875440</code> \\(B^- \\rightarrow D^{**} (\\rightarrow D^{*0} \\pi \\pi) \\mu \\nu\\)"},{"location":"data/data_sources/#d_s_1","title":"\\(D_s^{**}\\)","text":"sample MC ID decay \\(D^0\\) <code>13874020</code> \\(B_s \\rightarrow D_s^{**} (\\rightarrow D^0 K) \\mu \\nu\\) \\(D^{*+}\\) <code>13674000</code> \\(B_s \\rightarrow D^{**+} \\mu \\nu\\)"},{"location":"data/data_sources/#ddx_1","title":"\\(DDX\\)","text":"sample MC ID decay \\(D^0\\) <code>11894600</code> \\(B^0 \\rightarrow D^0 X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^0\\) <code>12893600</code> \\(B^+ \\rightarrow D^0 X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^0\\) <code>11894200</code> \\(B^0 \\rightarrow D^0 D_s (\\rightarrow \\tau \\nu) X\\) \\(D^0\\) <code>12893610</code> \\(B^+ \\rightarrow D^0 D_s (\\rightarrow \\tau \\nu) X\\) \\(D^{*+}\\) <code>11894610</code> \\(B^0 \\rightarrow D^{*+} X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^{*+}\\) <code>12895400</code> \\(B^+ \\rightarrow D^{*+} X_c (\\rightarrow \\mu \\nu X') X\\) \\(D^{*+}\\) <code>11894210</code> \\(B^0 \\rightarrow D^{*+} D_s (\\rightarrow \\tau \\nu) X\\) \\(D^{*+}\\) <code>12895000</code> \\(B^+ \\rightarrow D^{*+} D_s (\\rightarrow \\tau \\nu) X\\)"},{"location":"data/data_sources/#cocktail-sample-for-cutflow-study_1","title":"Cocktail sample for cutflow study","text":"sample MC ID decay \\(D^0/D^{*+}\\) <code>11874091</code> \\(B_d \\rightarrow D^0 X \\mu \\nu\\), \\(D^0 = cocktail\\)"},{"location":"data/comparison/trigger_lines/","title":"Trigger lines","text":""},{"location":"data/comparison/trigger_lines/#2012-data-magdown-tck-0x990042","title":"2012 data, MagDown, TCK <code>0x990042</code>","text":"<p>L0, HLT 1 and 2 lines are extracted with <code>TCKsh</code>. See here for more info.</p>"},{"location":"data/comparison/trigger_lines/#l0-24-lines","title":"L0 (24 lines)","text":"<pre><code>L0B1gasDecision\nL0B2gasDecision\nL0CALODecision\nL0DiEM,lowMultDecision\nL0DiHadron,lowMultDecision\nL0DiMuonDecision\nL0DiMuon,lowMultDecision\nL0DiMuonNoSPDDecision\nL0ElectronDecision\nL0Electron,lowMultDecision\nL0ElectronHiDecision\nL0ElectronNoSPDDecision\nL0HadronDecision\nL0HadronNoSPDDecision\nL0HighSumETJetDecision\nL0MUON,minbiasDecision\nL0MuonDecision\nL0Muon,lowMultDecision\nL0MuonNoSPDDecision\nL0NoPVFlagDecision\nL0PhotonDecision\nL0Photon,lowMultDecision\nL0PhotonHiDecision\nL0PhotonNoSPDDecision\n</code></pre>"},{"location":"data/comparison/trigger_lines/#hlt-1-33-lines","title":"HLT 1 (33 lines)","text":"<pre><code>Hlt1TrackAllL0TightDecision\nHlt1TrackMuonDecision\nHlt1TrackPhotonDecision\nHlt1TrackForwardPassThroughDecision\nHlt1TrackForwardPassThroughLooseDecision\nHlt1LumiDecision\nHlt1LumiMidBeamCrossingDecision\nHlt1MBNoBiasDecision\nHlt1CharmCalibrationNoBiasDecision\nHlt1MBMicroBiasVeloDecision\nHlt1MBMicroBiasTStationDecision\nHlt1L0AnyDecision\nHlt1L0AnyNoSPDDecision\nHlt1L0HighSumETJetDecision\nHlt1NoPVPassThroughDecision\nHlt1DiProtonDecision\nHlt1DiProtonLowMultDecision\nHlt1BeamGasNoBeamBeam1Decision\nHlt1BeamGasNoBeamBeam2Decision\nHlt1BeamGasBeam1Decision\nHlt1BeamGasBeam2Decision\nHlt1BeamGasCrossingEnhancedBeam1Decision\nHlt1BeamGasCrossingEnhancedBeam2Decision\nHlt1BeamGasCrossingForcedRecoDecision\nHlt1BeamGasCrossingForcedRecoFullZDecision\nHlt1BeamGasHighRhoVerticesDecision\nHlt1ODINTechnicalDecision\nHlt1Tell1ErrorDecision\nHlt1VeloClosingMicroBiasDecision\nHlt1VertexDisplVertexDecision\nHlt1BeamGasCrossingParasiticDecision\nHlt1ErrorEventDecision\nHlt1GlobalDecision\n</code></pre>"},{"location":"data/comparison/trigger_lines/#hlt-2-33-lines","title":"HLT 2 (33 lines)","text":"<pre><code>Hlt2LambdaC_LambdaC2Lambda0LLKDecision\nHlt2LambdaC_LambdaC2Lambda0DDPiDecision\nHlt2LambdaC_LambdaC2Lambda0DDKDecision\nHlt2RadiativeTopoTrackDecision\nHlt2RadiativeTopoPhotonDecision\nHlt2B2HHPi0_MergedDecision\nHlt2CharmHadD2HHHDecision\nHlt2CharmHadD2HHHWideMassDecision\nHlt2CharmHadD02HHHHDst_4piDecision\nHlt2CharmHadD02HHHHDst_4piWideMassDecision\nHlt2CharmHadD02HHHH_4piDecision\nHlt2CharmHadD02HHHH_4piWideMassDecision\nHlt2CharmHadD02HHHHDst_K3piDecision\nHlt2CharmHadD02HHHHDst_K3piWideMassDecision\nHlt2CharmHadD02HHHH_K3piDecision\nHlt2CharmHadD02HHHH_K3piWideMassDecision\nHlt2CharmHadD02HHHHDst_KKpipiDecision\nHlt2CharmHadD02HHHHDst_KKpipiWideMassDecision\nHlt2CharmHadD02HHHH_KKpipiDecision\nHlt2CharmHadD02HHHH_KKpipiWideMassDecision\nHlt2CharmHadD02HHHHDst_2K2piDecision\nHlt2CharmHadD02HHHHDst_2K2piWideMassDecision\nHlt2CharmHadD02HHHH_2K2piDecision\nHlt2CharmHadD02HHHH_2K2piWideMassDecision\nHlt2CharmHadD02HHHHDst_3KpiDecision\nHlt2CharmHadD02HHHHDst_3KpiWideMassDecision\nHlt2CharmHadD02HHHH_3KpiDecision\nHlt2CharmHadD02HHHH_3KpiWideMassDecision\nHlt2CharmSemilepD02PiPiMuMuDecision\nHlt2CharmSemilepD02KKMuMuDecision\nHlt2CharmSemilepD02KPiMuMuDecision\nHlt2ErrorEventDecision\nHlt2GlobalDecision\n</code></pre>"},{"location":"data/comparison/trigger_lines/#2016-data-magdown-tck-0x1138160e","title":"2016 data, MagDown, TCK <code>0x1138160E</code>","text":""},{"location":"data/comparison/trigger_lines/#l0-17-lines","title":"L0 (17 lines)","text":"<pre><code>L0B1gasDecision\nL0B2gasDecision\nL0CALODecision\nL0DiEM,lowMultDecision\nL0DiHadron,lowMultDecision\nL0DiMuonDecision\nL0DiMuon,lowMultDecision\nL0ElectronDecision\nL0Electron,lowMultDecision\nL0HadronDecision\nL0JetElDecision\nL0JetPhDecision\nL0MuonDecision\nL0Muon,lowMultDecision\nL0MuonEWDecision\nL0PhotonDecision\nL0Photon,lowMultDecision\n</code></pre>"},{"location":"data/comparison/trigger_lines/#hlt-1-57-lines","title":"HLT 1 (57 lines)","text":"<pre><code>Hlt1TrackMVADecision\nHlt1TwoTrackMVADecision\nHlt1TrackMVALooseDecision\nHlt1TwoTrackMVALooseDecision\nHlt1TrackMuonDecision\nHlt1TrackMuonMVADecision\nHlt1DiMuonHighMassDecision\nHlt1DiMuonLowMassDecision\nHlt1SingleMuonHighPTDecision\nHlt1DiMuonNoL0Decision\nHlt1B2GammaGammaDecision\nHlt1B2HH_LTUNB_KKDecision\nHlt1B2HH_LTUNB_KPiDecision\nHlt1B2HH_LTUNB_PiPiDecision\nHlt1B2PhiGamma_LTUNBDecision\nHlt1B2PhiPhi_LTUNBDecision\nHlt1BeamGasBeam1Decision\nHlt1BeamGasBeam1VeloOpenDecision\nHlt1BeamGasBeam2Decision\nHlt1BeamGasBeam2VeloOpenDecision\nHlt1BeamGasHighRhoVerticesDecision\nHlt1Bottomonium2KstarKstarDecision\nHlt1Bottomonium2PhiPhiDecision\nHlt1CalibHighPTLowMultTrksDecision\nHlt1CalibMuonAlignJpsiDecision\nHlt1CalibRICHMirrorRICH1Decision\nHlt1CalibRICHMirrorRICH2Decision\nHlt1CalibTrackingKKDecision\nHlt1CalibTrackingKPiDecision\nHlt1CalibTrackingKPiDetachedDecision\nHlt1CalibTrackingPiPiDecision\nHlt1DiMuonNoIPDecision\nHlt1DiProtonDecision\nHlt1DiProtonLowMultDecision\nHlt1IncPhiDecision\nHlt1L0AnyDecision\nHlt1L0AnyNoSPDDecision\nHlt1LowMultMaxVeloAndHerschelDecision\nHlt1LowMultMaxVeloCutDecision\nHlt1LowMultMuonDecision\nHlt1LowMultPassThroughDecision\nHlt1LowMultVeloAndHerschel_HadronsDecision\nHlt1LowMultVeloAndHerschel_LeptonsDecision\nHlt1LowMultVeloCut_HadronsDecision\nHlt1LowMultVeloCut_LeptonsDecision\nHlt1LumiDecision\nHlt1MBNoBiasDecision\nHlt1MultiDiMuonNoIPDecision\nHlt1MultiMuonNoL0Decision\nHlt1NoBiasNonBeamBeamDecision\nHlt1ODINTechnicalDecision\nHlt1SingleElectronNoIPDecision\nHlt1SingleMuonNoIPDecision\nHlt1Tell1ErrorDecision\nHlt1VeloClosingMicroBiasDecision\nHlt1ErrorEventDecision\nHlt1GlobalDecision\n</code></pre>"},{"location":"data/comparison/trigger_lines/#hlt-2","title":"HLT 2","text":"<p><code>TCKsh</code> can no longer extract HLT 2 line info for run 2. Please refer to the relevant part of the HLT project for all HLT 2 lines.</p>"},{"location":"data/comparison/RDst_step2_cuts_validation/RDst_step2_cuts_validation/","title":"\\(R(D^*)\\) run 1 step-2 cuts validation","text":"<p>We took Phoebe's \\(D^*\\) step-2 ntuple located at: <pre><code>ntuples/ref-rdx-run1/Dst-mix/Dst--20_07_02--mix--all--2011-2012--md-mu--phoebe.root\n</code></pre> and extracted the ISO sample as a reference.</p> <p>Then, we apply most step-2 cuts to our newly generated 2011 MagDown ntuple: <pre><code>ntuples/0.9.2-2011_production/Dst_D0--20_10_12--std--LHCb_Collision11_Beam3500GeV-VeloClosed-MagDown_Real_Data_Reco14_Stripping21r1_90000000_SEMILEPTONIC.DST.root\n</code></pre> for comparison.</p> <p>There are ~79k candidates in Phoebe's, ~72k in ours. This is a mystery to be solved.</p>"},{"location":"data/comparison/RDst_step2_cuts_validation/RDst_step2_cuts_validation/#el","title":"<code>el</code>","text":"difference [GeV] difference (normalized) distributions [GeV]"},{"location":"data/comparison/RDst_step2_cuts_validation/RDst_step2_cuts_validation/#mm2","title":"<code>mm2</code>","text":"difference [GeV<sup>2</sup>] difference (normalized) distributions [GeV<sup>2</sup>]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/","title":"\\(R(D^*)\\) variables, run 1","text":"<p>In general, we find the unique events <sup>1</sup> in both ntuples, then see if they occur in both ntuples, and find their:</p> <ol> <li>absolute difference</li> <li>normalized difference, with one of them used as normalization</li> </ol>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-data","title":"Comparison between data","text":"<p>The files being compared are, located in <code>ntuples/run1-Dst</code>:</p> <ul> <li><code>ntuples/ref-rdx-run1/Dst-std/Dst--19_09_05--std--data--2012--md--phoebe.root</code> (Phoebe)</li> <li><code>ntuples/pre-0.9.0/Dst-std/Dst--19_09_05--std--data--2012--md.root</code> (Yipeng)</li> </ul> <p>Note</p> <ul> <li> <p>Phoebe used this DaVinci script   to generate her ntuple, with <code>DaVinci v36r1p2</code>.</p> </li> <li> <p>We used our script<sup>2</sup>, and   <code>DaVinci v42r8p1</code>.</p> </li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#dst_2010_minus_p","title":"<code>Dst_2010_minus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_p","title":"<code>Kplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_px","title":"<code>Kplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_py","title":"<code>Kplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_pz","title":"<code>Kplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_p","title":"<code>muplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_px","title":"<code>muplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_py","title":"<code>muplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_pz","title":"<code>muplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt","title":"<code>Y_ISOLATION_BDT</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_endvertex_x","title":"<code>Y_ENDVERTEX_X</code>","text":"difference [mm] difference (normalized) distributions [mm]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_endvertex_y","title":"<code>Y_ENDVERTEX_Y</code>","text":"difference [mm] difference (normalized) distributions [mm]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_endvertex_z","title":"<code>Y_ENDVERTEX_Z</code>","text":"difference [mm] difference (normalized) distributions [mm]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_ownpv_x","title":"<code>Y_OWNPV_X</code>","text":"difference [mm] difference (normalized) distributions [mm]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_ownpv_y","title":"<code>Y_OWNPV_Y</code>","text":"difference [mm] difference (normalized) distributions [mm]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_ownpv_z","title":"<code>Y_OWNPV_Z</code>","text":"difference [mm] difference (normalized) distributions [mm]"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-davinci-v36r1p2-and-v42r8p1","title":"Comparison between <code>DaVinci</code> <code>v36r1p2</code> and <code>v42r8p1</code>","text":"<p>Files used:</p> <ul> <li><code>run1-rdx/samples/Dst--19_07_12--std--data--2012--md--dv36-subset.root</code></li> <li><code>run1-rdx/samples/Dst--19_07_12--std--data--2012--md--dv42-subset.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p_1","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#dst_2010_minus_p_1","title":"<code>Dst_2010_minus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_p_1","title":"<code>Kplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_px_1","title":"<code>Kplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_py_1","title":"<code>Kplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_pz_1","title":"<code>Kplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_p_1","title":"<code>muplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_px_1","title":"<code>muplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_py_1","title":"<code>muplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_pz_1","title":"<code>muplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt_1","title":"<code>Y_ISOLATION_BDT</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2_1","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3_1","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type","title":"<code>Y_ISOLATION_Type</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type2","title":"<code>Y_ISOLATION_Type2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type3","title":"<code>Y_ISOLATION_Type3</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type4","title":"<code>Y_ISOLATION_Type4</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-davinci-v36r1p2-and-v42r8p1-without-velo-pions","title":"Comparison between <code>DaVinci</code> <code>v36r1p2</code> and <code>v42r8p1</code>, without VELO pions","text":"<p>Files used:</p> <ul> <li><code>run1-rdx/samples/Dst--19_09_11--std--data--2012--md--dv36-subset-no_velo_pions.root</code></li> <li><code>run1-rdx/samples/Dst--19_09_11--std--data--2012--md--dv42-subset-no_velo_pions.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt_2","title":"<code>Y_ISOLATION_BDT</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2_2","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3_2","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type_1","title":"<code>Y_ISOLATION_Type</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff","title":"Matched diff","text":"<p>Note</p> <p>These are the difference in track type for momentum-matched tracks in events matched by the <code>event</code> and <code>run</code> numbers.  The momentum matching is performed for each track \\(i = 1,2,3\\) in release r=<code>v36</code>, <code>v42</code> by finding a track in the opposite release for any index \\(1\\), \\(2\\), or \\(3\\) whose difference in every 4-momentum component is smaller than 10 eV.</p> <p>The version should be interpreted in this way: <code>v36r1p2</code> means <code>v42</code> track type is used as a reference, and the difference is calculated with: \\(TrackType_{v42} - TrackType_{v36}\\).</p> <code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type2_1","title":"<code>Y_ISOLATION_Type2</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_1","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_1","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type3_1","title":"<code>Y_ISOLATION_Type3</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_2","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_2","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type4_1","title":"<code>Y_ISOLATION_Type4</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track1","title":"<code>ISOLATION_TRACK1</code>","text":"<p>Note</p> <p><code>ISOLATION_TRACK{1,2,3}</code> represent the best 3 tracks selected by the BDT. A value of \\(1\\) represents <code>ISOLATION_TRACK1</code>. \\(2\\) and \\(3\\) are interpreted in the same way. A value of \\(0\\) indicates no match at all. A value of \\(-2\\) indicates no actual track exists, and is only assigned when the BDT score is \\(-2\\).</p> <p>The version should be interpreted in this way: <code>v36r1p2</code> means matching a <code>v36</code> track with all 3 <code>v42</code> tracks with the same UID. The <code>v42</code> tracks act as references.</p> <p>Also, for track \\(i\\), if the match is 100%, then all datapoints should be at \\(i\\).</p> <code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track2","title":"<code>ISOLATION_TRACK2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track3","title":"<code>ISOLATION_TRACK3</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-davinci-v36r1p2-and-v42r8p1-without-refitting","title":"Comparison between <code>DaVinci</code> <code>v36r1p2</code> and <code>v42r8p1</code>, without refitting","text":"<p>Files used:</p> <ul> <li><code>run1-rdx/samples/Dst--19_10_04--std--data--2012--md--dv36-subset-no_refit.root</code></li> <li><code>run1-rdx/samples/Dst--19_09_26--std--data--2012--md--dv42-subset-no_refit.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p_2","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#dst_2010_minus_p_2","title":"<code>Dst_2010_minus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_p_2","title":"<code>Kplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_px_2","title":"<code>Kplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_py_2","title":"<code>Kplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_pz_2","title":"<code>Kplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_p_2","title":"<code>muplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_px_2","title":"<code>muplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_py_2","title":"<code>muplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_pz_2","title":"<code>muplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt_3","title":"<code>Y_ISOLATION_BDT</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2_3","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3_3","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type_2","title":"<code>Y_ISOLATION_Type</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_3","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_3","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type2_2","title":"<code>Y_ISOLATION_Type2</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_4","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_4","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type3_2","title":"<code>Y_ISOLATION_Type3</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_5","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_5","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type4_2","title":"<code>Y_ISOLATION_Type4</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track1_1","title":"<code>ISOLATION_TRACK1</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track2_1","title":"<code>ISOLATION_TRACK2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track3_1","title":"<code>ISOLATION_TRACK3</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type1_chi2","title":"<code>TRACK_TYPE1_CHI2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type3_chi2","title":"<code>TRACK_TYPE3_CHI2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type4_chi2","title":"<code>TRACK_TYPE4_CHI2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track-type-difference-vs-bdt-score-difference","title":"Track type difference vs. BDT score difference","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-davinci-v36r1p2-and-v45r3-without-refitting","title":"Comparison between <code>DaVinci</code> <code>v36r1p2</code> and <code>v45r3</code>, without refitting","text":"<p>Files used:</p> <ul> <li><code>run1-rdx/samples/Dst--19_10_04--std--data--2012--md--dv36-subset-no_refit.root</code></li> <li><code>run1-rdx/samples/Dst--19_11_14--std--data--2012--md--dv45-subset-no_refit.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p_3","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#dst_2010_minus_p_3","title":"<code>Dst_2010_minus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_p_3","title":"<code>Kplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_px_3","title":"<code>Kplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_py_3","title":"<code>Kplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_pz_3","title":"<code>Kplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_p_3","title":"<code>muplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_px_3","title":"<code>muplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_py_3","title":"<code>muplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_pz_3","title":"<code>muplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt_4","title":"<code>Y_ISOLATION_BDT</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2_4","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3_4","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type_3","title":"<code>Y_ISOLATION_Type</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_6","title":"Raw","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_6","title":"Matched diff","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type2_3","title":"<code>Y_ISOLATION_Type2</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_7","title":"Raw","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_7","title":"Matched diff","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type3_3","title":"<code>Y_ISOLATION_Type3</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_8","title":"Raw","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_8","title":"Matched diff","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type4_3","title":"<code>Y_ISOLATION_Type4</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track1_2","title":"<code>ISOLATION_TRACK1</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track2_2","title":"<code>ISOLATION_TRACK2</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track3_2","title":"<code>ISOLATION_TRACK3</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type1_chi2_1","title":"<code>TRACK_TYPE1_CHI2</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type3_chi2_1","title":"<code>TRACK_TYPE3_CHI2</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type4_chi2_1","title":"<code>TRACK_TYPE4_CHI2</code>","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track-type-difference-vs-bdt-score-difference_1","title":"Track type difference vs. BDT score difference","text":"<code>v36r1p2</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-davinci-v42r8p1-and-v45r3-without-refitting","title":"Comparison between <code>DaVinci</code> <code>v42r8p1</code> and <code>v45r3</code>, without refitting","text":"<p>Files used:</p> <ul> <li><code>run1-rdx/samples/Dst--19_09_26--std--data--2012--md--dv42-subset-no_refit.root</code></li> <li><code>run1-rdx/samples/Dst--19_11_14--std--data--2012--md--dv45-subset-no_refit.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p_4","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#dst_2010_minus_p_4","title":"<code>Dst_2010_minus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_p_4","title":"<code>Kplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_px_4","title":"<code>Kplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_py_4","title":"<code>Kplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_pz_4","title":"<code>Kplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_p_4","title":"<code>muplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_px_4","title":"<code>muplus_PX</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_py_4","title":"<code>muplus_PY</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#muplus_pz_4","title":"<code>muplus_PZ</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt_5","title":"<code>Y_ISOLATION_BDT</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2_5","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3_5","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference (DL) difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type_4","title":"<code>Y_ISOLATION_Type</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_9","title":"Raw","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_9","title":"Matched diff","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type2_4","title":"<code>Y_ISOLATION_Type2</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_10","title":"Raw","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_10","title":"Matched diff","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type3_4","title":"<code>Y_ISOLATION_Type3</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_11","title":"Raw","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_11","title":"Matched diff","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type4_4","title":"<code>Y_ISOLATION_Type4</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track1_3","title":"<code>ISOLATION_TRACK1</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track2_3","title":"<code>ISOLATION_TRACK2</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track3_3","title":"<code>ISOLATION_TRACK3</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type1_chi2_2","title":"<code>TRACK_TYPE1_CHI2</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type3_chi2_2","title":"<code>TRACK_TYPE3_CHI2</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type4_chi2_2","title":"<code>TRACK_TYPE4_CHI2</code>","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track-type-difference-vs-bdt-score-difference_2","title":"Track type difference vs. BDT score difference","text":"<code>v42r8p1</code> <code>v45r3</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-davinci-v36r1p2-and-v42r8p1-without-refitting-nor-momentum-rescaling","title":"Comparison between <code>DaVinci</code> <code>v36r1p2</code> and <code>v42r8p1</code>, without refitting nor momentum rescaling","text":"<p>Files used:</p> <ul> <li><code>run1-rdx/samples/Dst--19_10_11--std--data--2012--md--dv36-subset-no_refit_no_rescale.root</code></li> <li><code>run1-rdx/samples/Dst--19_10_11--std--data--2012--md--dv42-subset-no_refit_no_rescale.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p_5","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#dst_2010_minus_p_5","title":"<code>Dst_2010_minus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type_5","title":"<code>Y_ISOLATION_Type</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_12","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_12","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type2_5","title":"<code>Y_ISOLATION_Type2</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_13","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_13","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type3_5","title":"<code>Y_ISOLATION_Type3</code>","text":""},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#raw_14","title":"Raw","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#matched-diff_14","title":"Matched diff","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_type4_5","title":"<code>Y_ISOLATION_Type4</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track1_4","title":"<code>ISOLATION_TRACK1</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track2_4","title":"<code>ISOLATION_TRACK2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#isolation_track3_4","title":"<code>ISOLATION_TRACK3</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type1_chi2_3","title":"<code>TRACK_TYPE1_CHI2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type3_chi2_3","title":"<code>TRACK_TYPE3_CHI2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track_type4_chi2_3","title":"<code>TRACK_TYPE4_CHI2</code>","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#track-type-difference-vs-bdt-score-difference_3","title":"Track type difference vs. BDT score difference","text":"<code>v36r1p2</code> <code>v42r8p1</code>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#comparison-between-mc-pythia-6","title":"Comparison between MC (Pythia 6)","text":"<p>Files used, located in <code>run1-rdx/ntuples/mc</code>:</p> <ul> <li><code>ntuples/ref-rdx-run1/Dst-mc/Dst--19_09_26--mc--Bd2DstTauNu--2012--md--py6-phoebe.root</code></li> <li><code>ntuples/pre-0.9.0/Dst-mc/Dst--19_09_26--mc--Bd2DstTauNu--2012--md--py6-sim08a.root</code></li> </ul>"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#d0_p_6","title":"<code>D0_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#kplus_p_5","title":"<code>Kplus_P</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt_6","title":"<code>Y_ISOLATION_BDT</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt2_6","title":"<code>Y_ISOLATION_BDT2</code>","text":"difference [MeV] difference (normalized)"},{"location":"data/comparison/RDst_vars_run1/RDst_vars_run1/#y_isolation_bdt3_6","title":"<code>Y_ISOLATION_BDT3</code>","text":"difference [MeV] difference (normalized) <ol> <li> <p>Typically by the combination of <code>runNumber</code> and <code>eventNumber</code>.\u00a0\u21a9</p> </li> <li> <p>Based on Phoebe's original script.\u00a0\u21a9</p> </li> </ol>"},{"location":"data/cutflows/RDX_run1_phoebe_vs_us/","title":"RDX run 1 validation: Phoebe vs us, 2011 MD","text":"<p>Info</p> <p>The bold number with a link indicates that this number is consistent with a previous study, with the previous study linked.</p> <p>If a number is bold but w/o a link, it shares the link for the number to its left.</p>"},{"location":"data/cutflows/RDX_run1_phoebe_vs_us/#d-right-sign-phoebe-step-115-vs-us","title":"\\(D^*\\), right-sign, Phoebe step-1+1.5 vs us","text":"<p>Note</p> <ul> <li>Before the slanted step-1.5 line, the numbers are from Phoebe's step-1.</li> <li>The <code>*</code> is considered immaterial<ul> <li>For Phoebe's ntuple, we remove the VELO only slow \\(\\pi\\)</li> <li>For us, this is already removed at DaVinci level</li> </ul> </li> </ul> <p>Info</p> <ul> <li>It is known that PID and isolation BDT values have changed between   DaVinci versions</li> <li>Also, the vertexing has changed. This is manifested in the   Offline \\(D^* \\mu\\) combo cuts.<ul> <li>The cuts are defined in here.</li> <li>Notably, we have vertex \\(\\chi^2/dof\\) cuts, like   <code>b0_endvtx_chi2/b0_endvtx_ndof &lt; 6.0</code>.</li> </ul> </li> </ul> Cut Phoebe us Phoebe \\(\\epsilon\\) us \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 208846 216987 - - - Select 2011 MD data 195535 216987 93.6 100.0 1.07 L0 189422 210166 96.9 96.9 1.00 Hlt1 185980 206226 98.2 98.1 1.00 Hlt2 183194 203010 98.5 98.4 1.00 \\(D^0\\) PID 178517 197740 97.4 97.4 1.00 Offline \\(D^0\\) cuts (no PID no mass window) 146240 160219 81.9 81.0 0.99 \\(\\mu\\) PID\\(\\mu\\) cut 146240 160219 100.0 100.0 1.00 Offline \\(\\mu\\) cuts (no PID) 138166 151326 94.5 94.4 1.00 Offline \\(D^* \\mu\\) combo cuts (no mass window) 137097 140528 99.2 92.9 0.94 \\(D^0\\) mass window 131579 134907 96.0 96.0 1.00 step-1.5 136645 134907 100.0 96.0 0.96 Fit variable range cuts 132754 131097 97.2 97.2 1.00 \\(\\mu\\) other PID cuts 126514 129735 95.3 99.0 1.04 \\(D^*\\) mass window 110017 112535 87.0 86.7 1.00 \\(B^0\\) mass window 110010 112528 100.0 100.0 1.00 \\(BDT_{iso} &lt; 0.15\\) 78903 72628 71.7 64.5 0.90 ISO final 74301 - - - -"},{"location":"data/cutflows/RDX_run1_phoebe_vs_us/#d-wrong-sign-mu-phoebe-step-115-vs-us","title":"\\(D^*\\), wrong-sign \\(\\mu\\), Phoebe step-1+1.5 vs us","text":"Cut Phoebe us Phoebe \\(\\epsilon\\) us \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 26705 31939 - - - Select 2011 MD data 24945 31939 93.4 100.0 1.07 L0 24120 30876 96.7 96.7 1.00 Hlt1 23451 30008 97.2 97.2 1.00 Hlt2 22872 29218 97.5 97.4 1.00 \\(D^0\\) PID 22256 28390 97.3 97.2 1.00 Offline \\(D^0\\) cuts (no PID no mass window) 11925 14643 53.6 51.6 0.96 \\(\\mu\\) PID\\(\\mu\\) cut 11925 14643 100.0 100.0 1.00 Offline \\(\\mu\\) cuts (no PID) 11665 14332 97.8 97.9 1.00 Offline \\(D^* \\mu\\) combo cuts (no mass window) 11529 11796 98.8 82.3 0.83 \\(D^0\\) mass window 9445 9662 81.9 81.9 1.00 step-1.5 12219 9662 100.0 81.9 0.82 Fit variable range cuts 10819 8356 88.5 86.5 0.98 \\(\\mu\\) other PID cuts 7796 7963 72.1 95.3 1.32 \\(D^*\\) mass window 5495 5594 70.5 70.2 1.00 \\(B^0\\) mass window 5486 5586 99.8 99.9 1.00 \\(BDT_{iso} &lt; 0.15\\) 1419 1248 25.9 22.3 0.86"},{"location":"data/cutflows/RDX_run1_phoebe_vs_us/#d-wrong-sign-slow-pi-phoebe-step-115-vs-us","title":"\\(D^*\\), wrong-sign slow \\(\\pi\\), Phoebe step-1+1.5 vs us","text":"Cut Phoebe us Phoebe \\(\\epsilon\\) us \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 34556 44187 - - - Select 2011 MD data 31850 44187 92.2 100.0 1.08 L0 30785 42712 96.7 96.7 1.00 Hlt1 29563 41079 96.0 96.2 1.00 Hlt2 28683 39843 97.0 97.0 1.00 \\(D^0\\) PID 27678 38413 96.5 96.4 1.00 Offline \\(D^0\\) cuts (no PID no mass window) 21291 30013 76.9 78.1 1.02 \\(\\mu\\) PID\\(\\mu\\) cut 21291 30013 100.0 100.0 1.00 Offline \\(\\mu\\) cuts (no PID) 20403 28649 95.8 95.5 1.00 Offline \\(D^* \\mu\\) combo cuts (no mass window) 20240 21165 99.2 73.9 0.74 \\(D^0\\) mass window 18440 19314 91.1 91.3 1.00 step-1.5 19409 19314 100.0 91.3 0.91 Fit variable range cuts 18710 18599 96.4 96.3 1.00 \\(\\mu\\) other PID cuts 17511 18335 93.6 98.6 1.05 \\(D^*\\) mass window 3194 3386 18.2 18.5 1.01 \\(B^0\\) mass window 3193 3385 100.0 100.0 1.00 \\(BDT_{iso} &lt; 0.15\\) 1548 1446 48.5 42.7 0.88"},{"location":"data/cutflows/RDst_refit_Dst_only_vs_full_refit/","title":"\\(R(D^*)\\) cutflow to study the effect of refit \\(D^*\\) only","text":""},{"location":"data/cutflows/RDst_refit_Dst_only_vs_full_refit/#component-wise-cutflow-table-with-run-2-cocktail-mc-refit-d-only","title":"Component-wise cutflow table with run 2 cocktail MC, refit \\(D^*\\) only","text":"cut name Signal Normaliz. D** Sig eff Nor eff D** eff Partial stripping 221 6163 1250 1 1.8 0.8 L0 144 3293 718 65.2 53.4 57.4 Hlt1 137 3094 674 95.1 94 93.9 Hlt2 137 3094 674 100 100 100 Full stripping 136 3035 660 99.3 98.1 97.9 \\(\\mu\\) PID 120 2654 604 88.2 87.4 91.5 \\(\\text{IsoBDT}_{B^0} &lt; 0.15\\) 98 2062 232 81.7 77.7 38.4 \\(B^0\\) cuts 97 1993 230 99 96.7 99.1 \\(K\\) cuts 82 1663 181 84.5 83.4 78.7 \\(\\pi\\) cuts 66 1373 142 80.5 82.6 78.5 \\(\\pi_{soft}\\) cuts 66 1373 142 100 100 100 \\(D^0\\) cuts 57 1261 127 86.4 91.8 89.4 \\(D^*\\) cuts 53 1179 108 93 93.5 85 Total ratio - - - 39 38.8 16.4"},{"location":"data/cutflows/RDst_refit_Dst_only_vs_full_refit/#component-wise-cutflow-table-with-run-2-cocktail-mc-full-refit","title":"Component-wise cutflow table with run 2 cocktail MC, full refit","text":"cut name Signal Normaliz. D** Sig eff Nor eff D** eff Partial stripping 221 6133 1224 1 1.8 0.8 L0 145 3277 706 65.6 53.4 57.7 Hlt1 138 3081 662 95.2 94 93.8 Hlt2 138 3081 662 100 100 100 Full stripping 137 3043 642 99.3 98.8 97 \\(\\mu\\) PID 121 2666 587 88.3 87.6 91.4 \\(\\text{IsoBDT}_{B^0} &lt; 0.15\\) 96 2146 297 79.3 80.5 50.6 \\(B^0\\) cuts 95 2075 294 99 96.7 99 \\(K\\) cuts 81 1716 235 85.3 82.7 79.9 \\(\\pi\\) cuts 64 1425 194 79 83 82.6 \\(\\pi_{soft}\\) cuts 64 1425 194 100 100 100 \\(D^0\\) cuts 56 1312 174 87.5 92.1 89.7 \\(D^*\\) cuts 49 1193 142 87.5 90.9 81.6 Total ratio - - - 35.8 39.2 22.1"},{"location":"data/cutflows/RDst_run1_vs_run2/detail/","title":"\\(R(D^*)\\) cutflow detail","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#comparison-between-physical-variables","title":"Comparison between physical variables","text":"<p>For now, we focus on \\(P_T\\) of all reconstructed particles, generated with cocktail MC.</p>"},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#y_pt","title":"<code>Y_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#dst_pt","title":"<code>Dst_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#d0_pt","title":"<code>D0_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#kplus_pt","title":"<code>Kplus_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#muplus_pt","title":"<code>muplus_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#piminus_pt","title":"<code>piminus_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#piminus0_pt","title":"<code>piminus0_PT</code>","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#comparison-between-run-1-and-run-2-individual","title":"Comparison between run 1 and run 2 individual","text":"cut name run 1 yield run 2 yield run 1 efficiency run 2 efficiency double ratio After DaVinci 5796 6731 - - - \\(D^*\\) L0Hadron TOS 1205 1628 0.2079\u00b10.0054 0.2419\u00b10.0053 1.163\u00b10.040 \\(\\Upsilon(4s)\\) L0Electron TIS 387 711 0.0668\u00b10.0034 0.1056\u00b10.0039 1.58\u00b10.10 \\(\\Upsilon(4s)\\) L0Hadron TIS 1245 1560 0.2148\u00b10.0055 0.2318\u00b10.0052 1.079\u00b10.037 \\(\\Upsilon(4s)\\) L0Muon TIS 565 789 0.0975\u00b10.0040 0.1172\u00b10.0040 1.202\u00b10.065 \\(\\Upsilon(4s)\\) L0Photon TIS 260 277 0.0449\u00b10.0029 0.0412\u00b10.0026 0.917\u00b10.082 \\(\\Upsilon(4s)\\) L0Global TIS 1931 2714 0.3332\u00b10.0063 0.4032\u00b10.0060 1.210\u00b10.029 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS 113 175 0.0938\u00b10.0091 0.1075\u00b10.0082 1.15\u00b10.14 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS 330 355 0.274\u00b10.013 0.218\u00b10.011 0.796\u00b10.055 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS 135 147 0.1120\u00b10.0098 0.0903\u00b10.0076 0.806\u00b10.098 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS 68 72 0.0564\u00b10.0074 0.0442\u00b10.0057 0.78\u00b10.14 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS 489 578 0.406\u00b10.015 0.355\u00b10.012 0.875\u00b10.043 Total ratio - - 0.0844\u00b10.0038 0.0859\u00b10.0035 1.018\u00b10.062 <p>Note</p> <p>Only lines present in both runs are considered here.</p>"},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#run-1-detail","title":"Run 1 detail","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#marginal-impact","title":"Marginal impact","text":"cut name yield efficiency After DaVinci 5796 - \\(D^*\\) L0Hadron TOS 1205 0.208+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS 113 0.094+/-0.009 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 35 0.029+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 65 0.054+/-0.007 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 16 0.013+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 17 0.014+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 10 0.0083+/-0.0035 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Global TIS 113 0.094+/-0.009 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 35 0.029+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 35 0.029+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 22 0.018+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 4 0.0033+/-0.0026 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 6 0.0050+/-0.0029 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 4 0.0033+/-0.0026 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS+\\(\\Upsilon(4s)\\) L0Global TIS 35 0.029+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS 330 0.274+/-0.013 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 65 0.054+/-0.007 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 22 0.018+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 40 0.033+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 36 0.030+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 12 0.010+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Global TIS 330 0.274+/-0.013 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS+\\(\\Upsilon(4s)\\) L0Global TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS 135 0.112+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 16 0.013+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 4 0.0033+/-0.0026 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 40 0.033+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 7 0.0058+/-0.0031 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 3 0.0025+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Global TIS 135 0.112+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS+\\(\\Upsilon(4s)\\) L0Global TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS 68 0.056+/-0.007 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 17 0.014+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 6 0.0050+/-0.0029 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 36 0.030+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 7 0.0058+/-0.0031 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 19 0.016+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Global TIS 68 0.056+/-0.007 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 19 0.016+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 10 0.0083+/-0.0035 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 4 0.0033+/-0.0026 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 12 0.010+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 3 0.0025+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 19 0.016+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS+\\(\\Upsilon(4s)\\) L0Global TIS 19 0.016+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS 489 0.406+/-0.015"},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#individual-impact","title":"Individual impact","text":"cut name yield efficiency After DaVinci 5796 - \\(D^*\\) L0Hadron TOS 1205 0.208+/-0.005 \\(\\Upsilon(4s)\\) L0Electron TIS 387 0.0668+/-0.0034 \\(\\Upsilon(4s)\\) L0ElectronHi TIS 94 0.0162+/-0.0018 \\(\\Upsilon(4s)\\) L0Hadron TIS 1245 0.215+/-0.006 \\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.00000+/-0.00032 \\(\\Upsilon(4s)\\) L0Muon TIS 565 0.097+/-0.004 \\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.00000+/-0.00032 \\(\\Upsilon(4s)\\) L0Photon TIS 260 0.0449+/-0.0029 \\(\\Upsilon(4s)\\) L0PhotonHi TIS 63 0.0109+/-0.0015 \\(\\Upsilon(4s)\\) L0Global TIS 1931 0.333+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS 113 0.094+/-0.009 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0ElectronHi TIS 35 0.029+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS 330 0.274+/-0.013 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0HighSumETJet TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS 135 0.112+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0NoPVFlag TIS 0 0.0000+/-0.0015 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS 68 0.056+/-0.007 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0PhotonHi TIS 19 0.016+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS 489 0.406+/-0.015"},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#run-2-detail","title":"Run 2 detail","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#marginal-impact_1","title":"Marginal impact","text":"cut name yield efficiency After DaVinci 6731 - \\(D^*\\) L0Hadron TOS 1628 0.242+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 36 0.022+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 6 0.0037+/-0.0022 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 35 0.021+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 9 0.0055+/-0.0025 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS+\\(\\Upsilon(4s)\\) L0Global TIS 36 0.022+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS 175 0.107+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 6 0.0037+/-0.0022 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 85 0.052+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 16 0.0098+/-0.0031 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 15 0.0092+/-0.0030 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS+\\(\\Upsilon(4s)\\) L0Global TIS 175 0.107+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS 355 0.218+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 85 0.052+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 31 0.019+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 9 0.0055+/-0.0025 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 33 0.020+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS+\\(\\Upsilon(4s)\\) L0Global TIS 355 0.218+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS+\\(\\Upsilon(4s)\\) L0Global TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS+\\(\\Upsilon(4s)\\) L0Global TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS 147 0.090+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 35 0.021+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 16 0.0098+/-0.0031 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 31 0.019+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 37 0.023+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS+\\(\\Upsilon(4s)\\) L0Global TIS 147 0.090+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 37 0.023+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 9 0.0055+/-0.0025 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 9 0.0055+/-0.0025 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 0 0.0000+/-0.0011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 37 0.023+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0Photon TIS 3 0.0018+/-0.0018 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS+\\(\\Upsilon(4s)\\) L0Global TIS 37 0.023+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS 72 0.044+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Electron TIS 15 0.0092+/-0.0030 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Hadron TIS 33 0.020+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0JetEl TIS 1 0.0006+/-0.0014 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0JetPh TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Muon TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 3 0.0018+/-0.0018 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS+\\(\\Upsilon(4s)\\) L0Global TIS 72 0.044+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS 578 0.355+/-0.012 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 118 0.204+/-0.018 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 23 0.040+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 15 0.026+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 3 0.005+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 185 0.320+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 118 0.204+/-0.018 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 118 0.204+/-0.018 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 32 0.055+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 27 0.047+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 4 0.007+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 185 0.320+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 118 0.204+/-0.018 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 23 0.040+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 15 0.026+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 3 0.005+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 39 0.067+/-0.012 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 23 0.040+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 32 0.055+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 23 0.040+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 28 0.048+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 4 0.007+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 39 0.067+/-0.012 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 29 0.050+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 15 0.026+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 27 0.047+/-0.010 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 15 0.026+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 28 0.048+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 4 0.007+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 29 0.050+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 5 0.009+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 3 0.005+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 4 0.007+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 3 0.005+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 4 0.007+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 4 0.007+/-0.005 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 5 0.009+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 576 0.997+/-0.005"},{"location":"data/cutflows/RDst_run1_vs_run2/detail/#individual-impact_1","title":"Individual impact","text":"cut name yield efficiency After DaVinci 6731 - \\(D^*\\) L0Hadron TOS 1628 0.242+/-0.005 \\(\\Upsilon(4s)\\) L0DiMuon TIS 180 0.0267+/-0.0021 \\(\\Upsilon(4s)\\) L0Electron TIS 711 0.106+/-0.004 \\(\\Upsilon(4s)\\) L0Hadron TIS 1560 0.232+/-0.005 \\(\\Upsilon(4s)\\) L0JetEl TIS 34 0.0051+/-0.0010 \\(\\Upsilon(4s)\\) L0JetPh TIS 6 0.0009+/-0.0005 \\(\\Upsilon(4s)\\) L0Muon TIS 789 0.117+/-0.004 \\(\\Upsilon(4s)\\) L0MuonEW TIS 203 0.0302+/-0.0022 \\(\\Upsilon(4s)\\) L0Photon TIS 277 0.0412+/-0.0026 \\(\\Upsilon(4s)\\) L0Global TIS 2714 0.403+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0DiMuon TIS 36 0.022+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Electron TIS 175 0.107+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Hadron TIS 355 0.218+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetEl TIS 8 0.0049+/-0.0024 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0JetPh TIS 2 0.0012+/-0.0016 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Muon TIS 147 0.090+/-0.008 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0MuonEW TIS 37 0.023+/-0.004 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Photon TIS 72 0.044+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS 578 0.355+/-0.012 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVA TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMVALoose TIS 185 0.320+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TwoTrackMVALoose TIS 167 0.289+/-0.020 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuon TIS 39 0.067+/-0.012 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1TrackMuonMVA TIS 29 0.050+/-0.011 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1SingleMuonHighPT TIS 5 0.009+/-0.006 \\(D^*\\) L0Hadron TOS+\\(\\Upsilon(4s)\\) L0Global TIS+\\(\\Upsilon(4s)\\) Hlt1Phys TIS 576 0.997+/-0.005"},{"location":"data/cutflows/RDst_run1_vs_run2/overview/","title":"\\(R(D^*)\\) cutflow overview","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/overview/#cutflow-table-with-cocktail-mc-bare","title":"Cutflow table with cocktail MC, bare","text":"Cut Run 1 Run 2 Run 1 \\(\\epsilon\\) Run 2 \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 118213 126958 - - - Trig. + Strip. 4313 13005 3.6 10.2 2.81 Offline \\(D^0\\) cuts 3729 5808 86.5 44.7 0.52 Offline \\(\\mu\\) cuts 3307 4606 88.7 79.3 0.89 Offline \\(D^* \\mu\\) combo cuts 1975 2729 59.7 59.2 0.99 \\(BDT_{iso} &lt; 0.15\\) 1513 1946 76.6 71.3 0.93 Total eff. - - 1.3 1.5 1.20 Yield ratio x 0.99 1513 1946 - - 1.27 <p>Note</p> <ul> <li>We removed all kinematic cuts and loosened some vertex quality cuts when generating bare ntuples.</li> <li>This table uses full MagDown run 1 and 2 cocktail MC.</li> <li>Additional step 2 cuts are applied here.</li> <li>ALL numbers are number of events.</li> <li>We applied the same cuts for run 1 and 2.</li> </ul> <p>Info</p> <ul> <li>Run 1 stripping conditions can be found at <code>Strippingb2D0MuXB2DMuNuForTauMuLine</code></li> <li>Run 2 stripping conditions can be found at <code>Strippingb2D0MuXB2DMuForTauMuLine</code></li> </ul>"},{"location":"data/cutflows/RDst_run1_vs_run2/overview/#cutflow-table-with-cocktail-mc-bare-with-truth-matched-signal-normalization-and-d","title":"Cutflow table with cocktail MC, bare, with truth-matched signal, normalization, and \\(D^{**}\\)","text":""},{"location":"data/cutflows/RDst_run1_vs_run2/overview/#signal","title":"Signal","text":"Cut Run 1 Run 2 Run 1 \\(\\epsilon\\) Run 2 \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 118213 126958 - - - Signal truth-matching 4388 4638 3.7 3.7 0.98 Trig. + Strip. 151 397 3.4 8.6 2.49 Offline \\(D^0\\) cuts 120 207 79.5 52.1 0.66 Offline \\(\\mu\\) cuts 110 162 91.7 78.3 0.85 Offline \\(D^* \\mu\\) combo cuts 70 115 63.6 71.0 1.12 \\(BDT_{iso} &lt; 0.15\\) 61 91 87.1 79.1 0.91 Total eff. - - 0.05 0.07 1.39 Yield ratio x 0.99 61 91 - - 1.48"},{"location":"data/cutflows/RDst_run1_vs_run2/overview/#normalization","title":"Normalization","text":"Cut Run 1 Run 2 Run 1 \\(\\epsilon\\) Run 2 \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 118213 126958 - - - Normalization truth-matching 76567 82950 64.8 65.3 1.01 Trig. + Strip. 2898 8702 3.8 10.5 2.77 Offline \\(D^0\\) cuts 2480 3868 85.6 44.4 0.52 Offline \\(\\mu\\) cuts 2182 3062 88.0 79.2 0.90 Offline \\(D^* \\mu\\) combo cuts 1613 2186 73.9 71.4 0.97 \\(BDT_{iso} &lt; 0.15\\) 1362 1714 84.4 78.4 0.93 Total eff. - - 1.2 1.4 1.17 Yield ratio x 0.99 1362 1714 - - 1.25"},{"location":"data/cutflows/RDst_run1_vs_run2/overview/#d","title":"\\(D^{**}\\)","text":"Cut Run 1 Run 2 Run 1 \\(\\epsilon\\) Run 2 \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 118213 126958 - - - \\(D^{**}\\) truth-matching 35827 37755 30.3 29.7 0.98 Trig. + Strip. 1225 3818 3.4 10.1 2.96 Offline \\(D^0\\) cuts 1097 1699 89.6 44.5 0.50 Offline \\(\\mu\\) cuts 986 1357 89.9 79.9 0.89 Offline \\(D^* \\mu\\) combo cuts 289 424 29.3 31.2 1.07 \\(BDT_{iso} &lt; 0.15\\) 89 138 30.8 32.5 1.06 Total eff. - - 0.08 0.11 1.44 Yield ratio x 0.99 89 138 - - 1.53"},{"location":"data/cutflows/RDst_run1_vs_run2/overview/#cutflow-table-with-real-data","title":"Cutflow table with real data","text":"Cut Run 1 Run 2 Run 1 \\(\\epsilon\\) Run 2 \\(\\epsilon\\) \\(\\epsilon\\) ratio Total events 216987 5349722 - - - Trig. + Strip. 202990 3043397 93.5 56.9 0.61 Offline \\(D^0\\) cuts 153311 1077159 75.5 35.4 0.47 Offline \\(\\mu\\) cuts 143242 656044 93.4 60.9 0.65 Offline \\(D^* \\mu\\) combo cuts 115321 512969 80.5 78.2 0.97 \\(BDT_{iso} &lt; 0.15\\) 74535 317049 64.6 61.8 0.96 Total eff. - - 34.3 5.9 0.17 Yield ratio x 0.35 74535 317049 - - 1.51 <p>Note</p> <ul> <li>This table uses full MagDown 2011 and 2016 real data.</li> <li>ALL numbers are number of events.</li> <li>The Trig. + Strip. entries should not be trusted as we don't include   numbers extracted from DaVinci log.</li> </ul>"},{"location":"ntupling/dev/","title":"Developing this project","text":""},{"location":"ntupling/dev/#local-development-of-in-house-python-packages","title":"Local development of in-house Python packages","text":"<p>We have made several in-house Python packages, for example:</p> <ul> <li><code>pyBabyMaker</code>: For producing step-2 ntuples.</li> <li><code>pyTuplingUtils</code>: For simple plotting and cutflow study.</li> </ul> <p>These two packages are included as submodules in this project, so that:</p> <ol> <li>We can pinpoint a specific commit of these packages.</li> <li>The development of these packages are often related to this project.     Including them as submodules makes development easier.</li> </ol>"},{"location":"ntupling/dev/#initializing-pybabymaker-and-pytuplingutils-submodules","title":"Initializing <code>pyBabyMaker</code> and <code>pyTuplingUtils</code> submodules","text":"<p>After initial clone of this project, these submodules can be initialized with: <pre><code>git submodule update --init\n</code></pre></p> <p>Info</p> <p>The <code>git submodule</code> only record the pointer to a commit of each submodule, no actual content is recorded in the mother project.</p> <p>For example, in <code>lhcb-ntuples-gen</code>, we only record that <code>pyBabyMaker</code> should be at commit <code>a7bb2981</code>. When we do <code>submodule update --init</code>, <code>git</code> will clone the module and checkout said commit.</p>"},{"location":"ntupling/dev/#local-development-procedure","title":"Local development procedure","text":"<ol> <li> <p><code>cd</code> into the submodule that you want to develop, here we use <code>pyBabyMaker</code>     as an example:</p> <pre><code>cd lib/python/pyBabyMaker\n</code></pre> </li> <li> <p>Checkout the <code>master</code> branch with <code>git checkout master</code><sup>1</sup></p> </li> <li> <p>Do development, and when you want to test something, go back to     <code>lhcb-ntuples-gen</code> project root, and:</p> <pre><code>make install-dep\n</code></pre> <p>This will install the latest <code>pyBabyMaker</code>, with your local changes.</p> </li> <li> <p>Test everything out.</p> </li> <li>After everything works out:<ol> <li>Commit changes inside the <code>pyBabyMaker</code> directory.</li> <li>Inside <code>pyBabyMaker</code> directory, push changes to <code>pyBabyMaker</code> remote.</li> <li>Go back to project root, Update pointer to the <code>pyBabyMaker</code> commit in     the mother project.</li> </ol> </li> </ol>"},{"location":"ntupling/dev/#makefile","title":"<code>Makefile</code>","text":"<p>In the <code>Makefile</code>, we define targets to generate output files and results, such as:</p> <ul> <li>Step 2 ntuple</li> <li>Cutflow study tables</li> </ul> <p>However, <code>make</code> rules can be arcane, so if you want to figure out how <code>make</code> would produce a certain target: <pre><code>make --dry-run --always-make &lt;target_name&gt;\n</code></pre></p>"},{"location":"ntupling/dev/#workflows","title":"Workflows","text":"<p>Each analysis can have many workflows. For example RDX run 2 has <code>rdx.py</code> and <code>rdx_cutflows.py</code> in the <code>workflows</code> folder.</p> <p>Example</p> <p>In <code>rdx.py</code>, we have:</p> <pre><code>JOBS = {\n    # Run 2\n    'rdx-ntuple-run2-data-oldcut': lambda name: workflow_data(\n        name,\n        '../ntuples/0.9.4-trigger_emulation/Dst_D0-std',\n        '../postprocess/rdx-run2/rdx-run2_oldcut.yml',\n        executor=executor\n    ),\n    'rdx-ntuple-run2-mc-demo': lambda name: workflow_mc(\n        name,\n        '../run2-rdx/samples/Dst_D0--21_07_30--mc--Bd2DstMuNu--2016--md--py8-sim09j-dv45-subset.root',\n        '../postprocess/rdx-run2/rdx-run2_oldcut.yml',\n        output_ntp_name_gen=parse_step2_name,\n        executor=executor\n    ),\n    # Run 1\n    'rdx-ntuple-run1-data': lambda name: workflow_data(\n        name,\n        '../ntuples/0.9.2-2011_production/Dst_D0-std',\n        '../postprocess/rdx-run1/rdx-run1.yml',\n        use_ubdt=False,\n        executor=executor\n    ),\n    'ref-rdx-ntuple-run1-data': lambda name: workflow_data(\n        name,\n        '../ntuples/ref-rdx-run1/Dst-mix',\n        '../postprocess/ref-rdx-run1/rdst-2011-mix.yml',\n        use_ubdt=False,\n        output_ntp_name_gen=parse_step2_name,\n        executor=executor\n    )\n}\n</code></pre> <p>The actual workflows are defined earlier in the same file.</p>"},{"location":"ntupling/dev/#external-programs-used-by-workflows","title":"External programs used by workflows","text":""},{"location":"ntupling/dev/#gregs-mu-ubdt-adder","title":"Greg's \\(\\mu\\) UBDT adder","text":"<p>The name of the program is <code>addUBDTBranch</code>. It's source code, along with its <code>Makefile</code>, is available here.</p> <p>Let's back track on how it is made available in our <code>lhcb-ntuples-gen</code> environment:</p> <ol> <li> <p>In this project's <code>flake.nix</code>, we have:</p> <pre><code># snippet only\n\ninputs = {\n  nixpkgs = ...;  # software foundation, including compiles, etc.\n  MuonBDTPid.url = \"github:umd-lhcb/MuonBDTPid\";\n};\n\noutputs = { nixpkgs, MuonBDTPid, ... }:\n    let\n      pkgs = import nixpkgs {\n        # We make packages defined in MuonBDTPid's overlay available\n        overlays = [ MuonBDTPid.overlay ];\n      };\n    in\n    {\n      devShell = pkgs.mkShell {\n        buildInputs = [\n          pkgs.addUBDTBranchWrapped  # Install UBDT adder\n        ];\n      };\n    }\n</code></pre> </li> <li> <p>What we learned is that the UBDT adder is defined in <code>MuonBDTPid</code>'s    overlay.    Let's inspect its content:</p> <pre><code>final: prev:\n\n{\n  root5-ubdt = prev.callPackage ./root5 {\n    inherit (prev.darwin.apple_sdk.frameworks) Cocoa OpenGL;\n    stdenv = if prev.stdenv.cc.isClang then prev.llvmPackages_5.stdenv else prev.gcc8Stdenv;\n  };\n\n  addUBDTBranch = prev.callPackage ./addUBDTBranch {\n    root = final.root5-ubdt;\n    stdenv = if prev.stdenv.cc.isClang then prev.llvmPackages_5.stdenv else prev.gcc8Stdenv;\n  };\n\n  addUBDTBranchWrapped = prev.writeScriptBin \"addUBDTBranch\" ''\n    unset LD_LIBRARY_PATH\n    unset DYLD_LIBRARY_PATH\n    exec ${final.addUBDTBranch}/bin/addUBDTBranchRun2 $@\n  '';\n}\n</code></pre> <ol> <li> <p>Now we see <code>addUBDTBranchWrapped</code> is just a shell script that wraps    around the executables in <code>addUBDTBranch</code>.</p> <p>The reason is that when you make ROOT available in a <code>devShell</code>, on Linux it will set <code>LD_LIBRARY_PATH</code> environment variable, which will mess up with the <code>addUBDTBranch</code> executables. We need to unset it first.</p> </li> <li> <p>Also, <code>addUBDTBranch</code> has an input called <code>root</code>, which is explicitly    set to a patched version of ROOT 5 that contains UBDT.</p> </li> </ol> </li> <li> <p>Finally, the actual derivation (directive on how to compile it with <code>nix</code>) of    <code>addUBDTBranch</code> is defined here.    It is actually quite simple but we won't go over it here.</p> </li> </ol> <ol> <li> <p>This operation is only valid for newer <code>git</code>. Make sure you use an up-to-date <code>git</code>!\u00a0\u21a9</p> </li> </ol>"},{"location":"ntupling/grid_job/","title":"Submitting DaVinci jobs to GRID","text":""},{"location":"ntupling/grid_job/#rationale","title":"Rationale","text":"<ul> <li> <p>The main limitation for local <code>DaVinci</code> docker is: Raw data files (<code>.dst</code>)   need to be downloaded locally. Given that the size of <code>.dst</code> files is on the   order of TBs, this method is only used for developing <code>DaVinci</code> scripts and   first-order validation</p> </li> <li> <p>On <code>lxplus</code>, several official <code>DaVinci</code> versions are provided. However, there   are some drawbacks:</p> <ol> <li><code>.dst</code> files still need to be downloaded to some <code>lxplus</code> user directory</li> <li>While <code>DaVinci</code> is running, the connection to <code>lxplus</code> must be kept alive</li> </ol> </li> </ul> <p>LHCb collaboration provides a solution: Submitting and running <code>DaVinci</code> jobs on a GRID. The advantages are:</p> <ol> <li> <p>GRID know how to access <code>.dst</code> files directly, thus there's no need to manually    download them. Instead, users need to specify the links (<code>LFN</code>s) to desired    <code>.dst</code> files</p> </li> <li> <p>While the GRID <code>DaVinci</code> jobs are running, there's no need to keep a    connection to <code>lxplus</code>.</p> </li> </ol> <p>The rest of this doc is divided in two parts:</p> <ol> <li>GRID job preparation and submission on <code>lxplus</code></li> <li>Offline slimming and annexing of the produced ntuples on a local machine,    most possibly on <code>glacier</code>.</li> </ol>"},{"location":"ntupling/grid_job/#grid-job-preparation-and-submission-on-lxplus","title":"GRID job preparation and submission on <code>lxplus</code>","text":""},{"location":"ntupling/grid_job/#setup-lhcb-grid-certificate","title":"Setup LHCb GRID certificate","text":"<p>Following this twiki to:</p> <ol> <li>Apply for a GRID certificate</li> <li>Setup the certificate on <code>lxplus</code></li> </ol> <p>Note</p> <p>The twiki claimed that a new user must physically go to CERN's user office to be able to apply for a new cert via ca.cern.ch. But I didn't have to do that.</p>"},{"location":"ntupling/grid_job/#compile-a-local-davinci-on-lxplus","title":"Compile a local <code>DaVinci</code> on <code>lxplus</code>","text":"<p>We are using some non-official <code>TupleTool</code>, so we need to compile <code>DaVinci</code> on <code>lxplus</code>.</p> <p>First, we need to figure out the appropriate platform for our version of DaVinci: v45r6.</p> <pre><code>$ lb-run -L DaVinci/v45r6\nWARNING:lb-run:Using default siteroot of /cvmfs/lhcb.cern.ch/lib\nx86_64+avx2+fma-centos7-gcc9-opt\nx86_64-centos7-gcc9-opt\nx86_64-centos7-gcc9-dbg\nx86_64-centos7-gcc9-do0\n</code></pre> <p>For v45r6, we pick the following platform: <code>x86_64-centos7-gcc9-opt</code>.</p> <p>Note that <code>DaVinci v45r6</code> only provides CentOS7-based platforms. However, CentOS7 reached End-of-Life in June 2024 (see OTG0145248), and the CentOS7-based <code>lxplus7</code> nodes are no longer available. Consequently, our DaVinci jobs cannot be natively run on the available EL9-based <code>lxplus</code> nodes, so we need to use containers.</p> <p>To setup a CentOS7 container, run the following command (adapted from the Ganga FAQ):</p> <pre><code>apptainer exec --bind $PWD --env LBENV_SOURCED=  --bind /cvmfs:/cvmfs:ro /cvmfs/lhcb.cern.ch/containers/os-base/centos7-devel/prod/amd64/ bash --rcfile /cvmfs/lhcb.cern.ch/lib/LbEnv\nlb-set-platform x86_64-centos7-gcc9-opt\nexport LCG_hostos=x86_64-centos7\n</code></pre> <p>And then proceed to compile <code>DaVinci</code> from inside the container. First, we should set the chosen platform as the default for <code>lxplus</code>. Add to your login shell config:</p> <pre><code>export CMTCONFIG=x86_64-centos7-gcc9-opt\nexport BINARY_TAG=$CMTCONFIG\n</code></pre> <p>Now, run this script anywhere on <code>lxplus</code> to build a <code>DaVinci</code> with our customizations. The <code>DaVinci</code> will be available at <code>$HOME/build/DaVinciDev_v45r6</code>. Once <code>DaVinci</code> is compiled, you can exit the container. </p> <p>Note</p> <p>Our Ganga script also requires specific settings for DaVinci to be run in a container on the grid (see the Ganga FAQ). If at some point we update our DaVinci version and the use of a container is no longer necessary, those settings should be removed.</p>"},{"location":"ntupling/grid_job/#configure-ganga","title":"Configure <code>ganga</code>","text":"<p><code>ganga</code> is a command-line interface for LHCb GRID. We need to configure <code>ganga</code> job output directory. On <code>lxplus</code>:</p> <ol> <li>Run <code>ganga</code> once. This should create a <code>.gangarc</code> in <code>$HOME</code>.</li> <li> <p>Locate <code>gangadir</code> option, point it to your larger AFS storage, for example:</p> <pre><code>gangadir = /afs/cern.ch/user/s/suny/work/gangadir\n</code></pre> </li> <li> <p>Go into your <code>gangadir</code>, create a <code>workspace</code> symblink pointing to somewhere in your EOS.    For example:</p> <pre><code>workspace -&gt; /eos/home-s/suny/gangadir-workspace\n</code></pre> </li> <li> <p>Copy <code>ganga/ganga.sample.py</code>    to <code>$HOME/.ganga.py</code> on <code>lxplus</code>.</p> </li> </ol>"},{"location":"ntupling/grid_job/#submitting-a-job-with-ganga","title":"Submitting a job with <code>ganga</code>","text":"<p>Submitting jobs is very simple, you will simply copy a previous script that has similar features (eg. data, MC tracker-only), modify it appropriately, and run it. The detailed steps are</p> <ol> <li>Log on to <code>lxplus</code> and get a proxy with <code>lhcb-proxy-init</code></li> <li>Clone <code>lhcb-ntuples-gen</code> and go to the appropriate <code>jobs</code> folder, for instance <code>lhcb-ntuples-gen/run2-rdx/jobs/</code></li> <li> <p>Copy a script with similar characteristics and rename it with the current date and some description, for instance</p> <pre><code>cp 22_02_03-tracker_only_Bs.sh 22_02_03-tracker_only_ddx_22to25.sh\n</code></pre> </li> <li> <p>Modify the new script appropriately, for instance adding the MC IDs that you want to run. The script automatically sends the MagDown and MagUp for each sample.</p> </li> <li> <p>Run the script, eg.</p> <pre><code>./22_02_03-tracker_only_ddx_22to25.sh\n</code></pre> </li> <li> <p>If there are no errors in the submission, commit the script to <code>git</code></p> <p>Note</p> <p>An error such as</p> <pre><code>GangaDiracError: All the files are only available on\narchive SEs. It is likely the data set has been archived. Contact data\nmanagement to request that it be staged (consider --debug option for\nmore information)\n</code></pre> <p>simply means that the files that you are trying to run on do not exist, perhaps because you have a typo.</p> </li> <li> <p>Monitor the status of your jobs by entering interactive <code>ganga</code> (simply type <code>ganga</code> in <code>lxplus</code> after getting a proxy) and typing <code>jobs</code></p> </li> </ol> <p>Usage of <code>ganga_jobs.py</code></p> <p>See this appendix.</p> <p>Manage <code>ganga</code> job output</p> <p>You need to keep <code>ganga</code> running in a <code>lxplus</code> session to get up-to-date info about your jobs and download output of completed (sub)jobs.</p>"},{"location":"ntupling/grid_job/#update-subjob-status-and-force-status-to-be-failed-when-necessary","title":"Update subjob status and force status to be \"failed\" when necessary","text":"<p>Sometimes ganga would stuck at updating job status. To reset the status for \"completing\" and \"failed\" subjobs, do:</p> <pre><code>jobs[63].backend.reset(True)\n</code></pre> <p>If that still doesn't bring a job to a stable state (i.e. \"finished\" or \"failed\"), force the job to fail:</p> <pre><code>jobs[63].force_status(\"failed\", force=True)\n</code></pre>"},{"location":"ntupling/grid_job/#handling-failing-subjobs","title":"Handling failing subjobs","text":"<p>The GRID job are split into subjobs, enabling parallel execution. Some subjobs may fail. Considering the following <code>jobs</code> output in <code>ganga</code> shell:</p> <pre><code>[01:30:22]\nGanga In [2]: jobs\nGanga Out [2]:\nRegistry Slice: jobs (30 objects)\n--------------\n    fqid |    status |      name | subjobs |    application |        backend |                             backend.actualCE |                       comment |  subjob status\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n      62 | completed |Dst_D0--20 |      26 |      GaudiExec |          Dirac |                                         None |                               |       0/0/0/26\n      63 |    failed |Dst_D0--20 |    1007 |      GaudiExec |          Dirac |                                         None |                               |     0/1/0/1006\n      66 |    failed |Dst_D0--20 |       1 |      GaudiExec |          Dirac |                                         None |                               |        0/1/0/0\n      73 | completed |Dst_D0--20 |     772 |      GaudiExec |          Dirac |                                         None |                               |      0/0/0/772\n</code></pre> <p>Jobs 63 and 66 are marked as <code>failed</code> because all of their subjobs are either completed or failed.</p> <p>To resubmit failed subjobs for, say, <code>jobs[63]</code>:</p> <pre><code>jobs[63].resubmit()\n</code></pre> <p>However, above won't work unless all sub-jobs are either completed or failed. To resubmit the failed sub-jobs ASAP:</p> <pre><code>jobs[63].subjobs.select(status=\"failed\").resubmit()\n</code></pre> <p>If you forced a \"failed\" status, some sub-jobs may be in \"killed\" state. A simple <code>job[63].resubmit()</code> won't resubmit these killed jobs. To resubmit them:</p> <pre><code>jobs[63].subjobs.select(status=\"killed\").resubmit()\n</code></pre> <p>There's a helper function to print failed subjobs:</p> <pre><code>show_subjobs(63)\nshow_subjobs(63, status='running')  # show subjobs of 'running' status\n</code></pre> <p>If for some jobs keep failing, consider the backend bad and ban it in:</p> <ul> <li> <p><code>ban_site_for_job</code> helper function with interactive <code>ganga</code>:</p> <pre><code>ban_site_for_job(63, 'LCG.site.a')\nban_site_for_job(63, ['LCG.site.a', 'LCG.site.b'])  # you can ban multiple sites at once\n</code></pre> <p>Then <code>resubmit</code> the job using methods described above</p> </li> <li> <p><code>ganga/ganga_jobs.py</code> in this repo: In <code>BannedSites</code></p> </li> <li><code>$HOME/.ganga.py</code> on <code>lxplus</code>: In <code>remake_uncompleted_job</code> function parameter</li> </ul> <p>Sometimes it's needed to remake new jobs (say we want to change number of files per subjob). To do so:</p> <pre><code>remake_uncompleted_job(63)\n</code></pre> <p>Info</p> <p>The <code>remake_uncompleted_job</code> creates a new job for each failed subjob, and add the subjob index to the <code>comment</code> property of the new job.</p> <p>After the remade job has finished successfuly, merge all of its output <code>.root</code> files and place it in the correct directory of the failing job.</p> <p>Ntuples can be merged with:</p> <pre><code>hadd -fk &lt;name&gt;.root */output/*.root\n</code></pre>"},{"location":"ntupling/grid_job/#slimming-and-annexing-of-grid-ntuples","title":"Slimming and annexing of GRID ntuples","text":""},{"location":"ntupling/grid_job/#offline-slimming","title":"Offline slimming","text":"<p>Before you proceed</p> <p>Clone <code>lhcb-ntuples-gen</code> on <code>glacier</code> and setup <code>git-annex</code> normally.</p> <p>Also don't forget to do <code>make install-dep</code> in the nix shell!</p> <p>We prefer to not merge <code>.root</code> files at all. Still, we need to give output files sane names and slim them to remove unneeded branches.</p> <p>Yipeng has prepared a <code>ganga</code> function that generates a <code>bash</code> script to aid the process. To use it:</p> <p>Before you proceed</p> <p>The whole procedure takes a long time. It's recommeded to do it inside a <code>tmux</code> session.</p> <ol> <li> <p>Use <code>scp</code> to copy finished jobs to a folder <code>&lt;glacierntuples&gt;</code> under in your <code>$HOME</code> on <code>glacier</code></p> <p>Example</p> <p>Say your <code>gangadir</code> is at <code>~/eos/gangadir-workspace/suny/LocalXML</code>, and you want to proceed job index <code>63</code>, then copy the folder <code>63</code> to <code>glacier</code>.</p> </li> <li> <p>In <code>ganga</code> shell, type in <code>hadd_completed_job_output(63)</code>, where <code>63</code> is some job index.</p> <p>Info</p> <p>This will generated a <code>batch_hadd.sh</code> in <code>$HOME</code>. The generated script contains commands to merge output <code>.root</code> files for all completed jobs with a index that is greater or equal to the specified index.</p> <p>A script named <code>batch_skim.sh</code> will be generated in <code>$HOME</code> on <code>lxplus</code>.</p> <p>A sample <code>batch_skim.sh</code> is displayed here.</p> </li> <li> <p>Copy <code>batch_skim.sh</code> to your <code>lhcb-ntuples-gen</code> root folder on <code>glacier</code>,     then give it execution permission with <code>chmod +x batch_skim.sh</code>.</p> </li> <li> <p>Set the input folder and postprocessing rules as needed in <code>batch_skim.sh</code>:</p> <pre><code>INPUT_DIR=&lt;glacierntuples&gt;\nSKIM_CONFIG=./postprocess/skims/rdx_mc.yml  # NOTE: Make sure you pick the right one!!!\n</code></pre> <p>Info</p> <p>If you don't want to remove any branches, then replace:</p> <pre><code>./ganga/ganga_skim_job_output.py ${OUTPUT_DIR}/$2 ${INPUT_DIR}/$1 ${SKIM_CONFIG}\n</code></pre> <p>with</p> <pre><code>./ganga/ganga_skim_job_output.py ${OUTPUT_DIR}/$2 ${INPUT_DIR}/$1 ${SKIM_CONFIG} --copy\n</code></pre> <p>Noting the use of <code>--copy</code> flag.</p> </li> <li> <p>Go into a nix shell in your <code>lhcb-ntuples-gen</code> with <code>nix develop</code>, then in     the project root, run:</p> <pre><code>./batch_skim.sh ntuples/&lt;folder_to_ntuple_output&gt;\n</code></pre> <p>For example, <code>&lt;folder_to_ntuple_output&gt;</code> can be:</p> <pre><code>0.9.6-2016-production/Dst_D0-mc-tracker-only\n</code></pre> </li> </ol>"},{"location":"ntupling/grid_job/#annex-ntuples","title":"Annex ntuples","text":"<p>Info</p> <p>We decide to use a pull-request-based workflow for ntuple annexation to minimize errors.</p> <ol> <li> <p>Create a new branch on your <code>lhcb-ntuples-gen</code> project on <code>glacier</code>, then checkout that branch:</p> <pre><code>git branch &lt;branch_name&gt;\ngit checkout &lt;branch_name&gt;\n</code></pre> <p>Example</p> <pre><code>git branch yipeng-ddx_part1\ngit checkout yipeng-ddx_part1\n</code></pre> </li> <li> <p>Go to the folder that contains your newly slimmed ntuples, then do <code>git annex add .</code>     and commit changes with <code>git commit . -m &lt;comment&gt;</code>.</p> <p>Example</p> <pre><code>cd ntuples/0.9.6-2016-production/Dst_D0-mc-tracker-only\ngit annex add .\ngit commit . -m \"Part 1 of DDX MC\"\n</code></pre> </li> <li> <p>Push this branch to Github with <code>git push origin &lt;branch_name&gt;</code>,     then create a pull-request.</p> <p>Info</p> <p>If the <code>git push origin &lt;branch_name&gt;</code> failed, check your <code>git</code> history and make sure you didn't added ntuples (large files) directly with <code>git add</code>.</p> <p>Github will refuse files larger than 100 MB.</p> <p>Once everything checks out, one of Manuel or Yipeng will merge the request.</p> </li> <li> <p>Once the request is merged, do the following:</p> <pre><code>git checkout master\ngit pull origin master\n</code></pre> <p>verify that your annexed ntuples are there, then do the following in the <code>lhcb-ntuples-gen</code> project root:</p> <pre><code>git annex sync\ngit annex copy . --to glacier\ngit annex sync  # YES, you need to do it twice, once before copying, and once after!\n</code></pre> </li> <li> <p>Once you finish all these, inform Manuel or Yipeng.</p> </li> </ol> <p>Info</p> <p>For more info on <code>git-annex</code> usage, review the <code>git-annex</code> entry.</p>"},{"location":"ntupling/grid_job/#appendix","title":"Appendix","text":""},{"location":"ntupling/grid_job/#sample-batch_skimsh","title":"Sample <code>batch_skim.sh</code>","text":"<pre><code>#!/usr/bin/env bash\nINPUT_DIR=~/ntuples  # NOTE: Configure this before proceed!!!\nSKIM_CONFIG=./postprocess/skims/rdx_mc.yml  # NOTE: Make sure you pick the right one!!!\nOUTPUT_DIR=$1\nMIN_NTUPLE_SIZE=500  # in KiB\n\nRED='\u001b[0;31m'\nNC='\u001b[0m' # No Color\n\n\nfunction check_job () {\n  local error=0\n  local job_dir=${INPUT_DIR}/$1\n  local num_of_subjobs=$2\n\n  echo \"Verifying output for Job $1, which has $2 subjobs...\"\n  # might require GNU find\n  local folders=$(find $job_dir -mindepth 1 -maxdepth 1 -type d -regex \".*/[0-9]*\" | wc -l)\n\n  if [[ $folders -ne $num_of_subjobs ]]; then\n      echo -e \"${RED}Found $folders subjobs, which =/= $num_of_subjobs. Terminate now.${NC}\"\n      exit 1\n  fi\n\n  for sj in $(ls $job_dir | grep -E \"^[0-9].*$\"); do\n    local file=$(find $job_dir/$sj/output -name '*.root')\n\n    if [[ -z $file ]]; then\n      let \"error++\"\n      echo -e \"${RED}subjob $sj: ntuple missing!${NC}\"\n    else\n      local size=$(du -b $file | awk '{print int($1 / 1024)}')  # in KiB\n      if [ $size -lt ${MIN_NTUPLE_SIZE} ]; then\n        let \"error++\"\n        echo -e \"${RED}subjob $sj: ntuple has a size of $size KiB, which is too small!${NC}\"\n      fi\n    fi\n  done\n\n  if [ $error -gt 0 ]; then\n    echo -e \"${RED}Job $1 output verification failed with $error error(s).${NC}\"\n    exit $error  # exit early to make errors easy to see\n  fi\n\n  return $error\n}\n\nfunction concat_job () {\n  check_job $1 $2\n\n  if [ $? -eq 0 ]; then\n    ./ganga/ganga_skim_job_output.py ${OUTPUT_DIR}/$3 ${INPUT_DIR}/$1 ${SKIM_CONFIG}\n  fi\n}\n\nconcat_job 180 111 Dst_D0--22_02_07--mc--tracker_only--MC_2016_Beam6500GeV-2016-MagDown-TrackerOnly-Nu1.6-25ns-Pythia8_Sim09k_Reco16_Filtered_11894600_D0TAUNU.SAFESTRIPTRIG.DST.root\n</code></pre>"},{"location":"ntupling/grid_job/#general-usage-of-ganga_jobspy","title":"General usage of <code>ganga_jobs.py</code>","text":"<p>For this repo, there is a central <code>ganga</code> job submitter that should handle all job submissions for all analyses with all reconstruction scripts in all folders. The script is located at: <code>ganga/ganga_jobs.py</code>. For it</p> <p>The general syntax is: <pre><code>ganga_jobs.py &lt;reco_script&gt; &lt;cond_files&gt;\n</code></pre></p> <p>For instance, for run 1 \\(R(D^{*})\\) signal Monte Carlo: <pre><code>ganga_jobs.py run1-rdx/reco_Dst_D0.py run1-rdx/cond/cond-mc-2012-md-sim08a.py -p mu -P Pythia6 -d 11574020\n</code></pre></p> <p>Note</p> <ul> <li>The <code>-p</code> and <code>-P</code> are optional. They have default values.</li> <li>The <code>-d</code> flag has a dummy default of <code>00000000</code>. For actual values, consult data sources.</li> </ul> <p>Info</p> <p>The usage of <code>ganga_jobs.py</code> is described by:</p> <pre><code>ganga_jobs.py --help\n</code></pre> <p>Most of submissions are wrapped in shell scripts. Some of them can be found here.</p>"},{"location":"ntupling/installation/","title":"Installing dependencies","text":"<p>Note</p> <p>Before proceeding, send Yipeng or Manuel an SSH key to your system so that we can give you read/write permission to <code>julian</code>, the <code>git-annex</code> server where our ntuples are stored.</p> <p>Clone the repository and set up the <code>annex</code> component<sup>1</sup>. We have a private server, <code>julian</code>, that hosts <code>git-annex</code> files.</p> <pre><code>git clone git@github.com:umd-lhcb/lhcb-ntuples-gen\ncd lhcb-ntuples-gen\n#git remote add julian git@lhcb.physics.umd.edu:lhcb-ntuples-gen  # not needed unless you want to copy to julian\ngit remote add glacier git@10.229.60.85:lhcb-ntuples-gen\ngit annex init --version=7\ngit submodule update --init  # Do this before git annex sync to avoid potential mess-up of submodule pointers!\ngit annex sync\n\n# It is higly recommended to install nix now before proceed! See below for some pointers on how to do it\n# If you have nix installed:\n#   nix develop\nmake install-dep\n</code></pre> <p>Note that these commands will only initialize the files controlled by <code>git-annex</code> (several GB in total) with symbolic links. You typically will download individual files as you need them with <pre><code>git annex get &lt;path_to_file&gt;\n</code></pre></p> <p>The set up above also installs in the <code>lib/python/</code> folder <code>pyBabyMaker</code>, <code>pyTuplingUtils</code>, and other packages that are needed. Each commit of <code>lhcb-ntuples-gen</code> points to specific commits of these packages. Thus, every time you pull new code in <code>lhcb-ntuples-gen</code>, you need to make sure you have the appropriate commits of the other packages installed with</p> <p>Note</p> <p>Don't forget to type <code>nix develop</code> before typing <code>make install-dep</code>, if you have <code>nix</code> installed!</p> <pre><code>git pull\ngit submodule update --init --recursive\nmake install-dep\n</code></pre>"},{"location":"ntupling/installation/#install-docker-to-run-davinci-locally","title":"Install <code>docker</code> to run <code>DaVinci</code> locally","text":"<p>We use <code>docker</code> to run a pre-built <code>DaVinci</code> image locally. To install <code>docker</code>:</p> <p>On Arch Linux run <code>sudo pacman -S docker</code> and follow this Arch wiki entry to finish the setup.</p> <p>In macOS with an Intel processor, you can install Docker by downloading it from their official site. You will need to log in to a Docker account and have it running to be able to pull the image.</p> <p>In macOS with an ARM processor <code>docker</code> has problems, but you install <code>colima</code> instead</p> <pre><code>brew install docker docker-compose docker-machine colima\n\ncolima stop\ncolima delete # delete existing instance\n# Start with Rosetta 2 emulation\ncolima start --arch aarch64 --vm-type=vz --vz-rosetta --cpu 4 --memory 8 --disk 120\n</code></pre> <p>Now it's time to pull (download) the pre-built <code>DaVinci</code> docker: <pre><code>docker pull umdlhcb/lhcb-stack-cc7:DaVinci-v45r6-SL\n</code></pre></p>"},{"location":"ntupling/installation/#install-nix","title":"Install <code>nix</code>","text":"<p>All of our C++ dependencies are installed with <code>nix</code>. To install <code>nix</code>, refer to the guide in <code>root-curated</code> repo.</p> <p>Warning</p> <p><code>nix develop</code> also provides a Python virtualenv. It is located in <code>.virtualenv</code> in project root.</p> <p>If a major update in <code>nixpkgs</code> occurs, Python may also get a significate update (e.g. Python 3.8 -&gt; Python 3.9). In this case, the virtualenv may stop working.</p> <p>In any case, if you see any weired Python problem, simply delete the <code>.virtualenv</code> folder, then run <code>nix develop</code> again: A new virtualenv will be re-created.</p>"},{"location":"ntupling/installation/#babymaker-code","title":"<code>babymaker</code> code","text":"<p><code>babymaker</code> is part of the <code>pyBabyMaker</code> Python package. It requires <code>python3</code> and a couple of <code>Python</code> dependencies<sup>3</sup>.</p> <p>Note</p> <p>It is strongly recommended to install <code>clang-format</code><sup>4</sup>, so the generated <code>C++</code> code looks much nicer.</p> <p><code>pyBabyMaker</code> is included in this project as a submodule. If you follow the project initialization procedure listed at the beginning of this instruction, you should already have it installed.</p> <p>Info</p> <p>For more info on local development of in-house Python modules (included as submodules), refer to this guide.</p>"},{"location":"ntupling/installation/#install-vcs-git-and-git-annex","title":"Install VCS (<code>git</code> and <code>git-annex</code>)","text":"<p>We use <code>git</code> to version-control the ntupling code and the wiki, and <code>git-annex</code> to version-control large files, mostly the input <code>.dst</code> files or important <code>.root</code> outputs. For more details on <code>git-annex</code>, see this brief introduction.</p> <ul> <li> <p>On Arch Linux, simply issue the following command to install both programs:     <pre><code>sudo pacman -S git git-annex\n</code></pre></p> </li> <li> <p>On macOS, if you have <code>homebrew</code> installed:     <pre><code>brew install git git-annex\n</code></pre></p> </li> </ul> <ol> <li> <p>Windows filesystems don't support symbolic links, which   makes <code>git-annex</code> almost unusable.</p> <p>Please use WSL or WSL2, and make sure the project is stored on a Linux   file system!\u00a0\u21a9</p> </li> <li> <p><code>gcc</code> must be recent enough to support <code>c++17</code> standard. Effectively,   <code>gcc6</code> or <code>clang5</code> (or newer) is required.</p> <p>In reality, you typically don't need to worry about this, as   <code>nix develop</code> will prepare you a shell with almost all tools needed for   this project.\u00a0\u21a9</p> </li> <li> <p>These dependencies are listed in <code>&lt;project_root&gt;/requirements.txt</code>. It is   highly recommended to install <code>pip</code> to manage Python packages.</p> <p>Note that <code>pyBabyMaker</code> doesn't rely on ROOT at all.</p> <p>It is also highly recommended to use <code>pyenv</code> and <code>pyenv-virtualenv</code> to   manage Python enviroments. Please google the installation instructions   for your OS.\u00a0\u21a9</p> </li> <li> <p><code>clang-format</code> usually comes with <code>clang</code>. A notable exception is on   macOS. In that case, just type in <code>brew install clang-format</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"ntupling/nomenclature/","title":"Nomenclature","text":"<p>These rules are checked by a script automatically.</p>"},{"location":"ntupling/nomenclature/#general-guidelines","title":"General guidelines","text":"<ul> <li>These filenames are case-sensitive</li> <li>No whitespace or <code>\\</code> permitted. Replace them with <code>_</code></li> <li>Fields must be separated with <code>--</code></li> </ul>"},{"location":"ntupling/nomenclature/#filenames","title":"Filenames","text":""},{"location":"ntupling/nomenclature/#step-1-ntuples","title":"Step 1 ntuples","text":"<p>Step 1 ntuple filenames, DaVinci logs, and ganga jobs should follow this form: <pre><code>&lt;particles&gt;--&lt;date&gt;--&lt;reco_mode&gt;--[additional_flags]--&lt;lfn&gt;--[index]--[aux].root\n</code></pre></p> <p>Note</p> <p>Below are the definitions of each field. Optional fields are marked with <code>[]</code> instead of <code>&lt;&gt;</code>.</p> <ul> <li><code>particles</code>: For instance <code>Dst</code>, <code>D0</code>, <code>Dst_D0</code>, etc.</li> <li><code>date</code>: Generation date. Formatted: <code>YY_MM_DD</code>.</li> <li><code>reco_mode</code>: Reconstruction mode, for instance <code>cutflow_mc</code> or <code>std</code>.</li> <li><code>additional_flags</code>: Optional. Additional descriptions, such as <code>tracker_only</code>.</li> <li><code>lfn</code>: The full DIRAC LFN of the sample, replacing <code>\\</code> and whitespace with <code>_</code>.</li> <li><code>index</code>: Optional. Index of the split sample. Ideally padding so ntuples.     in the same folder have the same length.</li> <li><code>aux</code>: Optional. Reserved for auxiliary ntuples. Start with <code>aux</code>. e.g. <code>aux_ubdt</code>.</li> </ul> <p>Example</p> <p>A ntuple name looks like this: <pre><code>Dst--20_05_08--cutflow_mc--bare--MC_2011_11874091_Beam3500GeV-2011-MagDown-Nu2-Pythia8_Sim08h_Digi13_Trig0x40760037_Reco14c_Stripping20r1NoPrescalingFlagged.root\n</code></pre></p> <p>For split (unmerged) ntuples: <pre><code>Dst_D0--21_10_16--mc--tracker_only--MC_2016_Beam6500GeV-2016-MagDown-TrackerOnly-Nu1.6-25ns-Pythia8_Sim09k_Reco16_Filtered_11574021_D0TAUNU.SAFESTRIPTRIG.DST--406-dv.root\n</code></pre></p>"},{"location":"ntupling/nomenclature/#step-2-ntuples","title":"Step 2 ntuples","text":"<p>Step 2 ntuple filenames should follow this form: <pre><code>&lt;particles&gt;--&lt;date&gt;--&lt;reco_mode&gt;--&lt;decay_mode&gt;--&lt;year&gt;--&lt;polarity&gt;--[additional_flags]--[index].root\n</code></pre></p> <p>Note</p> <p>Sample ntuples that are stored in the <code>samples</code> folder of each stripping line folder is considered step 2!</p> <p>Note</p> <p>Below are the definitions of the fields not defined above.</p> <ul> <li><code>decay_mode</code>: Brief description of the reco'ed sample. e.g. <code>data</code>,     <code>cocktail</code>, <code>DstplusTauNu</code>, <code>11574021</code>, or <code>all</code> if all samples merged</li> <li><code>year</code>: Year the data/MC is recorded/generated. Format: <code>YYYY</code>. If     multiple years needed, separate them with <code>-</code>.</li> <li><code>polarity</code>: <code>md</code> (magnet down), <code>mu</code> (magnet up), or <code>md-mu</code>.</li> </ul> <p>Example</p> <p>An ntuple name looks like this: <pre><code>Dst--20_02_02--mc--DstplusMuNu--2012--md--dv36-py6-sim08a.root\n</code></pre></p> <p>For split (unmerged) ntuples: <pre><code>D0--21_12_31--mc--11574021--2016--md--tracker_only--003.root\n</code></pre></p>"},{"location":"ntupling/nomenclature/#condition-files","title":"Condition files","text":"<p>Condition files should follow this filename:</p> <pre><code>cond-&lt;type&gt;-&lt;year&gt;-[polarity]-[additional_flags].py\n</code></pre> <p>All fields obey the same definitions as listed in previous sections.</p> <p>Note</p> <p>Condition files are located in <code>conds</code> folder of each stripping line folder.</p> <p>Note</p> <p>The <code>&lt;polarity&gt;</code> and <code>&lt;additional_flags&gt;</code> fields are optional for condition files.</p>"},{"location":"ntupling/nomenclature/#log-files","title":"Log files","text":"<p>Log files should follow this naming convention: <pre><code>&lt;particles&gt;-&lt;date&gt;-&lt;reco_mode&gt;-[additional_flags].log\n</code></pre></p> <p>All fields obey the same definitions as listed in previous sections.</p> <p>Note</p> <p>Log files are located in <code>logs</code> folder of each stripping line folder.</p>"},{"location":"ntupling/nomenclature/#folder-structure-for-storage","title":"Folder structure for storage","text":""},{"location":"ntupling/nomenclature/#production-ntuples","title":"Production ntuples","text":"<p>Each ntuple production (defined by the same code) is to be placed in one folder named <code>&lt;code_tag&gt;-&lt;description&gt;</code>, with subfolders containing divisions in terms of <code>reco_sample</code> and <code>mc/data</code>. For example, the folder structure could look like:</p> <pre><code>0.9.0-cutflow/Dst-cutflow_mc\n\n0.9.1-partial_refit/Dst-mc\n0.9.1-partial_refit/Dst-data\n0.9.1-partial_refit/D0-mc\n0.9.1-partial_refit/D0-data\n0.9.1-partial_refit/Dst-cutflow_mc\n\n...\n</code></pre>"},{"location":"ntupling/nomenclature/#dst-folders","title":"DST folders","text":"<p>DST folders should follow this naming convention: <pre><code>&lt;reco_sample&gt;-&lt;year&gt;-&lt;polarity&gt;-[additional_flags]\n</code></pre></p> <p>All fields obey the same definitions as listed in previous sections. This time, the first three fields are mandatory.</p> <p>Note</p> <p>DST folders are located in <code>data</code> folder of each stripping line folder.</p>"},{"location":"ntupling/step1_davinci/","title":"Step 1 ntuples with Davinci","text":"<p>Info</p> <p><code>DaVinci</code> is the LHCb package that runs preliminary selections and calculations on the raw <code>.dst</code> data, and produces <code>.root</code> files. It is often run on LHC remote Linux nodes <code>lxplus</code>.</p> <p>It is much more convenient to have a local <code>DaVinci</code> environment in a docker with a configuration that is easily shared. After the docker is pulled as described in the dependencies, it is launched from inside the project root with: <pre><code>make docker-dv\n</code></pre></p> <p>This command mounts the project root into the docker, so it has access to all the code in <code>lhcb-ntuples-gen</code> and allows you to modify it outside of the docker.</p> <p>Launch <code>DaVinci</code> with additional <code>TupleTool</code> with this command, inside <code>docker</code>: <pre><code>run gaudirun.py &lt;ntuple_options1&gt; &lt;ntuple_options2&gt; ...\n</code></pre></p> <p>We often have scripts that facilitate this. For instance, to run on Run 2 data, type in the <code>docker</code>: <pre><code>cd run2-rdx\n./run.sh conds/cond-std-2016.py\n</code></pre></p> <p>Warning</p> <p>The required <code>.dst</code> files need to be downloaded via <code>git-annex</code> OUTSIDE docker: <pre><code>cd run2-rdx\ngit annex get data/data-2016-md  # ~4.7 GB, this will take several minutes\n</code></pre></p> <p>Note</p> <ul> <li> <p>Inside the run script, the <code>reco_Dst_D0.py</code> script in the same directory is     called for \\(D^{*+}(\\to D^0(\\to K^+\\pi^-)\\pi^+)\\mu^-\\) reconstruction.      It also sets how many events to run at most (<code>EvtMax</code>) and the print frequency     (<code>PrintFreq</code>). To use a different reco script, edit <code>run.sh</code>.</p> </li> <li> <p>The argument, <code>conds/cond-std-2016.py</code>, sets the type of     input data (Data or MC), the input files and the name of the output     file (<code>std.root</code> in this case).</p> </li> </ul> <p>Info</p> <p>For more info about <code>docker</code> usage, refer to this guide.</p> <p>For more info about <code>Makefile</code>, refer to this guide.</p>"},{"location":"ntupling/step2_babymaker/","title":"Step 2 ntuples with babymaker","text":"<p><code>babymaker</code> is a part of the <code>pyBabyMaker</code> library. Please refer to the official document for its command line usage and internal APIs.</p>"},{"location":"ntupling/step2_babymaker/#generating-a-c-file-with-babymaker","title":"Generating a C++ file with <code>babymaker</code>","text":"<p>The general idea is that <code>babymaker</code> takes:</p> <ul> <li>A <code>YAML</code> file as configuration, denote as <code>cfg_yml</code></li> <li>A C++ \"template\" that <code>babymaker</code> can work on, denote as <code>cpp_tmpl</code></li> <li>Main ntuple file that you want to work on, denote as <code>main_ntp</code></li> <li>Optionally many friend ntuples that have part of their tree structures   identical to that of the main, denote as <code>friend_ntp1</code>, <code>friend_ntp2</code>, ...</li> </ul> <p>To generate our final C++ file:</p> <pre><code>babymaker -i &lt;cfg_yml&gt; -n &lt;main_ntp&gt; -f &lt;friend_ntp1&gt; &lt;friend_ntp2&gt; ... -o &lt;output_cpp&gt; -t &lt;cpp_tmpl&gt;\n</code></pre> <p>Next, the following shell snippet should be enough to get generated C++ compiled in this repo:</p> <pre><code>DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &amp;&gt; /dev/null &amp;&amp; pwd)\"\nHEADER_DIR=$DIR/../../include\nCOMPILER=$(root-config --cxx)\nCXX_FLAGS=$(root-config --cflags)\nLINK_FLAGS=$(root-config --libs)\nADDF_FLAGS=\"-I${HEADER_DIR}\"\n\ncpp_compile() {\n    ${COMPILER} -O2 ${CXX_FLAGS} ${ADDF_FLAGS} -o baby baby.cpp ${LINK_FLAGS}\n    # -O2 is the optimization level flag\n}\n\ncpp_compile  # assuming generated C++ file is named 'baby.cpp'\n</code></pre> <p>The actual usage of compiled <code>baby</code> depends on your C++ \"template\".</p>"},{"location":"ntupling/step2_babymaker/#how-does-babymaker-work-internally","title":"How does <code>babymaker</code> work, internally?","text":"<p>Internally <code>babymaker</code> really does 2 things (conceptually):</p> <ol> <li> <p>Directive generation: Figure out needed branches based on input ntuples    and YML file and define output in a way that the branch dependencies are    resolved properly.</p> <p>Internally, a <code>directive</code> is generated and passed to the next step.</p> </li> <li> <p>C++ generation: The <code>directive</code> from the previous step is passed to a    general macro processor, similar to <code>jekyll</code>.</p> <p>Based on the input C++ template, the <code>directive</code> is implemented in a C++ output file.</p> </li> </ol>"},{"location":"physics/b0_oscillation/","title":"\\(B_0\\) oscillation","text":"<p>\\(B_0\\) oscillation refers to the fact some of the \\(B_0\\) oscillate into \\(\\bar{B_0}\\) before they decay.</p> <p>For real data reconstruction, this doesn't require additional consideration, as we only know the quark content of the \\(B\\) mesons, be it \\(B_0\\) or \\(\\bar{B_0}\\), before they decay.</p> <p>However, for MC truth reconstruction (this applies to <code>MCDecayTreeTuple</code> only), we are concerned about the initial states of the \\(B\\) mesons. Instead of naively writing decay descriptors like this: <pre><code>'${b0}[B~0 -&gt; ${dst}(D*(2010)+ -&gt; ${d0}(D0 -&gt; ${k}K- ${pi}pi+) ${spi}pi+) ${mu}mu-]CC'\n</code></pre></p> <p>We need to take \\(B_0\\) oscillation into account: <pre><code>'('\n'${b0}[B~0 =&gt; ${dst}(D*(2010)+ =&gt; ${d0}(D0 =&gt; ${k}K- ${pi}pi+) ${spi}pi+) ${mu}mu- ${anu_mu}nu_mu~]CC'\n'||'\n'${b0}[B0 =&gt; ${dst}(D*(2010)+ =&gt; ${d0}(D0 =&gt; ${k}K- ${pi}pi+) ${spi}pi+) ${mu}mu- ${anu_mu}nu_mu~]CC'\n')'\n</code></pre></p>"},{"location":"physics/momentum_scaling/","title":"Momentum scaling","text":"<p>For data processing, at LHCb:</p> <ul> <li>Scale the data momentum, because data measurements are biased. This   bias can be detected and calibrated using some well-known decay mode (such as   \\(J/\\Psi \\rightarrow \\mu \\mu\\)).</li> <li>Smear the MC momentum, because MC measurements are too good.</li> </ul>"},{"location":"physics/track_chi2ndof_data_mc_inconsistency/","title":"Track \\(\\chi^2/DOF\\) data-MC inconsistency","text":"<p>For the run 1 and 2 data-MC comparison, we observed that for run 1 data, MC and run 2 MC, their track \\(\\chi^2/DOF\\) distributions are all centered around 1, yet that of run 2 data is centered around 0.75:</p> <p></p> <p>Puzzled by this, we asked experts<sup>1</sup> about this. The answer was:</p> <ul> <li>The OT drift time was improved so the actual tracking performance is better<ul> <li>This is mostly due to better alignment and calibrations.</li> </ul> </li> <li> <p>However, the OT uncertainties used in \\(\\chi^2\\) calculation was not updated    for data, and data only.</p> <ul> <li> <p>Now we have something like this:</p> mode residual resolution data new old MC new new </li> <li> <p>Note that \\(\\chi^2\\) here is computed by \\(\\frac{\\text{residual}}{\\text{resolution}}\\).</p> </li> <li>As a result, MC does not agree with data.</li> </ul> </li> </ul> <p>Note</p> <ul> <li>In <code>DaVinci</code>, the branch name is <code>_TRACK_CHI2NDOF</code></li> <li>This also affects related variables, like Ghost probability rate (<code>_TRACK_GhostProb</code>)</li> <li>The implication of this is still under discussion</li> </ul> <ol> <li> <p>Gregory Ciezarek and Lucia Grillo\u00a0\u21a9</p> </li> </ol>"},{"location":"physics/transverse_energy/","title":"Transverse energy \\(E_T\\)","text":"<p>Transverse energy \\(E_T\\) is defined as (taken from p. 4 of this paper):</p> \\[ E_T = E \\sin\\theta = \\sqrt{m^2 + p^2} \\sin\\theta \\] <p>In the massless limit:</p> \\[ E_T \\approx \\sqrt{p^2} \\sin\\theta = p_T \\]"},{"location":"physics/transverse_energy/#e_t-related-variables-in-tupletooll0calo","title":"\\(E_T\\)-related variables in <code>TupleToolL0Calo</code>","text":"<p>In <code>TupleToolL0Calo</code>, there's 3 variables that are related to \\(E_T\\):</p> <ul> <li><code>realET</code></li> <li><code>TriggerET</code></li> <li><code>TriggerHCALET</code></li> </ul> <p>Info</p> <p>For the rest of the article, assume we use <code>TupleToolL0Calo</code> on HCAL.</p>"},{"location":"physics/transverse_energy/#realet","title":"<code>realET</code>","text":"<p>This is \\(E_T\\) computed at HCAL:</p> <pre><code>trackET = TMath::Sqrt( TMath::Power( m_part2calo-&gt;caloState().x(), 2 ) + TMath::Power( m_part2calo-&gt;caloState().y(), 2 ) ) /\n          TMath::Sqrt( TMath::Power( m_part2calo-&gt;caloState().x(), 2 ) + TMath::Power( m_part2calo-&gt;caloState().y(), 2 ) +\n                       TMath::Power( m_part2calo-&gt;caloState().z(), 2 ) ) *\n          TMath::Sqrt( TMath::Power( m_part2calo-&gt;caloState().p(), 2 ) + TMath::Power( P-&gt;measuredMass(), 2 ) );\n\n// ...\n\ntest &amp;= tuple-&gt;column( prefix + \"_L0Calo_HCAL_realET\", trackET );\n</code></pre> <p>Conceptually, it really is just:</p> \\[ \\sqrt{p^2 + m^2} \\sin\\theta \\] <p>But here both \\(p\\) and \\(m\\) are measured, not MC truth. I'm having trouble giving it a good name.</p> <p>Question</p> <p>Naively I'd call it tracker \\(E_T\\), but from the code it is the \\(E_T\\) at HCAL, and HCAL is not adjacent to a tracker: Before HCAL it is the ECAL, after HCAL Muon stations.</p> <p>But it really is not MC truth \\(E_T\\) either, because we are using <code>measuredMass</code>.</p>"},{"location":"physics/transverse_energy/#triggeret","title":"<code>TriggerET</code>","text":"<p>Before you proceed</p> <p><code>TriggerET</code> and <code>TriggerHCALET</code> are defined in one block:</p> <pre><code>double triggerET( -1. ), triggerHCALET( -1. ), xtrigger( 0. ), ytrigger( 0. );\nif ( m_fillTriggerEt ) { triggerET = getAssociatedCluster( triggerHCALET, xtrigger, ytrigger ); }\n\n// ...\n\ntest &amp;= tuple-&gt;column( prefix + \"_L0Calo_HCAL_TriggerET\", triggerET );\ntest &amp;= tuple-&gt;column( prefix + \"_L0Calo_HCAL_TriggerHCALET\", triggerHCALET );\n</code></pre> <p>This is the maximum \\(E_T\\) measured by the whole detector for all L0 hadron candidates associated with the track. Note that:</p> <ol> <li> <p>For the track, we find the center cell it supposed to hit based on its     projectile, as well as the 3x3 neighbor cells, denote it track cells.</p> </li> <li> <p>For each hadron candidate, we find the HCAL cell it hits as well as the nearby     top, right, and top right cells. Here we have a total of 2x2 cells, denote it     candidate cells.</p> </li> <li> <p>Check if there's any overlap between the candidate cells and the track cells.     If there is overlap, use this candidate's \\(E_T\\) as track \\(E_T\\) if     \\(E_{T_{cand}} &gt; E_{T_{prev}}\\).</p> <p>Note</p> <p>Checking overlap is basically checking whether this L0 hadron candidate is associated with the track.</p> </li> <li> <p>Repeat this process for all L0 hadron candidates.</p> </li> </ol> <pre><code>// First get the CALO cells in the 3x3 cluster around the track projection\nstd::vector&lt;LHCb::CaloCellID&gt; cells3x3;\n\nif ( m_part2calo-&gt;isValid() ) {  // 'm_part2calo' is the track\nconst LHCb::CaloCellID centerCell = m_part2calo-&gt;caloCellID();\ncells3x3.push_back( centerCell );\nBOOST_FOREACH ( LHCb::CaloCellID cell, m_caloDe-&gt;neighborCells( centerCell ) ) { cells3x3.push_back( cell ); };\n}\nstd::sort( cells3x3.begin(), cells3x3.end() );\n\n// loop over the L0 candidates\nLHCb::L0CaloCandidates* candidates = getIfExists&lt;LHCb::L0CaloCandidates&gt;( m_location );\nif ( m_calo == \"HCAL\" ) typeToCheck = L0DUBase::CaloType::Hadron;\n\nLHCb::L0CaloCandidates::iterator cand;\ndouble                           result = -1.;  // 'result' is TriggerET\n\nfor ( cand = candidates-&gt;begin(); candidates-&gt;end() != cand; ++cand ) {\n  LHCb::L0CaloCandidate* theCand = ( *cand );\n  if ( theCand-&gt;type() == typeToCheck ) {\n    LHCb::CaloCellID cell1, cell2, cell3, cell4;\n    cell1 = theCand-&gt;id();\n    cell2 = LHCb::CaloCellID( cell1.calo(), cell1.area(), cell1.row() + 1, cell1.col() );\n    cell3 = LHCb::CaloCellID( cell1.calo(), cell1.area(), cell1.row(), cell1.col() + 1 );\n    cell4 = LHCb::CaloCellID( cell1.calo(), cell1.area(), cell1.row() + 1, cell1.col() + 1 );\n    if ( std::binary_search( cells3x3.begin(), cells3x3.end(), cell1 ) ||\n         std::binary_search( cells3x3.begin(), cells3x3.end(), cell2 ) ||\n         std::binary_search( cells3x3.begin(), cells3x3.end(), cell3 ) ||\n         std::binary_search( cells3x3.begin(), cells3x3.end(), cell4 ) ) {\n      if ( theCand-&gt;et() &gt; result ) {\n        result   = theCand-&gt;et();  // This is the key line!\n\n        // ...\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"physics/transverse_energy/#triggerhcalet","title":"<code>TriggerHCALET</code>","text":"<p>This is the maximum \\(E_T\\) measured by HCAL only for all hadron candidates associated with the track.</p> <p>The procedure is similar to that of <code>TriggerET</code>, the only difference is: instead of using <code>theCand-&gt;et()</code>, we find the associated HCAL cells and readout the ADC values associated with the hadron candidate and convert it to energy.</p> <pre><code>// Compute the HCAL energy of this cluster\n\n// ...\n\nhcal_energy                              = 0.;  // 'hcal_energy' is TriggerHCALET\nconst std::vector&lt;LHCb::L0CaloAdc&gt;&amp; adcs = m_adcsHcal-&gt;adcs();\nfor ( std::vector&lt;LHCb::L0CaloAdc&gt;::const_iterator itAdc = adcs.begin(); adcs.end() != itAdc; ++itAdc ) {\n  LHCb::CaloCellID id = ( *itAdc ).cellID();\n  if ( ( id == cell1 ) || ( id == cell2 ) || ( id == cell3 ) || ( id == cell4 ) )\n    hcal_energy += ( *itAdc ).adc();\n}\nif ( hcal_energy &gt; 255 ) hcal_energy = 255;\nhcal_energy = hcal_energy * ( m_caloDe-&gt;L0EtGain() );\n</code></pre>"},{"location":"physics/wrong_sign_particles/","title":"Wrong-sign particles","text":"<p>Note that we are not guaranteed to be reconstructing real particles. Instead, we are looking at combinations of reconstructed tracks with specific properties consistent with originating from a common vertex. These reconstructed particles may original from different mothers---they may still pass our vertexing criteria by sheer coincidence combined with resolution effects and the fact that tracks don't have an origin point.</p> <p>By looking at wrong-sign combinations, we get a pure sample of \"candidates\" that did not originate from a common mother (charged was not conserved in this \"decay\" mode, so it is not physical). We can be absolutely sure that no signal or physics background contaminates these samples because there is no such thing as a \\(B^{++}\\) (again, charge not conserved). Therefore, these combinations can be used to study and model these random combinations of tracks that pass our selection.</p> <p>A caveat to remember is that the wrong-sign combinations are not guaranteed to look exactly like the background in the right-sign we are trying to understand. This is where the candidates with mass greater than \\(m_B\\) come in handy. Here we know neither the right-sign nor the wrong-sign has any physics candidates in them, and we can see how the two differ.</p> <p>An example from muonic \\(R(D^{(*)})\\)</p> <p>In <code>b2D0MuXFakeB2DMuNuForTauMuLine</code>, the decay \\(B^- \\to D^0 \\mu^-\\) is defined by:</p> <pre><code>DecayDescriptors = [ '[B- -&gt; D0 mu-]cc' , '[B+ -&gt; D0 mu+]cc' ]\n</code></pre> <p>Note the latter decay is actually wrong-sign; the right-sign should be a <code>D~0</code> (\\(\\bar{D^0}\\)), instead of a <code>D0</code> (\\(D^0\\)).</p> <p>Therefore, if in our reconstruction, we define the decay to be:</p> <pre><code>DecayDescriptor = '[B- -&gt; D0 mu-]cc'\n</code></pre> <p>Then NOT ALL events passing stripping cuts contain a \\(B^-\\) candidate, because we are only reconstructing right-sign candidates with the decay descriptor above.</p> <p>Indeed, if we inspect the <code>DaVinci</code> log with the two decay descriptors:</p> <ul> <li>\\(B^-\\) with both signs:     <pre><code>SELECT:/Event/Semileptonic/Phys/b2D0MuXFakeB|     2.232 |     2.417 |    0.685      10.7     0.86 |    1868 |     4.517 |\nSelMyStrippedMuFilteredEvent                |    16.129 |    17.152 |    2.212    2950.3    68.08 |    1868 |    32.042 |\nSelMyStrippedChargedK                       |     0.016 |     0.005 |    0.003       0.1     0.00 |    1833 |     0.010 |\nSelMyStrippedChargedPi                      |     0.000 |     0.003 |    0.002       0.0     0.00 |    1833 |     0.007 |\nSelMyD0                                     |     0.278 |     0.334 |    0.210      44.0     1.02 |    1833 |     0.613 |\nSelMyStrippedMu                             |     0.000 |     0.004 |    0.003       0.0     0.00 |    1823 |     0.008 |\nSelMyB-                                     |     0.197 |     0.178 |    0.116       0.7     0.05 |    1823 |     0.325 |\nSelMyComboD0                                |     0.005 |     0.004 |    0.003       0.0     0.00 |    1812 |     0.008 |\n</code></pre></li> <li>\\(B^-\\) with right-sign only:     <pre><code>SELECT:/Event/Semileptonic/Phys/b2D0MuXFakeB|     1.761 |     1.887 |    0.618       6.2     0.65 |    1868 |     3.526 |\nSelMyStrippedMuFilteredEvent                |    13.238 |    13.371 |    1.952    1455.4    33.61 |    1868 |    24.978 |\nSelMyStrippedChargedK                       |     0.000 |     0.004 |    0.002       0.2     0.00 |    1833 |     0.007 |\nSelMyStrippedChargedPi                      |     0.000 |     0.003 |    0.002       0.0     0.00 |    1833 |     0.006 |\nSelMyD0                                     |     0.278 |     0.257 |    0.187      33.3     0.77 |    1833 |     0.473 |\nSelMyStrippedMu                             |     0.000 |     0.003 |    0.002       0.0     0.00 |    1823 |     0.006 |\nSelMyB-                                     |     0.093 |     0.121 |    0.087       0.5     0.03 |    1823 |     0.221 |\nSelMyComboD0                                |     0.000 |     0.003 |    0.002       0.0     0.00 |    1197 |     0.004 |\n</code></pre></li> </ul> <p>With both signs, \\(B^-\\) selection only kills 11 events (1823 -&gt; 1812). With right-sign only, the same selection (with a different decay descriptor, of course) kills 626 events (1823 -&gt; 1197).</p>"},{"location":"software_manuals/bender/","title":"bender","text":"<p><code>bender</code> is a tool to interactively explore <code>.dst</code> files.</p>"},{"location":"software_manuals/bender/#find-all-trigger-lines-and-hit-ratios-in-a-dst-file","title":"Find all trigger lines and hit ratios in a <code>.dst</code> file","text":"<p>There is a simple one-liner to find these info: <pre><code>lb-run Bender/latest trg-check -n -1 -d 2012 --teslocation /Event/Semileptonic/Phys/b2D0MuXB2DMuNuForTauMuLine/Particles &lt;path_to_dst&gt;\n</code></pre></p> <p>Note</p> <ul> <li><code>-n -1</code> is number of events to run over; <code>-1</code> means all. Default is   <code>1000</code>.</li> <li><code>-d 2012</code> specify the data type (year).</li> </ul>"},{"location":"software_manuals/bender/#dump-tes-info-from-a-dst-file","title":"Dump TES info from a <code>.dst</code> file","text":"<pre><code>lb-run Bender/latest dst-dump -d 2016 -f -n 100 &lt;path_to_dst&gt;\n</code></pre> <p>Note</p> <ul> <li><code>-f</code> means that try to unpack all TES locations.</li> </ul>"},{"location":"software_manuals/dirac/","title":"DIRAC","text":"<p><code>DIRAC</code> is a web interface to various LHCb's backends, including:</p> <ul> <li>Job monitoring</li> <li>Production monitoring</li> <li>Data bookkeeping</li> </ul>"},{"location":"software_manuals/dirac/#production-monitoring","title":"Production monitoring","text":"<p>Follow these steps to monitor the progress of a production:</p> <ol> <li>Open the \"folder\" Applications -&gt; Data</li> <li>Double click on the Production Request</li> <li>In the interface on RHS, input the Request ID(s) then Submit.</li> <li> <p>Productions satisfying with the desired IDs should now show up.    Right-click on the production to View more details.</p> <p>Info</p> <p>The View action will provide software versions and base platform used in that production.</p> </li> </ol>"},{"location":"software_manuals/external/","title":"External manuals","text":""},{"location":"software_manuals/external/#generic","title":"Generic","text":"<ul> <li>LHCb DeveloperKit</li> </ul>"},{"location":"software_manuals/external/#trigger-configuration-key-tck","title":"Trigger Configuration Key (TCK)","text":"<ul> <li>This TWiki explains   briefly how to use <code>TCKsh</code> to study TCKs.</li> <li>This starter kit page   provides some sample usage for <code>TCKsh</code></li> <li> <p>This page has all TCK info for   LHCb.</p> <p>Note</p> <p>This link have <code>.pdf</code> files that list all TCKs for a given period of time.</p> <p>For example, in the 2016 year-end report:</p> <ul> <li>All TCKs in this period, such as <code>0x1138160E</code>, are listed in page 6.</li> <li>TCK vs. fill number are listed in page 18. The fill number is related   to time, but the relationship is unknown to us<sup>1</sup>.</li> </ul> </li> </ul>"},{"location":"software_manuals/external/#find-particle-masses-used-by-the-loki-functors","title":"Find particle masses used by the <code>LoKi</code> functors","text":"<p>The full mass table for a particular <code>DaVinci</code> version can be looked up with<sup>2</sup>:</p> <pre><code>lb-run DaVinci/&lt;dv_version&gt; dump_particle_properties | tee ParticleTable.txt\n</code></pre> <p>Alternatively, the latest mass table is available at cern-gitlab</p>"},{"location":"software_manuals/external/#notes-on-pidcalib2","title":"Notes on <code>pidcalib2</code>","text":"<p>A guide to <code>pidcalib2</code> can be found here.</p> <p>usage of <code>--cut</code> and <code>--pid-cut</code></p> <p>Say <code>pidcalib2</code> is invoked like this:</p> <pre><code>lb-conda pidcalib pidcalib2.make_eff_hists \\\n    --cut \"A\" --cut \"B\" \\\n    --pid-cut \"PA\" --pid-cut \"PB\"\n</code></pre> <p>Then 2 histograms will be generated, with the following efficiencies:</p> <ol> <li>\\(\\epsilon_1 = \\frac{N(\\text{A &amp; B &amp; PA})}{N(\\text{A &amp; B})}\\)</li> <li>\\(\\epsilon_2 = \\frac{N(\\text{A &amp; B &amp; PB})}{N(\\text{A &amp; B})}\\)</li> </ol> <p>Note that all cuts supplied in all <code>--cut</code> flags are all applied first.</p> <ol> <li> <p>\"us\" refers to Yipeng Sun.\u00a0\u21a9</p> </li> <li> <p>Suggested by Phoebe Hamilton.\u00a0\u21a9</p> </li> </ol>"},{"location":"software_manuals/git_annex/","title":"git-annex","text":"<p>It is harder to manage large (100 MB or more) files in <code>git</code>, as checking them in/out would take a much longer time. Also, it is undesirable to expose raw data outside of the collaboration.</p> <p>We use a <code>git</code> addon, <code>git-annex</code>, to manage large files. <code>git-annex</code> stores all tracked files under <code>&lt;project_root&gt;/.git/annex</code>, and link/copy these files to the expected locations.</p> <p>A typical workflow to add a file to the <code>annex</code>, commit it, and sync the remotes, is <pre><code>git annex add &lt;file&gt;  ## Moves file to the annex, and replaces it with a soft link in the git repo\ngit add &lt;file&gt;\ngit commit -m \"Committed &lt;file&gt; (well, a soft link to it)\"\ngit push\ngit annex copy --to glacier &lt;file&gt;  ## Copies the actual file to glacier\n## Make sure you do not have uncommitted changes in the repo, because the sync commits everything\ngit annex sync \n</code></pre></p>"},{"location":"software_manuals/git_annex/#initialize-git-annex-repository","title":"Initialize <code>git-annex</code> repository","text":"<p>Before you proceed</p> <p>This needs to be done only once for each repository!</p> <p>We have a private server<sup>1</sup> that hosts <code>git</code> repositories with <code>git-annex</code> capabilities. After cloning the <code>umd-lhcb/lhcb-ntuples-gen</code> repository from github, add our private repository: <pre><code>git remote add julian git@129.2.92.92:lhcb-ntuples-gen\n</code></pre></p> <p>Note</p> <p>Please send us a SSH key so that we can give your read/write permission on the <code>git-annex</code> repository.</p> <p>Then we need to initialize the <code>annex</code> component: <pre><code>git annex init --version=7\n</code></pre></p> <p>Warning</p> <p>It is important to use a <code>git-annex</code> repository of <code>v7</code> or newer!<sup>2</sup></p> <p>To upgrade your <code>git-annex</code> repository to at least <code>v7</code>, issue the following command inside your <code>git</code> repository: <pre><code>git annex upgrade\n</code></pre></p> <p>Note</p> <p>Dropbox will not synchronize any symbolic links, so if the repository is placed within your Dropbox folder, and you have multiple computers, the symbolic links will be replaced by the actual files on all but the initial computers.</p>"},{"location":"software_manuals/git_annex/#add-files","title":"Add files","text":"<p>If you are adding large files that are unlikely to change in the future, such as <code>.dst</code> data files, use the following command: <pre><code>git annex add &lt;path_to_file&gt;\n</code></pre></p> <p>Note</p> <p>You typically don't need this. It is left here for completeness.</p> <p><code>git add</code> will add files to the <code>git</code> repository, not <code>git-annex</code> repository by default. Configuration is required to add only <code>.root</code> files to <code>git-annex</code>, and the rest to <code>git</code>. This has been done for this repository, in: <pre><code>&lt;project_root&gt;/.gitattributes\n</code></pre></p> <p>See this article for more information on configuring <code>.gitattributes</code>.</p>"},{"location":"software_manuals/git_annex/#change-the-content-of-annexed-files","title":"Change the content of annexed files","text":"<p>Files added via <code>git annex add</code> are read only. For example: <pre><code>echo change &gt; &lt;path_to_annexed_file&gt;\n&gt; bash: &lt;annexed_file&gt;: Permission denied\n</code></pre></p> <p>To change them, we need to unlock them first: <pre><code>git annex unlock &lt;path_to_annexed_file&gt;\n</code></pre></p> <p>Now you can edit the unlocked file as you wish. After editing, use <code>git annex add</code> to keep the changes and lock it again.</p> <p>Note</p> <p>When you commit, <code>git-annex</code> will notice that you are committing an unlocked file, add its new content. A pointer to that content is what gets committed to <code>git</code>; the actual content will go to <code>git-annex</code>.</p> <p>Warning</p> <p>If you don't need to modify the file after all, or want to discard modifications, use <code>git annex lock</code>. Doing so will result in all modifications discarded. Proceed with care!</p> <p>Files added via <code>git add</code> can be changed just like a regular file.</p>"},{"location":"software_manuals/git_annex/#change-the-name-of-annexed-files","title":"Change the name of annexed files","text":"<p>Once a file has been annexed with <code>git annex add</code>, the actual file will be moved automatically by <code>git-annex</code> inside <code>.git</code> folder in your project, and <code>git-annex</code> will create a symbolic link in-place pointing to that file.</p> <p>So, if you just want to rename the annexed file, without changing its content, just view that symbolic link as a regular file added to <code>git</code>.</p> <p>Example</p> <p>Consider the following example:</p> <ol> <li>Place <code>a.root</code> in <code>folderA/a.root</code>.</li> <li>Annex the file with:     <pre><code>git annex add folderA/a.root\n</code></pre></li> <li>Now <code>folderA/a.root</code> will be just a symbolic link, and the actual root    file is placed in <code>.git</code> in your project root</li> <li>Suppose you want to rename <code>a.root</code> to <code>b.root</code>. In this case, you can:     <pre><code>mv folderA/a.root folderA/b.root\ngit add folderA/a.root folderA/b.root  # &lt;-- We are not using annex here!!!\ngit commit -a\n</code></pre></li> </ol>"},{"location":"software_manuals/git_annex/#synchronize-files-between-local-and-remote-repositories","title":"Synchronize files between local and remote repositories","text":"<p>First check that you have committed all changes: <pre><code>git status\n</code></pre></p> <p>Make sure NO entry looks like this: <pre><code>changes not staged for commit\n</code></pre></p> <p>If there are uncommitted local changes, commit then and write sensible messages. This way, <code>git annex sync</code> won't make unwanted commits!</p> <p>Before you proceed</p> <p>Do <code>git pull origin master</code> to get latest changes from <code>origin</code> first.</p> <p>Now, you can do this: <pre><code>git annex sync\n</code></pre></p> <p>Note</p> <p>The command above doesn't download the actual data; rather, it only download the metadata so that <code>git annex</code> knows how to download the actual data.</p> <p>The command above will also make sure your local <code>master</code> is now identical to remote <code>master</code>. That's why it's better to do <code>git pull origin master</code> beforehand to avoid surprises.</p> <p>Error</p> <p>By default, <code>git annex sync</code> will commit all previously uncommitted changes before synchronizing!</p> <p>This can be disabled on a per-repository basis by: <pre><code>git annex config --set annex.autocommit false\n</code></pre></p> <p>Other clones will also be configured properly after they do a: <code>git annex sync</code>.</p> <p>If you want to download every single file from the <code>git-annex</code> repo (which is probably a couple of GBs), add the <code>--content</code> flag in the second step and download not only the metadata, but also the data: <pre><code>git annex sync --content julian\n</code></pre></p>"},{"location":"software_manuals/git_annex/#download-and-upload-individual-files","title":"Download and upload individual files","text":"<p>Downloading is simple: <pre><code>git annex get &lt;path_to_files&gt;\n</code></pre></p> <p>So is uploading: <pre><code>git annex copy --to julian &lt;path_to_files&gt;\ngit annex sync\n</code></pre></p>"},{"location":"software_manuals/git_annex/#drop-local-files","title":"Drop local files","text":"<p>The following command will remove the local copy of the file only, and will not delete the file from remote<sup>3</sup>: <pre><code>git annex drop &lt;path_to_files&gt;\n</code></pre></p> <p>Note</p> <p><code>git</code> would still think the working directory is clean, i.e. no change has been made.</p>"},{"location":"software_manuals/git_annex/#check-annexed-file-size","title":"Check annexed file size","text":"<p>For a single file this can be done via <code>git annex info</code>. For example: <pre><code>$ git annex info ntuples/pre-0.9.0/Dst-std/Dst--19_09_05--std--data--2012--md.root\nfile: ntuples/pre-0.9.0/Dst-std/Dst--19_09_05--std--data--2012--md.root\nsize: 1.8 gigabytes\nkey: SHA256E-s1800364650--cb5222668f21032b81ede5f18eb86026e21188c54441917258e8aad4d072f791.root\npresent: false\n</code></pre></p> <p>For directories, we have a home-made wrapper script <code>scripts/count_root_files.py</code>. For example: <pre><code>$ ./scripts/count_root_files.py ntuples\n   2 .root   total: 171.30 MiB   local:   0.00 KiB   ntuples/0.9.1-partial_refit\n   2 .root   total: 171.30 MiB   local:   0.00 KiB   ntuples/0.9.1-partial_refit/Dst_D0-cutflow_mc\n   5 .root   total:  47.49 GiB   local:   0.00 KiB   ntuples/ref-rdx-run1\n   1 .root   total: 397.92 MiB   local:   0.00 KiB   ntuples/ref-rdx-run1/Dst-mc\n   1 .root   total:  29.62 GiB   local:   0.00 KiB   ntuples/ref-rdx-run1/D0-mix\n   1 .root   total:   1.70 GiB   local:   0.00 KiB   ntuples/ref-rdx-run1/Dst-std\n   1 .root   total:   1.60 GiB   local:   0.00 KiB   ntuples/ref-rdx-run1/D0-std\n   1 .root   total:  14.18 GiB   local:   0.00 KiB   ntuples/ref-rdx-run1/Dst-mix\n   2 .root   total:   0.98 GiB   local:   0.00 KiB   ntuples/0.9.0-cutflow\n   2 .root   total:   0.98 GiB   local:   0.00 KiB   ntuples/0.9.0-cutflow/Dst-cutflow_mc\n   7 .root   total:  37.90 GiB   local:   0.00 KiB   ntuples/pre-0.9.0\n   2 .root   total:  46.24 MiB   local:   0.00 KiB   ntuples/pre-0.9.0/Dst-cutflow_mc\n   2 .root   total:  17.50 GiB   local:   0.00 KiB   ntuples/pre-0.9.0/Dst-cutflow_data\n   1 .root   total: 179.56 MiB   local:   0.00 KiB   ntuples/pre-0.9.0/Dst-mc\n   2 .root   total:  20.19 GiB   local:   0.00 KiB   ntuples/pre-0.9.0/Dst-std\n</code></pre></p> <p>Info</p> <p>If you are in the <code>nix</code> shell, <code>count_root_files.py</code> is added to PATH so you can call it directly.</p>"},{"location":"software_manuals/git_annex/#check-annexed-file-availability","title":"Check annexed file availability","text":"<p>We can use <code>git annex list</code> for this. For example: <pre><code>$ git annex list ntuples/0.9.0-cutflow\nhere\n|Julian\n||origin\n|||web\n||||bittorrent\n|||||\n_X___ ntuples/0.9.0-cutflow/Dst-cutflow_mc/Dst--20_06_05--cutflow_mc--bare--MC_2011_Beam3500GeV-2011-MagDown-Nu2-Pythia8_Sim08h_Digi13_Trig0x40760037_Reco14c_Stripping20r1NoPrescalingFlagged_11874091_ALLSTREAMS.DST.root\n_X___ ntuples/0.9.0-cutflow/Dst-cutflow_mc/Dst--20_06_05--cutflow_mc--bare--MC_2016_Beam6500GeV-2016-MagDown-Nu1.6-25ns-Pythia8_Sim09b_Trig0x6138160F_Reco16_Turbo03_Stripping26NoPrescalingFlagged_11874091_ALLSTREAMS.DST.root\n</code></pre></p> <ol> <li> <p>As of now, the server is sitting on Yipeng's desktop. It is named   <code>Julian</code>, after Julian Schwinger.\u00a0\u21a9</p> </li> <li> <p>Please read this for the rationale.\u00a0\u21a9</p> </li> <li> <p>Deleting files from remote is dangerous! As the remote might be the   last copy of the file so we may lose the file permanently.</p> <p>Still, if you insist, please refer to the official guide.\u00a0\u21a9</p> </li> </ol>"},{"location":"software_manuals/lxplus/","title":"Tips for lxplus","text":""},{"location":"software_manuals/lxplus/#folder-permission-on-lxplus","title":"Folder permission on <code>lxplus</code>","text":"<p>This is needed to grant collogues access to certain files stored on <code>lxplus</code>.</p>"},{"location":"software_manuals/lxplus/#afs","title":"AFS","text":"<p>AFS (mostly) ignores UNIX permissions<sup>1</sup>. Instead, use <code>fs setacl</code> to control access right: <pre><code>fs setacl &lt;path_to_folder_on_afs&gt; system:anyuser read\n</code></pre></p> <p>To check current access permissions of a folder: <pre><code>fs listacl &lt;path_to_folder_on_afs&gt;\n</code></pre></p> <p>Warning</p> <p>Only new subdirectories inherit the parent directory's permissions.</p> <p>For more info, consult this link<sup>1</sup>.</p>"},{"location":"software_manuals/lxplus/#eos","title":"EOS","text":"<p>It is unclear on how to share files stored in EOS as naive <code>chmod</code> won't work and sharing via web interface won't work.</p>"},{"location":"software_manuals/lxplus/#vnc-to-lxplus","title":"VNC to lxplus","text":"<p>First, run the VNC server on a lxplus node: <pre><code>vncserver :8 -localhost -name Lxplus-Session -geometry 1024x768\n</code></pre></p> <p>If it is your first time running <code>vncserver</code>, it may prompt you to set a remote-access password.</p> <p>Unfortunately, the default <code>~/.vnc/xstartup</code> doesn't work out of box. You can confirm that by trying to kill the newly-launched server: <pre><code>vncserver -kill :8\n</code></pre> and you may get something like this: <pre><code>Can't find file /afs/cern.ch/user/s/suny/.vnc/lxplus732.cern.ch:8.pid\nYou'll have to kill the Xvnc process manually\n</code></pre></p> <p>Now, we need to configure a working desktop for VNC. Clear your <code>~/.vnc/xstartup</code> and copy the following lines<sup>1</sup> to that file:</p> <pre><code>#!/bin/sh\n\nunset SESSION_MANAGER\nunset DBUS_SESSION_BUS_ADDRESS\nicewm &amp;\n</code></pre> <p>Re-launch the <code>vncserver</code> on lxplus with the same command. If the port <code>:8</code> is taken by someone else, use a different port. Remember the lxplus hostname (denote as <code>lxplus_host</code>) and port number (denote as <code>port</code>).</p> <p>Now we need to map the VNC port to a localhost port, likely due to firewall issues: <pre><code>ssh -L &lt;port&gt;:localhost:&lt;port&gt; &lt;user&gt;@&lt;lxplus_host&gt;.cern.ch\n</code></pre></p> <p>Note</p> <p>Here <code>port</code> must be in full number. e.g. <code>:8</code> -&gt; <code>5908</code>.</p> <p>Finally, we can access our remote lxplus desktop with: <pre><code>vncviewer &lt;port&gt;\n</code></pre></p> <ol> <li> <p>Courtesy of Will.\u00a0\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"software_manuals/root/","title":"Compiling ROOT","text":""},{"location":"software_manuals/root/#compiling-root-without-nix-on-macos","title":"Compiling ROOT without <code>nix</code> on macOS","text":"<p>For of our repos have a <code>nix</code> flake with <code>ROOT</code> in it, but if you want to have <code>ROOT</code> installed in your mac with the <code>HistFactory</code> pacthes, you can follow the instructions below.</p> <p>If you alread have a <code>ROOT</code> installation, you should delete it first as it often collides with new ones (<code>rm -rf root_build root_install</code>). <pre><code>git clone --branch histfactory_patch https://github.com/umd-lhcb/root.git\nmkdir root_build root_install &amp;&amp; cd root_build\ncmake -DCMAKE_INSTALL_PREFIX=../root_install/ -Dsqlite=OFF -Dmysql=OFF -Dx11=ON  -Droofit=ON -Dmt=ON -Dminuit2=ON -Dccache=ON -Dlibcxx=ON -Drpath=ON -DCMAKE_CXX_STANDARD=17 -Droot7=OFF ../root \ncmake --build . -- install -j6\n</code></pre></p> <p>Note:  For <code>-jN</code>, <code>N</code> should be your number of CPU cores (or fewer).</p>"},{"location":"software_manuals/root/#using-pyroot-in-macos","title":"Using <code>pyroot</code> in macOS","text":"<p>Starting in <code>ROOT</code> 6.22, the compilation is done for both <code>python</code> 2 and 3. Several of our scripts, which require <code>python</code> 3, rely on the <code>python</code> and <code>pip</code> commands, which in macOS are by default bound to <code>python</code> 2. This can be changed installing the python version that you want and adding the appropriate soft links. For instance,</p> <pre><code>brew install python\nln -s ../Cellar/python@3.9/3.9.6/bin/python3 /usr/local/bin/python\nln -s ../Cellar/python@3.9/3.9.6/bin/pip3 /usr/local/bin/pip\n</code></pre>"},{"location":"software_manuals/davinci/docker_image_usage/","title":"Docker image usage","text":""},{"location":"software_manuals/davinci/docker_image_usage/#launch-a-davinci-container","title":"Launch a <code>DaVinci</code> container","text":"<p>The shortcut to run a <code>DaVinci</code> <code>docker</code> in this project is: <pre><code>make docker-dv\n</code></pre> in the project root.</p> <p>The <code>make</code> rule is actually defined as the following: <pre><code>docker run --rm -it -v `pwd`:/data -e UID=$(id -u) -e GID=$(id -g) --net=host umdlhcb/lhcb-stack-cc7:DaVinci-v45r6-SL\n</code></pre></p> <p>More generally, if you want to mount another folder, with a path <code>&lt;src_path&gt;</code>: <pre><code>docker run --rm -it -v &lt;src_path&gt;:/data -e UID=$(id -u) -e GID=$(id -g) --net=host umdlhcb/lhcb-stack-cc7:DaVinci-v45r6-SL\n</code></pre></p> <p>Info</p> <p><code>docker</code> images are read-only. When we launch a <code>docker</code> container, a writable layer is placed on top of the image.</p>"},{"location":"software_manuals/davinci/docker_image_usage/#use-official-davinci-inside-container","title":"Use official <code>DaVinci</code> inside container","text":"<p>The command is very similar to the one used on <code>lxplus</code>: <pre><code>lb-run DaVinci/latest gaudirun.py &lt;ntuple_options1&gt; &lt;ntuple_options2&gt; ...\n</code></pre> since we have only 1 version of <code>DaVinci</code> inside the container, <code>DaVinci/latest</code> would always work.</p>"},{"location":"software_manuals/davinci/docker_image_usage/#use-locally-compiled-davinci-inside-container","title":"Use locally compiled <code>DaVinci</code> inside container","text":"<p>Since we need additional <code>TupleTool</code><sup>1</sup> in our reconstruction script, we also provide a locally compiled <code>DaVinci</code> inside the container, provided that you are using a <code>DaVinci</code> image with a <code>-SL</code> suffix.</p> <p>To launch this locally compiled <code>DaVinci</code>: <pre><code>run gaudirun.py &lt;ntuple_options1&gt; &lt;ntuple_options2&gt; ...\n</code></pre></p> <p>Note</p> <p>To make our lives easier, a <code>run.sh</code> command is typically created in each stripping lines, such as: <pre><code>run1-rdx/run.sh\nrun2-rdx/run.sh\n</code></pre></p> <p>If you see this file, take a look at it to see the availabe commands, and run it inside the <code>docker</code> container: <pre><code>./run.sh &lt;path_to_cond_file&gt;  # inside docker\n</code></pre> optionally, a <code>debug</code> flag can be supplied so that only the first couple of events will be considered.</p>"},{"location":"software_manuals/davinci/docker_image_usage/#remove-old-docker-images","title":"Remove old docker images","text":"<p>To list all local <code>docker</code> images: <pre><code>docker images\n</code></pre></p> <p>If you download a newer version of <code>docker</code> image, and want to remove the old ones to save disk space, you can: <pre><code>docker rmi &lt;docker_image_tag&gt;\ndocker image prune\n</code></pre> here <code>&lt;docker_image_tag&gt;</code> should be something like <code>umdlhcb/lhcb-stack-cc7:DaVinci-v45r6-SL</code>.</p> <ol> <li> <p>Such as <code>TupleToolApplyIsolation</code> and <code>TupleToolTauMuDiscVars</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"software_manuals/davinci/loki_functors/","title":"LoKi functors","text":""},{"location":"software_manuals/davinci/loki_functors/#tis-functor","title":"<code>TIS</code> functor","text":"<p><code>TIS</code> is a (undocumented) <code>LoKi</code> functor\uff0c and it stands for Trigger Independent Signal. There's another similar term: TOS: Trigger On Signal.</p>"},{"location":"software_manuals/davinci/loki_functors/#functor-usage","title":"Functor usage","text":"<pre><code>TIS(&lt;trigger_line_to_look&gt;, &lt;trigger_decision_storage_location&gt;)\n</code></pre> <p>Note</p> <p><code>&lt;trigger_decision_storage_location&gt;</code> is a <code>TES</code> location</p>"},{"location":"software_manuals/davinci/loki_functors/#an-example-from-lhcb-ana-2014-052-v2r1","title":"An example from lhcb-ana-2014-052-v2r1","text":"<pre><code>INTREE((ABSID == 'mu+') &amp; (TIS('L0.*', 'L0TriggerTisTos')))\n</code></pre> <p>The line above should be interpreted as following:</p> <ol> <li>In the decay tree, find a \\(\\mu\\).</li> <li>We look over all <code>L0.*</code> trigger lines with <code>TES</code> <code>L0TriggerTisTos</code>, and    require to have a trigger independent signal:<ul> <li>Since we are triggering on \\(\\mu\\), this requires that the trigger cannot   be due to the \\(\\mu\\).</li> <li>Also note that the whole decay tree is just a \\(\\mu\\) and a \\(D\\), so it   means that we are either TOS on \\(D\\), TIS in the whole event, or both.</li> </ul> </li> </ol>"},{"location":"software_manuals/davinci/tips_and_tricks/","title":"Tips and tricks","text":""},{"location":"software_manuals/davinci/tips_and_tricks/#running-old-davinci-on-the-grid","title":"Running old DaVinci on the GRID","text":"<p>The run 1 \\(R(D^{(*)})\\) analysis used DaVinci/v36r1p2. To run that on lxplus7 nodes:</p> <ol> <li> <p>Export the following environmental variables to use old runtime:</p> <pre><code>export CMTCONFIG=x86_64-slc6-gcc48-opt\n</code></pre> </li> <li> <p>Run old DaVinci with <code>lb-run</code>:</p> <pre><code>lb-run DaVinci/v36r1p2 gaudirun.py\n</code></pre> </li> </ol>"},{"location":"software_manuals/davinci/tips_and_tricks/#about-gaudisequencer","title":"About <code>GaudiSequencer</code>","text":"<p><code>GaudiSequencer</code> is an per-event algorithm, such as <code>DecayTreeTuple</code>, in the sense that <code>Gaudi</code> knows that it should run on every event.</p> <p><code>GaudiSequencer</code> is used to chain related algorithms, and it's default behavior is to only run an algorithm if the preceding algorithm passed (this is done in the <code>c++</code> class for the algorithm by returning <code>StatusCode::SUCCESS</code>).</p> <p>This default can be overridden by setting <code>GaudiSequencer.IgnoreFilterPassed</code> to <code>True</code>, which will run all the algorithms regardless of whether the preceding one passed or failed. The list of algorithms to run is defined by the <code>GaudiSequencer.Members</code> list.</p>"},{"location":"software_manuals/davinci/tips_and_tricks/#difference-between-mainsequence-and-useralgorithms","title":"Difference between <code>MainSequence</code> and <code>UserAlgorithms</code>","text":"<ul> <li> <p><code>MainSequence</code>: Use <code>DaVinci().addToMainSequence([&lt;a list of algorithms&gt;])</code>   to customize the initialization of <code>DaVinci</code>. This should be used to provide   custom functions/TESs<sup>1</sup> that will be visible to all selection algorithms.</p> </li> <li> <p><code>UserAlgorithms</code>: Actual selection algorithms. This is always appended at the   end of the <code>MainSequence</code> of a <code>DaVinci</code> session.</p> </li> </ul>"},{"location":"software_manuals/davinci/tips_and_tricks/#difference-cc-and-cc-in-a-decay-descriptor","title":"Difference <code>CC</code> and <code>cc</code> in a decay descriptor","text":"<ul> <li><code>LoKi</code> and <code>DecayTreeTuple</code> use uppercase <code>CC</code> for charge conjugation.</li> <li><code>CombineParticles</code> uses lowercase <code>cc</code>.</li> </ul> <p>This is just an inconsistency in the <code>DaVinci</code> code base and there's nothing we can do as a user.</p> <ol> <li> <p>TES: Transient Event Storage.\u00a0\u21a9</p> </li> </ol>"},{"location":"software_manuals/davinci/tuple_tools/","title":"TupleTools","text":""},{"location":"software_manuals/davinci/tuple_tools/#configure-default-tupletools","title":"Configure default TupleTools","text":"<p>There are 5 TupleTools that are added by default:</p> <ul> <li><code>TupleToolKinematic</code></li> <li><code>TupleToolPid</code></li> <li><code>TupleToolANNPID</code></li> <li><code>TupleToolGeometry</code></li> <li><code>TupleToolEventInfo</code></li> </ul> <p>To configure, for example, <code>TupleToolPid</code>, remove it from the TupleTool list first, then re-add it. This new instance can now be configured normally:</p> <pre><code>tp.ToolList.remove('TupleToolPid')\ntt_pid = tp.addTupleTool('TupleToolPid')\ntt_pid.Verbose = True\n</code></pre> <p>Note</p> <p>If we don't remove the TupleTool first, neither <code>addTupleTool</code> nor <code>addTool</code> can make it configurable.</p>"},{"location":"software_manuals/davinci/tuple_tools/#tupletoolapplyisolation","title":"<code>TupleToolApplyIsolation</code>","text":"<p><code>TupleToolApplyIsolation</code> is used to find isolation variables for semileptonic decays. This allows us to identify actual \\(B\\) meson decay vertices more readily.</p>"},{"location":"software_manuals/davinci/tuple_tools/#_isolation_type","title":"<code>_ISOLATION_Type</code>","text":"<p>Among the many variables produced by this tool, these four are about track type of each track:</p> <ul> <li><code>_ISOLATION_Type</code></li> <li><code>_ISOLATION_Type2</code></li> <li><code>_ISOLATION_Type3</code></li> <li><code>_ISOLATION_Type4</code></li> </ul> <p>Note</p> <p>These four tracks are the ones with the best BDT scores.</p> <p>For each of these variables, it admits 3 possible values of type <code>float</code>:</p> <ul> <li><code>1.0</code>: VELO only, with no other compatible segments found</li> <li><code>3.0</code>: Forward tracks, which are VELO+(TT)+downstream segment (TT hits          optional)</li> <li><code>4.0</code>: Upstream tracks, VELO+TT</li> </ul> <p>Note</p> <p>The type <code>1.0</code> tracks can be turned off by commenting out the following lines in <code>reco_Dst.py</code>:</p> <pre><code># Provide required information for VELO pions.\nms_all_protos = ChargedProtoParticleMaker(name='MyProtoPMaker')\nms_all_protos.Inputs = ['Rec/Track/Best']\nms_all_protos.Output = 'Rec/ProtoP/MyProtoPMaker/ProtoParticles'  # This TES location will be accessible for all selection algorithms\n\n# VELO pions for Greg's isolation tool.\n# NOTE: The name 'StdNoPIDsVeloPions' is hard-coded in the tuple tool, so the\n#       name should not be changed.\nms_velo_pions = NoPIDsParticleMaker('StdNoPIDsVeloPions', Particle='pion')\nms_velo_pions.Input = ms_all_protos.Output\n\n# NOTE: These two lines are needed to select particles in VELO only.\n# NOTE: DARK MAGIC.\ntrackSelector(ms_velo_pions, trackTypes=['Velo'])\nupdateDoD(ms_velo_pions)\n\nDaVinci().appendToMainSequence([ms_all_protos, ms_velo_pions])\n</code></pre>"},{"location":"software_manuals/davinci/tuple_tools/#tupletoolsltruth","title":"<code>TupleToolSLTruth</code>","text":"<p>The truth-matching is done with a <code>getMCParticle</code> class method, which is defined as following:</p> <pre><code>const LHCb::MCParticle* TupleToolSLTruth::getMCParticle(\n    const LHCb::Particle* P ) {\n  const LHCb::MCParticle* mcp( NULL );\n  if ( P ) {\n    // assignedPid = P-&gt;particleID().pid();\n    if ( msgLevel( MSG::VERBOSE ) )\n      verbose() &lt;&lt; \"Getting related MCP to \" &lt;&lt; P &lt;&lt; endmsg;\n    for ( std::vector&lt;IParticle2MCAssociator*&gt;::const_iterator iMCAss =\n              m_p2mcAssocs.begin();\n          iMCAss != m_p2mcAssocs.end(); ++iMCAss ) {\n      mcp = ( *iMCAss )-&gt;relatedMCP( P );\n      if ( mcp ) break;\n    }\n    if ( msgLevel( MSG::VERBOSE ) ) verbose() &lt;&lt; \"Got mcp \" &lt;&lt; mcp &lt;&lt; endmsg;\n  }\n  return mcp;\n}\n</code></pre> <p>Here it is trying to use the following MC associators in order:</p> <ul> <li><code>DaVinciSmartAssociator</code></li> <li><code>MCMatchObjP2MCRelator</code></li> </ul> <p>And if one of them return a non-empty match, it will return that match right away.</p> <p>Info</p> <p>These accociators are derived classes of <code>Particle2MCAssociatorBase</code>, which is defined in the <code>Phys</code> project in the <code>Phys/DaVinciMCKernel/Kernel/Particle2MCAssociatorBase.h</code> file.</p> <p>Info</p> <p>For more info on MC truth-matching, take a look at this article.</p>"},{"location":"software_manuals/nix/nix/","title":"nix","text":""},{"location":"software_manuals/nix/nix/#what-is-nix","title":"What is <code>nix</code>?","text":"<p><code>nix</code> is a package manager that aims to avoid the dependency hell that you some times enter with conventional package managers such as <code>rpm</code> or <code>pip</code>. This nix-pills post explains <code>nix</code> advantages in more detail, but basically, it stores each package and its version at <code>/nix/store/hash-name</code> (eg, <code>/nix/store/s4zia7hhqkin1di0f187b79sa2srhv6k-bash-4.2-p45/</code>). Everything in this store is immutable, and packages are built against absolute paths whose code never changes. Per nix-pills,</p> <p>What does all this mean? It means that you could run mysql 5.2 with glibc-2.18, and mysql 5.5 with glibc-2.19. You could use your python module with python 2.7 compiled with gcc 4.6 and the same python module with python 3 compiled with gcc 4.8, all in the same system.</p> <p>For our purposes, we configure the dependencies needed in some of our repos with <code>flake.nix</code> files such as the one in <code>lhcb-ntuples-gen</code>. You then type <code>nix develop</code>, et voila, you have all the packages you need (after some compilation if it is the first time you do it).</p>"},{"location":"software_manuals/nix/nix/#root-in-nix-and-our-documentation","title":"<code>ROOT</code> in <code>nix</code> and our documentation","text":"<p>Importantly, <code>nix</code> allows us to run various versions of CERN's <code>ROOT</code> simultaneously, which is needed because in some cases, old code like the <code>uBDT</code> classifier relies on ROOT versions too old to be compiled in modern systems.</p> <p>We set up various <code>ROOT</code> versions at <code>root-curated</code>: 5.34/38, 6.16/00, and 6.24/02. These can then be picked up in the various repos, see here an example. Note that various repos may use the same version of <code>ROOT</code>. You will only need to compile it once for all of them.</p> <p>The <code>README</code> in <code>root-curated</code> also provides our basic <code>nix</code> documentation, for instance installation in macOS or linux or automatic <code>nix develop</code> with <code>direnv</code>.</p>"},{"location":"software_manuals/nix/nix/#nixpkgs","title":"<code>nixpkgs</code>","text":"<p><code>nixpkgs</code> is the main registry that contains all official packages provided by Nix/NixOS project (<code>nix</code> is a package in <code>nixpkgs</code>). When you install <code>nix</code>, a system-wide version of <code>nixpkgs</code> is specified in the installer (let's call it <code>nixpkgs-ver_sys</code>). In the <code>root-curated</code> flake, we pin a version of <code>nixpkgs</code> (say, <code>nixpkgs-ver_root_curated</code>).</p> <p>In general, <code>nixpkgs-ver_sys != nixpkgs-ver_root_curated</code>. This <code>nixpkgs-ver_root_curated</code> is only effective in the <code>root-curated</code> project. It is completely isolated from your system.</p> <p>In <code>lhcb-ntuples-gen</code> flake, we pin a version of <code>root-curated</code>. We also configure this flake in a way such that we use the <code>nixpkgs</code> pinned in the pinned <code>root-curated</code> flake. Denote this <code>nixpkgs</code> as <code>nixpkgs-ver_ntuples_gen</code> Similarly, <code>nixpkgs-ver_ntuples_gen != nixpkgs-ver_root_curated</code>, unless you manually update <code>root-curated</code> pointer in <code>lhcb-ntuples-gen</code>. Another possibility of <code>nixpkgs-ver_ntuples_gen == nixpkgs-ver_root_curated</code> is that we don't update the <code>nixpkgs</code> pointer in <code>root-curated</code>.</p> <p>The diagram below gives a visual example of the <code>nixpkgs</code> version changing, and only being picked up by <code>root-curated</code> with the pinning changes. </p>"},{"location":"technical_concepts/truth_matching/","title":"Truth-Matching","text":"<p>In LHCb, the general procedure works as follows:</p> <ol> <li>In the MC generation, after <code>Gauss</code> and <code>Boole</code>, <code>Brunel</code> is used to     reconstruct events.</li> <li> <p>During this reconstruction, truth-matching maps for     <code>ProtoParticle</code>-<code>MCParticle</code> are also created.</p> <p>This only applies to stable particles in the detector.</p> <p>An example on truth-matching in <code>Brunel</code> is provided in this TWiki.</p> <p>Info</p> <p>An example of these TES locations for <code>TurboDst</code> can be found at this TWiki.</p> </li> <li> <p>Reconstructed events and truth-matching maps are stored in the <code>dst</code> files.</p> </li> <li>When reconstructing events in <code>DaVinci</code>, the truth-matching maps are loaded     from the <code>dst</code> file and used to truth-match stable particles.</li> <li>For composite particles: Each reconstructed final state daughter of the     composite Particle has an associated <code>MCParticle</code>, and all these associated     <code>MCParticle</code>s have the same final <code>MCParticle</code> mother.</li> </ol> <p>LHCb has implemented many truth-matching strategies.</p> <p>Info</p> <p>Take a look at the Particle2MC TWiki for an overview on these strategies.</p>"},{"location":"technical_concepts/truth_matching/#davincismartassociator","title":"<code>DaVinciSmartAssociator</code>","text":"<p>In this implementation, truth-matching are separated into 3 categories:</p> <ol> <li>Neutral particles (both basic and composite)</li> <li>Basic stable charged particles</li> <li>Composite charged particles</li> </ol> <p>Warning</p> <p>The code below might be phased out as some of them are not present in <code>master</code> branch of the related projects.</p>"},{"location":"technical_concepts/truth_matching/#neutral-particles","title":"Neutral particles","text":"<p>The truth-matching is done purely with calorimeter info. It is implemented in <code>Calo2MCTool</code>.</p> <p>The tool returns the MC particle that is best matched to the reconstructed particle.</p> <p>The MC <code>dst</code> will provide several relation tables for truth-matching. See this TWiki.</p>"},{"location":"technical_concepts/truth_matching/#basic-stable-charged-particles","title":"Basic stable charged particles","text":"<p>This is done with <code>P2MCPFromProtoP</code>.</p> <p>It finds the <code>ProtoParticle</code> of the reconstructed <code>Particle</code>. Then use the standard truth-matching table to find the linked <code>MCParticle</code>.</p>"},{"location":"technical_concepts/truth_matching/#truth-matching-for-rdx-run-2","title":"Truth-Matching for RDX run 2","text":"<p>For the run 2 RDX analysis, when postprocessing our MC ntuples, we perform truth-matching mostly copied from Phoebe's code for the run 1 analysis.</p> <p>Info</p> <p>Her code for truth-matching can be found in:</p> <ul> <li><code>redoHistos_D0.C</code>+<code>AddD0B_tmp.C</code> (for \\(D^0\\) sample)</li> <li><code>redoHistos_Dst.C</code>+<code>AddB.C</code> (for \\(D^*\\) sample)</li> </ul> <p>in this proc folder from her gitlab run 1 analysis (preservation) code repo.</p> <p>We implement the truth-matching differently from her in order to work (more understandably) with our workflow; rather than using flags and filling all histograms (templates) all at the same time based on those flags, we truth-match each decay mode (i.e. the <code>MC ID</code>s listed here) separately and store the result as a coded integer <code>truthmatch</code> in our postprocessed ntuples.</p> <p>Difference between Phoebe's and our truth-matching</p> <ul> <li> <p>Phoebe's implementation: An event can be used to fill any, and even     multiple, templates, not just templates corresponding to the decay mode     (eg. an event for \\(B^0 \\rightarrow D^* \\mu\\nu\\) MC could pass the truth-     matching requirements and thus be filled in for the template     corresponding to \\(B^0 \\rightarrow D^* X_c(\\rightarrow \\mu\\nu X')X\\)),</p> <p>And indeed I see this happening for a fraction of a percent of all events.</p> </li> <li> <p>Our truth-matching: Takes in the decay mode that the user wants to apply truth-     matching to as an input and will only set <code>truthmatch</code> to a corresponding     value for that decay mode.</p> <p>Additionally, our implementation will never fill in multiple templates with the same event.</p> </li> </ul> <p>To apply our truth-matching when postprocessing ntuples:</p> <ol> <li>Main code is in <code>truth_match.h</code></li> <li> <p>In a postprocessing configuration <code>YAML</code><sup>1</sup>, add <code>truthmatch</code> integer that is calculated using:</p> <ul> <li><code>MC_TRUTH_MATCH_DST(...)</code> (for \\(D^*\\) sample)</li> <li><code>MC_TRUTH_MATCH_D0(...)</code> (for \\(D^0\\) sample)</li> </ul> <p>Note</p> <p>The input parameters for these functions can be found at the bottom of the truth-matching script linked above.</p> <p>As already mentioned, one required input is the decay mode ID.</p> </li> </ol> <p>Optional debugging flags for truth-matching</p> <p>The truth-matching code has some optional debugging flags that can be set if one wants to:</p> <ul> <li>not separate \\(D^{**}_{(s)}\\) cocktails</li> <li>separate \\(D^{**}H\\) cocktails</li> <li>not separate \\(DD\\) cocktails</li> </ul> <p>Nominally, for run2 our <code>truthmatch</code> int is separating \\(D^{**}_{(s)}\\), not separating \\(D^{**}H\\), and partially separating \\(DD\\). Without setting these flags, <code>truthmatch</code> is set to encode all  information that should be relevant for building the run 2 RDX templates.</p> <p>Once this is done, the postprocessed ntuples will contain a <code>truthmatch</code> branch that encodes what type of decay the event was successfully truth-matched to, or <code>truthmatch=0</code> if the event failed to pass the truth-matching requirements. The encoding scheme for <code>truthmatch</code> works as follows: <code>truthmatch=a1b1b2c1c2d1</code> where</p> <ol> <li> <p><code>d1</code>=</p> <ul> <li><code>0</code> if normalization(-like) (i.e. without \\(\\tau\\))</li> <li><code>1</code> if signal(-like)</li> </ul> </li> <li> <p><code>c1c2</code> are two digits referring to the \"primary\" \\(D\\) meson (ie. coming from the \\(B\\)). For \\(DD\\)      decays, this is ambiguous, so <code>c1c2=00</code>. For non-\\(DD\\) decays, <code>c1c2=</code>:</p> <ul> <li> <p><code>01</code> for \\(D^0\\),     <code>02</code> for \\(D^+\\),     <code>03</code> for \\(D^{*0}\\),     <code>04</code> for \\(D^{*+}\\)</p> </li> <li> <p><code>10</code> for all (light) \\(D^{**0}\\)     (i.e. cocktail not separated, but it's required that the specific     \\(D^{**}\\) is possible [included in the dec file] for the considered decay), or if separated:     <code>11</code> for \\(D_0^{*0}\\),     <code>12</code> for \\(D_1^0\\),     <code>13</code> for \\(D_1'^0\\),     <code>14</code> for \\(D_2^{*0}\\)</p> </li> <li> <p><code>20</code> for all (light) \\(D^{**+}\\), or if separated:     <code>21</code> for \\(D_0^{*+}\\),     <code>22</code> for \\(D_1^+\\),     <code>23</code> for \\(D_1'^+\\),     <code>24</code> for \\(D_2^{*+}\\)</p> </li> <li> <p><code>30</code> for all heavy \\(D^{**0}_H\\)     (again, internally required that the decay is possible), or if separated:     <code>31</code> for \\(D(2S)^{*+}\\),     <code>32</code> for \\(D(2S)^+\\),     <code>33</code> for \\(D(2750)^+\\),     <code>34</code> for \\(D(3000)^+\\)</p> </li> <li> <p><code>40</code> for all heavy \\(D^{**+}_H\\), or if separated:     <code>41</code> for \\(D(2S)^{*+}\\),     <code>42</code> for \\(D(2S)^+\\),     <code>43</code> for \\(D(2750)^+\\),     <code>44</code> for \\(D(3000)^+\\)</p> </li> <li> <p><code>50</code> for all strange \\(D^{**}_s\\)     (again, internally require the \\(D^{**}_s\\) is possible), or if separated:     <code>53</code> for \\(D_{1s}'\\),     <code>54</code> for \\(D_{2s}^*\\)     (to keep consistent with \\(D^{**}\\) scheme; there aren't any \"\\(D_{0s}^*, D_{1s}\\)\")</p> </li> </ul> </li> <li> <p><code>b1b2</code> are used to (partially, at least for now) separate <code>DD</code> cocktails, equal to</p> <ul> <li> <p><code>01</code> for a 2-body \\(B\\rightarrow D^{(*)}D^{(*)}\\), <code>02</code> for a 2-body \\(B\\rightarrow D^{(*)(**)}D^{(*)(**)}_s\\)</p> </li> <li> <p><code>10</code> for a 3-body \\(B\\rightarrow D^{(*)}D^{(*)}K^{(*)}\\), <code>20</code> for a 3- or 4-body \\(B\\rightarrow D^{(*)}_sD^{(*)(**)}\\pi(\\pi)\\)</p> </li> </ul> </li> <li> <p><code>a1</code>=</p> <ul> <li><code>0</code> if not a \\(D^{**}_H\\), \\(DD\\), or (light) \\(D^{**} \\rightarrow D^{(*)}\\pi\\pi\\) decay</li> <li><code>1</code> if a \\(DD\\) decay from a \\(B^0\\)</li> <li><code>2</code> if a \\(DD\\) decay from a \\(B^+\\)</li> <li><code>3</code> if a \\(D^{**}_H\\) decay where \\(D^{**}_H \\rightarrow D^* \\rightarrow D\\)     (useful because Phoebe separates this topology from     \\(D^{**}_H \\rightarrow D\\) directly in her templates for the     \\(D^0\\) sample)</li> <li><code>4</code> if a \\(D^{**}_H\\) decay where \\(D^{**}_H \\rightarrow D\\)</li> <li><code>5</code> if a (light) \\(D^{**} \\rightarrow D^{(*)}\\pi\\pi\\) decay</li> </ul> </li> </ol> <p>Example</p> <ul> <li>\\(B^0 \\rightarrow D^* \\mu\\nu\\) will be encoded as <code>000041</code></li> <li>\\(B^- \\rightarrow D^{*0} \\mu\\nu\\) as <code>000031</code></li> <li>\\(B^0 \\rightarrow D^0 \\tau\\nu\\) as <code>000011</code></li> <li>\\(B^0 \\rightarrow D_1' \\tau\\nu\\) (no \\(2\\pi\\)) as <code>000231</code></li> <li>\\(B^+ \\rightarrow D_2^*(\\rightarrow D^*\\pi\\pi)\\mu\\nu\\) as <code>500140</code></li> <li>\\(B^0 \\rightarrow D^{**}_H(\\rightarrow D\\pi\\pi)\\mu\\nu\\) as <code>400400</code></li> <li>\\(B^0 \\rightarrow D^{*+}D^-(\\rightarrow \\mu\\nu X)\\) as <code>101000</code></li> <li>\\(B^0 \\rightarrow D^{*+}D_s(\\rightarrow \\tau\\nu)\\) as <code>102001</code></li> <li>\\(B^0 \\rightarrow D^{0}D^{*-}(\\rightarrow \\mu\\nu X)K^+\\) as <code>110000</code></li> <li>\\(B^+ \\rightarrow D^{*-}D_s(\\rightarrow \\mu\\nu X)\\pi^+\\) as <code>220000</code></li> </ul> <ol> <li> <p>Recall instructions here for postprocessing.\u00a0\u21a9</p> </li> </ol>"}]}